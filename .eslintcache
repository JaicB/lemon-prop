[{"C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\index.js":"1","C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\App.js":"2","C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\reportWebVitals.js":"3","C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Routes.js":"4","C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\redux\\store.js":"5","C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\redux\\reducer.js":"6","C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\AccountNavigation.js":"7","C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\Landing\\RequestAccess.js":"8","C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\Landing\\LandingPage.js":"9","C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\MaintReq\\MaintReq.js":"10","C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\Landing\\RequestSubmitted.js":"11","C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\MaintReq\\SingleMaintReq.js":"12","C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\Properties\\Properties.js":"13","C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\PasswordReset\\RequestReset.js":"14","C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\Payments\\PaymentList.js":"15","C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\AccountDash\\TheDashboard.js":"16","C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\PasswordReset\\UpdatePassword.js":"17","C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\Tenants\\Tenants.js":"18","C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\Landing\\Login.js":"19","C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\MaintReq\\MaintReqList.js":"20","C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\Tenants\\TenantList.js":"21","C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\Tenants\\TenantRequestList.js":"22","C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\Popup.js":"23","C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\Payments\\Payments.js":"24","C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\Payments\\MakePayment.js":"25","C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\Properties\\PropertiesList.js":"26"},{"size":802,"mtime":1612309323801,"results":"27","hashOfConfig":"28"},{"size":784,"mtime":1612309323793,"results":"29","hashOfConfig":"28"},{"size":375,"mtime":1611607528947,"results":"30","hashOfConfig":"28"},{"size":1915,"mtime":1612309323800,"results":"31","hashOfConfig":"28"},{"size":109,"mtime":1612309323803,"results":"32","hashOfConfig":"28"},{"size":888,"mtime":1612309323802,"results":"33","hashOfConfig":"28"},{"size":1798,"mtime":1612224662647,"results":"34","hashOfConfig":"28"},{"size":1097,"mtime":1611961025882,"results":"35","hashOfConfig":"28"},{"size":426,"mtime":1612224662648,"results":"36","hashOfConfig":"28"},{"size":335,"mtime":1612224662650,"results":"37","hashOfConfig":"28"},{"size":451,"mtime":1611941094798,"results":"38","hashOfConfig":"28"},{"size":345,"mtime":1612309323797,"results":"39","hashOfConfig":"28"},{"size":2763,"mtime":1612332961024,"results":"40","hashOfConfig":"28"},{"size":150,"mtime":1611941094800,"results":"41","hashOfConfig":"28"},{"size":1467,"mtime":1612309323798,"results":"42","hashOfConfig":"28"},{"size":150,"mtime":1611941094795,"results":"43","hashOfConfig":"28"},{"size":156,"mtime":1611941094801,"results":"44","hashOfConfig":"28"},{"size":4334,"mtime":1612308402023,"results":"45","hashOfConfig":"28"},{"size":3442,"mtime":1612309323794,"results":"46","hashOfConfig":"28"},{"size":1922,"mtime":1612309323796,"results":"47","hashOfConfig":"28"},{"size":5845,"mtime":1612309656667,"results":"48","hashOfConfig":"28"},{"size":2793,"mtime":1612310213781,"results":"49","hashOfConfig":"28"},{"size":287,"mtime":1612294536151,"results":"50","hashOfConfig":"28"},{"size":373,"mtime":1612309323799,"results":"51","hashOfConfig":"28"},{"size":1825,"mtime":1612309323798,"results":"52","hashOfConfig":"28"},{"size":4368,"mtime":1612334458794,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"qwjnh5",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\index.js",[],["113","114"],"C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\App.js",[],"C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\reportWebVitals.js",[],"C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Routes.js",[],"C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\redux\\store.js",[],"C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\redux\\reducer.js",[],"C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\AccountNavigation.js",[],"C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\Landing\\RequestAccess.js",[],"C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\Landing\\LandingPage.js",[],"C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\MaintReq\\MaintReq.js",[],"C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\Landing\\RequestSubmitted.js",[],"C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\MaintReq\\SingleMaintReq.js",[],"C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\Properties\\Properties.js",["115","116","117"],"C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\PasswordReset\\RequestReset.js",[],"C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\Payments\\PaymentList.js",[],"C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\AccountDash\\TheDashboard.js",[],"C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\PasswordReset\\UpdatePassword.js",[],"C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\Tenants\\Tenants.js",["118"],"import axios from 'axios'\r\nimport React, {useState} from 'react'\r\nimport TenantList from '../Tenants/TenantList'\r\nimport TenantRequestList from '../Tenants/TenantRequestList'\r\n\r\nconst Tenants = props => {\r\n    const [newTenantDisplay, setNewTenantDisplay] = useState(false)\r\n    const [currentTenants, setCurrentTenants] = useState([])\r\n    const [submitTenant, setSubmitTenant] = useState(false)\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n    const [propId, setPropId] = useState()\r\n    const [dueDate, setDueDate] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [petBool, setPetBool] = useState(null)\r\n\r\n    function newTenant() {\r\n        console.log('clicked')\r\n        setSubmitTenant(false)\r\n        setNewTenantDisplay(true)          \r\n    }\r\n\r\n    function submit() {\r\n        console.log('submitted')\r\n        \r\n        axios.post('/api/manager/tenants', {\r\n            first_name: firstName,\r\n            last_name: lastName,\r\n            phone: phone,\r\n            email: email,\r\n            pet: petBool !== null ? petBool : false,\r\n            is_approved: true,\r\n            prop_id: propId,\r\n            password: password,\r\n            due_date: dueDate\r\n        })\r\n        .then(res => {\r\n            setSubmitTenant(true)\r\n            setNewTenantDisplay(false)\r\n            setFirstName('')\r\n            setLastName('')\r\n            setPhone('')\r\n            setEmail('')\r\n            setPetBool(null)\r\n            setPropId()\r\n            setPassword('')\r\n            setDueDate('')\r\n            axios.get('/api/manager/tenants/true')\r\n            .then(res => {\r\n                setCurrentTenants(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n        })\r\n    }\r\n\r\n    function checkbox(checkbox) {\r\n        if (checkbox.checked === true) {\r\n            setPetBool(true)\r\n        } else if (checkbox.checked === false){\r\n            setPetBool(false)\r\n        }\r\n    }\r\n\r\n return (\r\n  <div>\r\n      <div>\r\n          <div>\r\n            <h1>Current Tenants</h1>\r\n            <TenantList setCurrentTenants={setCurrentTenants} currentTenants={currentTenants}/>\r\n          </div>\r\n          <div>\r\n            <h1>Tenant Requests</h1>\r\n            <TenantRequestList setCurrentTenants={setCurrentTenants} />\r\n          </div>\r\n          <button className=\"submit\" onClick={newTenant}>New Tenant</button>\r\n      </div>\r\n      {newTenantDisplay === true ? (\r\n        <div>\r\n            <div>\r\n                <div>\r\n                    <div>First Name: </div>\r\n                    <input onChange={e => setFirstName(e.target.value)}></input> \r\n                </div>\r\n                <div>\r\n                    <div>Last Name: </div>\r\n                    <input onChange={e => setLastName(e.target.value)}></input> \r\n                </div>\r\n                <div>\r\n                    <div>Property ID: </div>\r\n                    <input onChange={e => setPropId(e.target.value)}></input> \r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div>\r\n                    <div>Phone: </div>\r\n                    <input onChange={e => setPhone(e.target.value)}></input> \r\n                </div>\r\n                <div>\r\n                    <div>Email: </div>\r\n                    <input onChange={e => setEmail(e.target.value)}></input> \r\n                </div>\r\n                <div>\r\n                    <div>Password: </div>\r\n                    <input onChange={e => setPassword(e.target.value)}></input> \r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div>\r\n                    <div>Due Date: </div>\r\n                    <input onChange={e => setDueDate(e.target.value)}></input> \r\n                </div>\r\n                <div>\r\n                    <input type='checkbox' name='pets' id='pets' onClick={() => checkbox(document.getElementById('pets'))}></input>\r\n                    <label htmlFor={'pets'}>Pets?</label>\r\n                </div>\r\n                <div>\r\n                    <button className='Submit' onClick={submit}>Submit</button> \r\n                </div>\r\n            </div>\r\n        </div>) : null}\r\n  </div>\r\n )\r\n}\r\nexport default Tenants","C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\Landing\\Login.js",["119"],"import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { loginUser } from '../../redux/reducer'\r\n// import { Link } from 'react-router-dom'\r\nimport Popup from '../Popup'\r\nimport { useForm } from 'react-hook-form'\r\n\r\nconst Login = props => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data)\r\n  }\r\n\r\n  const togglePopup = () => {\r\n    setIsOpen(!isOpen)\r\n  }\r\n\r\n  function submit() {\r\n    // setEmail(email)\r\n    // setPassword(password)\r\n    axios.post('/auth/login', { email, password })\r\n      .then((res) => {\r\n        // console.log('login successful - 1')\r\n        props.loginUser(res.data.email, res.data.user_id, res.data.admin, res.data.approved)\r\n        // console.log('login successful - 2')\r\n        props.history.push('/dashboard')\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        placeholder='Email'\r\n        type=\"text\"\r\n        value={email}\r\n        onChange={e => setEmail(e.target.value)}>\r\n      </input>\r\n      <input\r\n        placeholder='Password'\r\n        type=\"text\"\r\n        value={password}\r\n        onChange={e => setPassword(e.target.value)}>\r\n      </input>\r\n      {/* <Link to='/dashboard'> */}\r\n      <button onClick={e => submit()}>Login</button>\r\n      {/* </Link> */}\r\n      <button>I need access</button>\r\n      <input type=\"button\"\r\n        value=\"Login (popup)\"\r\n        onClick={togglePopup} />\r\n      {isOpen && <Popup content={<>\r\n        <div className=\"member-login\">\r\n          <h2>Lemon Prop Mgmt</h2>\r\n          <p>Just a placeholder for any extra text we may need here</p>\r\n          <input\r\n            placeholder='Email'\r\n            type=\"text\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}>\r\n          </input>\r\n          <input\r\n            placeholder='Password'\r\n            type=\"text\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}>\r\n          </input>\r\n          <button onClick={e => submit()}>Log in</button>\r\n        </div>\r\n        {/* Request access */}\r\n        <div className=\"login-request\">\r\n          <h2>Request access to the portal</h2>\r\n          <p>Need access? Fill out your information below and we'll send you an activation link via email. To best match your account, please use the same information provided to your Property Manager.</p>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <input type=\"text\" name=\"firstname\" placeholder=\"First Name\" ref={register({ required: true })} />\r\n            <input type=\"text\" name=\"lastname\" placeholder=\"Last Name\" ref={register({ required: true })} />\r\n            <input type=\"tel\" name=\"phone\" placeholder=\"Phone number\" ref={register({ required: true, minLength: 6, maxLength: 12 })} />\r\n            <input type=\"text\" name=\"email\" placeholder=\"Email address\" ref={register({ required: true, pattern: /^\\S+@\\S+$/i })} />\r\n            <input type=\"radio\" name=\"pets\" placeholder=\"Pets\" ref={register} />Pets\r\n            <input type=\"submit\" />\r\n          </form>\r\n        </div>\r\n      </>}\r\n        handleClose={togglePopup} />\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default connect(null, { loginUser })(Login)","C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\MaintReq\\MaintReqList.js",["120","121","122"],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst MaintReqList = props => {\r\n\r\n  const [myList, setMyList] = useState([])\r\n  const [openList, setOpenList] = useState([])\r\n  const [closedList, setClosedList] = useState([])\r\n  const [admin, setAdmin] = useState(props.admin)\r\n  const [user_id, setUserId] = useState(props.user_id)\r\n\r\n  useEffect(() => {\r\n    if (admin === false) {\r\n      axios.get(`/api/tenant/${user_id}/mr`)\r\n        .then(res => {\r\n          setMyList(res.data)\r\n        })\r\n        .catch(err => console.log(err))\r\n    } else if (admin === true) {\r\n      axios.get('/api/manager/mr/false')\r\n        .then(res => {\r\n          setOpenList(res.data)\r\n        })\r\n        .catch(err => console.log(err))\r\n      axios.get('/api/manager/mr/true')\r\n        .then(res => {\r\n          setClosedList(res.data)\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n  }, [])\r\n\r\n  function mapIt(array) {\r\n    return array.map((element) => {\r\n      return (\r\n        <div key={element.maint_req_id}>\r\n          <div>{element.date_sub}</div>\r\n          <div>{element.subject}</div>\r\n          {admin === false ? null : <div>{element.prop_id}</div>}\r\n          <div>{element.status}</div>\r\n          {admin === true && element.status === 'open' ? <button>Complete</button> : null}\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className='maint-req'>\r\n      <h1>Maintenance Request History</h1>\r\n      {admin === false ? mapIt(myList) : null}\r\n      {admin === true ? mapIt(openList) : null}\r\n      {admin === true ? mapIt(closedList) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  console.log('state:', state)\r\n  return {\r\n    email: state.email,\r\n    user_id: state.user_id,\r\n    admin: state.admin,\r\n    approved: state.approved\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MaintReqList)","C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\Tenants\\TenantList.js",["123","124"],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst TenantList = props => {\r\n    // const [currentTenants, setCurrentTenants] = useState([])\r\n    const {setCurrentTenants, currentTenants} = props\r\n    const [addresses, setAddresses] = useState([])\r\n    const [admin, setAdmin] = useState(true)\r\n    const [editBool, setEditBool] = useState(false)\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n    const [propId, setPropId] = useState()\r\n    const [buttonId, setButtonId] = useState()\r\n    const [petBool, setPetBool] = useState(null)\r\n\r\n    useEffect(() => {\r\n      setAdmin(props.admin)\r\n    }, [])\r\n  \r\n    useEffect(() => {\r\n\r\n       if (admin === true) {\r\n        axios.get('/api/manager/tenants/true')\r\n          .then(res => {\r\n            setCurrentTenants(res.data)\r\n          })\r\n          .catch(err => console.log(err))\r\n        axios.get('/api/manager/properties')\r\n        .then(res => {\r\n            setAddresses(res.data)\r\n        })\r\n        .catch(err => console.log(err))\r\n      }\r\n    }, [props])\r\n\r\n    function clickEdit(id) {\r\n        setEditBool(true)\r\n        setButtonId(id)\r\n    }\r\n\r\n    function checkbox(checkbox) {\r\n        if (checkbox.checked === true) {\r\n            setPetBool(true)\r\n        } else if (checkbox.checked === false){\r\n            setPetBool(false)\r\n        }\r\n    }\r\n\r\n    function submit(element) {\r\n        axios.put(`/api/manager/tenants/${element.user_id}`, {\r\n            first_name: firstName !== '' ? firstName : element.first_name,\r\n            last_name: lastName !== '' ? lastName : element.last_name,\r\n            phone: phone !== '' ? phone : element.phone,\r\n            email: email !== '' ? email : element.email,\r\n            pet: petBool !== null ? petBool : element.pet,\r\n            is_approved: true,\r\n            prop_id: propId ? propId : element.prop_id\r\n        })\r\n        .then(res => {\r\n            console.log(petBool)\r\n            console.log(element.pet)\r\n              setEditBool(false)\r\n              setFirstName('')\r\n              setLastName('')\r\n              setPhone('')\r\n              setEmail('')\r\n              setPetBool(null)\r\n              setPropId()\r\n            axios.get('/api/manager/tenants/true')\r\n            .then(res => {\r\n                setCurrentTenants(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    function mapIt(array) {\r\n        let currentAddress\r\n        return array.map((element) => {\r\n            for (let i = 0; i < addresses.length; i++) {\r\n               if (element.prop_id === addresses[i].prop_id) {\r\n                currentAddress = addresses[i].address\r\n            }  \r\n        }\r\n          return (\r\n            <div key={element.user_id}>\r\n            <button onClick={() => clickEdit(element.user_id)}>Edit</button>\r\n              {editBool === false ? (\r\n                <div>\r\n                    <div>{element.user_id}</div>\r\n                    <div>{`${element.first_name} ${element.last_name}`}</div>\r\n                    <div>{element.prop_id && currentAddress}</div>\r\n                    <div>{element.email}</div>\r\n                    <div>{element.phone}</div>\r\n                    {element.pet === true ? <div>Yes</div> : <div>No</div>}\r\n                    <div>{element.due_date}</div>\r\n                </div>\r\n                ) : (\r\n                    element.user_id === buttonId ? (\r\n                    <div>\r\n                        <div>{element.user_id}</div>\r\n                        <input defaultValue={`${element.first_name}`} onChange={e => setFirstName(e.target.value)}></input>\r\n                        <input defaultValue={`${element.last_name}`} onChange={e => setLastName(e.target.value)}></input>\r\n                        <input defaultValue={element.prop_id} onChange={e => setPropId(e.target.value)}></input>\r\n                        <input defaultValue={element.email} onChange={e => setEmail(e.target.value)}></input>\r\n                        <input defaultValue={element.phone} onChange={e => setPhone(e.target.value)}></input>\r\n                        <input type='checkbox' name='pets' id='pets' defaultChecked={element.pet} onClick={() => checkbox(document.getElementById('pets'))}></input>\r\n                        <label htmlFor={'pets'}>Pets?</label>\r\n                        {/* <input defaultValue={element.approved} onchange={e => setApproved(e.targetValue)}></input> */}\r\n                        <button className='submit' onClick={() => submit(element)}>Save</button>\r\n                     </div>\r\n                    ) : (\r\n                        <div>\r\n                            <div>{element.user_id}</div>\r\n                            <div>{`${element.first_name} ${element.last_name}`}</div>\r\n                            <div>{currentAddress}</div>\r\n                            <div>{element.email}</div>\r\n                            <div>{element.phone}</div>\r\n                            {element.pets === true ? <div>Yes</div> : <div>No</div>}\r\n                            <div>{element.due_date}\r\n                        </div>\r\n                </div> \r\n                    )\r\n                )\r\n              }\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n\r\n    return (\r\n        <div className='maint-req'>\r\n            {mapIt(currentTenants)}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    console.log('state:', state)\r\n    return {\r\n      email: state.email,\r\n      user_id: state.user_id,\r\n      admin: state.admin,\r\n      approved: state.approved\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TenantList)","C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\Tenants\\TenantRequestList.js",["125","126"],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst TenantRequestList = props => {\r\n\r\n    const [tenantRequests, setTenantRequests] = useState([])\r\n    const {setCurrentTenants} = props\r\n     // const [addresses, setAddresses] = useState([])\r\n    const [admin, setAdmin] = useState(props.admin)\r\n  \r\n    useEffect(() => {\r\n        setAdmin(props.admin)\r\n      }, [])\r\n      \r\n    useEffect(() => {\r\n      if (admin === false) {\r\n        return ('You do not have access to this data.')\r\n      } else if (admin === true) {\r\n        axios.get('/api/manager/tenants/false')\r\n          .then(res => {\r\n            setTenantRequests(res.data)\r\n          })\r\n          .catch(err => console.log(err))\r\n      }\r\n    }, [props])\r\n\r\n    function approve(element) {\r\n        axios.put(`/api/manager/tenants/${element.user_id}`, {\r\n            first_name: element.first_name,\r\n            last_name: element.last_name,\r\n            phone: element.phone,\r\n            email: element.email,\r\n            pet: element.pet,\r\n            is_approved: true,\r\n            prop_id: element.prop_id\r\n        })\r\n        .then(res => {\r\n            axios.get('/api/manager/tenants/false')\r\n            .then(res => {\r\n                setTenantRequests(res.data)\r\n                axios.get('/api/manager/tenants/true')\r\n                .then(res => {\r\n                    setCurrentTenants(res.data)\r\n                })\r\n                .catach(err => console.log(err))\r\n            })\r\n            .catch(err => console.log(err))\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    function mapIt(array) {\r\n        // let currentAddress\r\n        return array.map((element) => {\r\n           \r\n          return (\r\n            <div key={element.user_id}>\r\n              <div>{element.user_id}</div>\r\n              <div>{`${element.first_name} ${element.last_name}`}</div>\r\n              {/* <div>{currentAddress}</div> */}\r\n              <div>{element.email}</div>\r\n              <div>{element.phone}</div>\r\n              {element.pets === true ? <div>Yes</div> : <div>No</div>}\r\n              <div>{element.due_date}</div>\r\n              {admin === true && element.approved === false ? <button \r\n                className='submit' \r\n                onClick={() => approve(element)}>Approve</button> : null}\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n\r\n    return (\r\n        <div>\r\n            {mapIt(tenantRequests)}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    console.log('state:', state)\r\n    return {\r\n      email: state.email,\r\n      user_id: state.user_id,\r\n      admin: state.admin,\r\n      approved: state.approved\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TenantRequestList)","C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\Popup.js",[],"C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\Payments\\Payments.js",[],"C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\Payments\\MakePayment.js",["127"],"import axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport PaymentList from './PaymentList';\r\n\r\ntoast.configure();\r\n\r\n\r\n// Reuseable component that just displays the ability to make a payment. I believe this would just be the StripeCheckout button\r\n\r\nconst MakePayment = props => {\r\n    const [rentAmount, setRentAmount] = useState(1500.55)\r\n\r\n\r\n    async function handleToken(token) {\r\n        console.log(token, rentAmount)\r\n        await axios.post('/pay_rent', {\r\n            token,\r\n            rentAmount\r\n        }).then(res => {\r\n            console.log(res.data.status);\r\n            if (res.data.status === 'success') {\r\n                console.log('status = success')\r\n                toast('Success! Your rent has been paid!',\r\n                    { type: 'success' })\r\n            } else {\r\n                console.log('status = error')\r\n                toast('Something went wrong',\r\n                    { type: 'error' })\r\n            }\r\n            setRentAmount('')\r\n        }).catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <div className='donate'>\r\n            <div className='container'>\r\n                <div>MakePayment.js</div>\r\n                <div> Your rent amount due: {rentAmount} </div>\r\n                <StripeCheckout\r\n                    stripeKey='pk_test_51IEMDRHaijm3D4Gz5082wV01blikaeeyYMcLRDpCWBUPTHQSOhYA5t5lRF7VfAmzitNMVR1JIxYSuKwOPYPAmfY700a2qf4x3J'\r\n                    token={handleToken}\r\n                    billingAddress\r\n                    amount={rentAmount * 100}\r\n                    label='Pay Rent'\r\n\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MakePayment","C:\\Users\\Nami\\Sync\\devmountain\\unit7\\lemon-prop\\src\\Components\\Properties\\PropertiesList.js",["128","129"],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":6,"column":12,"nodeType":"136","messageId":"137","endLine":6,"endColumn":17},{"ruleId":"134","severity":1,"message":"138","line":6,"column":19,"nodeType":"136","messageId":"137","endLine":6,"endColumn":27},{"ruleId":"134","severity":1,"message":"139","line":9,"column":12,"nodeType":"136","messageId":"137","endLine":9,"endColumn":26},{"ruleId":"134","severity":1,"message":"140","line":7,"column":12,"nodeType":"136","messageId":"137","endLine":7,"endColumn":24},{"ruleId":"134","severity":1,"message":"141","line":5,"column":10,"nodeType":"136","messageId":"137","endLine":5,"endColumn":14},{"ruleId":"134","severity":1,"message":"138","line":10,"column":17,"nodeType":"136","messageId":"137","endLine":10,"endColumn":25},{"ruleId":"134","severity":1,"message":"142","line":11,"column":19,"nodeType":"136","messageId":"137","endLine":11,"endColumn":28},{"ruleId":"143","severity":1,"message":"144","line":32,"column":6,"nodeType":"145","endLine":32,"endColumn":8,"suggestions":"146"},{"ruleId":"143","severity":1,"message":"147","line":21,"column":8,"nodeType":"145","endLine":21,"endColumn":10,"suggestions":"148"},{"ruleId":"143","severity":1,"message":"149","line":37,"column":8,"nodeType":"145","endLine":37,"endColumn":15,"suggestions":"150"},{"ruleId":"143","severity":1,"message":"147","line":14,"column":10,"nodeType":"145","endLine":14,"endColumn":12,"suggestions":"151"},{"ruleId":"143","severity":1,"message":"152","line":26,"column":8,"nodeType":"145","endLine":26,"endColumn":15,"suggestions":"153"},{"ruleId":"134","severity":1,"message":"154","line":6,"column":8,"nodeType":"136","messageId":"137","endLine":6,"endColumn":19},{"ruleId":"143","severity":1,"message":"147","line":16,"column":10,"nodeType":"145","endLine":16,"endColumn":12,"suggestions":"155"},{"ruleId":"143","severity":1,"message":"156","line":27,"column":10,"nodeType":"145","endLine":27,"endColumn":17,"suggestions":"157"},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"no-unused-vars","'admin' is assigned a value but never used.","Identifier","unusedVar","'setAdmin' is assigned a value but never used.","'submitProperty' is assigned a value but never used.","'submitTenant' is assigned a value but never used.","'Link' is defined but never used.","'setUserId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'admin' and 'user_id'. Either include them or remove the dependency array.","ArrayExpression",["160"],"React Hook useEffect has a missing dependency: 'props.admin'. Either include it or remove the dependency array. If 'setAdmin' needs the current value of 'props.admin', you can also switch to useReducer instead of useState and read 'props.admin' in the reducer.",["161"],"React Hook useEffect has missing dependencies: 'admin' and 'setCurrentTenants'. Either include them or remove the dependency array.",["162"],["163"],"React Hook useEffect has a missing dependency: 'admin'. Either include it or remove the dependency array.",["164"],"'PaymentList' is defined but never used.",["165"],"React Hook useEffect has missing dependencies: 'admin' and 'setCurrentProperties'. Either include them or remove the dependency array.",["166"],"no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"169","fix":"173"},{"desc":"174","fix":"175"},{"desc":"169","fix":"176"},{"desc":"177","fix":"178"},"Update the dependencies array to be: [admin, user_id]",{"range":"179","text":"180"},"Update the dependencies array to be: [props.admin]",{"range":"181","text":"182"},"Update the dependencies array to be: [admin, props, setCurrentTenants]",{"range":"183","text":"184"},{"range":"185","text":"182"},"Update the dependencies array to be: [admin, props]",{"range":"186","text":"187"},{"range":"188","text":"182"},"Update the dependencies array to be: [admin, props, setCurrentProperties]",{"range":"189","text":"190"},[962,964],"[admin, user_id]",[815,817],"[props.admin]",[1226,1233],"[admin, props, setCurrentTenants]",[437,439],[785,792],"[admin, props]",[580,582],[855,862],"[admin, props, setCurrentProperties]"]