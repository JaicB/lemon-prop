[{"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/index.js":"1","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/App.js":"2","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/reportWebVitals.js":"3","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Routes.js":"4","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/AccountNavigation.js":"5","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/redux/store.js":"6","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/LandingPage.js":"7","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/redux/reducer.js":"8","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Payments/PaymentList.js":"9","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/MaintReq/SingleMaintReq.js":"10","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/RequestAccess.js":"11","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/PasswordReset/RequestReset.js":"12","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Properties/Properties.js":"13","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/AccountDash/TheDashboard.js":"14","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/RequestSubmitted.js":"15","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/MaintReq/MaintReq.js":"16","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/PasswordReset/UpdatePassword.js":"17","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Tenants/Tenants.js":"18","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/Login.js":"19","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/MaintReq/MaintReqList.js":"20","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Tenants/TenantList.js":"21","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Tenants/TenantRequestList.js":"22","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Popup.js":"23","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Payments/Payments.js":"24","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Payments/MakePayment.js":"25","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Properties/PropertiesList.js":"26","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/redux/paymentReducer.js":"27"},{"size":778,"mtime":1612306541227,"results":"28","hashOfConfig":"29"},{"size":736,"mtime":1612465561666,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1611607556846,"results":"31","hashOfConfig":"29"},{"size":1881,"mtime":1612308183128,"results":"32","hashOfConfig":"29"},{"size":1668,"mtime":1612465546181,"results":"33","hashOfConfig":"29"},{"size":371,"mtime":1612409506261,"results":"34","hashOfConfig":"29"},{"size":458,"mtime":1612465781531,"results":"35","hashOfConfig":"29"},{"size":773,"mtime":1612413786230,"results":"36","hashOfConfig":"29"},{"size":1510,"mtime":1612465693873,"results":"37","hashOfConfig":"29"},{"size":328,"mtime":1612306541226,"results":"38","hashOfConfig":"29"},{"size":1066,"mtime":1612465788933,"results":"39","hashOfConfig":"29"},{"size":141,"mtime":1612286956765,"results":"40","hashOfConfig":"29"},{"size":2855,"mtime":1612465541793,"results":"41","hashOfConfig":"29"},{"size":4057,"mtime":1612465720294,"results":"42","hashOfConfig":"29"},{"size":438,"mtime":1612465786843,"results":"43","hashOfConfig":"29"},{"size":376,"mtime":1612465785094,"results":"44","hashOfConfig":"29"},{"size":147,"mtime":1612286956765,"results":"45","hashOfConfig":"29"},{"size":4136,"mtime":1612389521120,"results":"46","hashOfConfig":"29"},{"size":3100,"mtime":1612465790217,"results":"47","hashOfConfig":"29"},{"size":2910,"mtime":1612465690239,"results":"48","hashOfConfig":"29"},{"size":4881,"mtime":1612465539655,"results":"49","hashOfConfig":"29"},{"size":2274,"mtime":1612465698412,"results":"50","hashOfConfig":"29"},{"size":274,"mtime":1612287388563,"results":"51","hashOfConfig":"29"},{"size":355,"mtime":1612465541124,"results":"52","hashOfConfig":"29"},{"size":2471,"mtime":1612465691028,"results":"53","hashOfConfig":"29"},{"size":3553,"mtime":1612465542433,"results":"54","hashOfConfig":"29"},{"size":1096,"mtime":1612465276018,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"dlyh98",{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"58"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/index.js",[],["122","123"],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/App.js",["124"],"import React, { useEffect } from 'react'\nimport axios from 'axios'\nimport routes from './Routes'\nimport AccountNavigation from './Components/AccountNavigation'\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { loginUser } from './redux/reducer'\n\nfunction App(props) {\n  useEffect(() => {\n    axios.get(`/auth/user`).then((res) => {\n      props.loginUser(res.data.email, res.data.user_id, res.data.admin, res.data.approved);\n    }).catch(err => console.log(err))\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <AccountNavigation />\n      {routes}\n    </div>\n  );\n}\nfunction mapStateToProps(reduxState) {\n  console.log(reduxState);\n  return reduxState\n}\nexport default connect(mapStateToProps, { loginUser })(App)\n","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/reportWebVitals.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Routes.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/AccountNavigation.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/redux/store.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/LandingPage.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/redux/reducer.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Payments/PaymentList.js",["125","126","127"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { updatePaymentsTnt, updatePaymentsMgr } from '../../redux/paymentReducer';\n\n// List of tenants' past payments\nconst PaymentList = props => {\n    let { properties, changeProperties } = useState([])\n    const { admin, user_id } = props\n\n    useEffect(() => {\n        if (admin === false) {\n            props.updatePaymentsTnt(user_id).then(res => console.log(res)\n            )\n        } else if (admin === true) {\n            props.updatePaymentsMgr()\n        }\n    }, [user_id])\n\n    function mappedList(array) {\n        return array.map((el) => {\n            return (\n                <div key={el.invoice_id}>\n                    <div> {el.invoice_id} </div>\n                    <div> {el.date_paid} </div>\n                    <div> {el.amt_paid} </div>\n                    {admin === true ? <div> {el.user_id} </div> : null}\n                </div>\n            )\n        })\n    }\n\n    return (\n        <div>\n            <p>PaymentList</p>\n            {admin === false ? mappedList(props.tnt_payments_list) : mappedList(props.mgr_payments_list)}\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user_id: state.user.user_id,\n        admin: state.user.admin,\n        mgr_payments_list: state.payments.mgr_payments_list,\n        tnt_payments_list: state.payments.tnt_payments_list\n    }\n}\n\nexport default connect(mapStateToProps, { updatePaymentsTnt, updatePaymentsMgr })(PaymentList)","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/MaintReq/SingleMaintReq.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/RequestAccess.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/PasswordReset/RequestReset.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Properties/Properties.js",["128","129","130"],"import axios from 'axios'\nimport React, { useState } from 'react'\nimport PropertiesList from '../Properties/PropertiesList'\n\nconst Properties = props => {\n    const [newPropertyDisplay, setNewPropertyDisplay] = useState(false)\n    const [currentProperties, setCurrentProperties] = useState([])\n    const [submitProperty, setSubmitProperty] = useState(false)\n    const [address, setAddress] = useState('')\n    const [leaseAmt, setLeaseAmt] = useState()\n    const [leaseStatus, setLeaseStatus] = useState(null)\n    const { user_id, admin } = props\n\n    function newProperty() {\n        setSubmitProperty(false)\n        setNewPropertyDisplay(true)\n    }\n\n    function submit() {\n        axios.post('/api/manager/properties', {\n            address: address,\n            leaseAmt: leaseAmt,\n            status: leaseStatus !== null ? leaseStatus : false\n        })\n            .then(res => {\n                setSubmitProperty(true)\n                setNewPropertyDisplay(false)\n                setAddress('')\n                setLeaseAmt()\n                setLeaseStatus(null)\n                axios.get('/api/manager/properties')\n                    .then(res => {\n                        setCurrentProperties(res.data)\n                    })\n                    .catch(err => console.log(err))\n            })\n    }\n\n    function checkbox(checkbox) {\n        if (checkbox.checked === true) {\n            setLeaseStatus(true)\n        } else if (checkbox.checked === false) {\n            setLeaseStatus(false)\n        }\n    }\n\n    return (\n        <div>\n            <div>\n                <div>\n                    <h1>Current Properties</h1>\n                    <PropertiesList setCurrentProperties={setCurrentProperties} currentProperties={currentProperties} />\n                </div>\n                <button className=\"submit\" onClick={() => newProperty()}>New Property</button>\n            </div>\n            {newPropertyDisplay === true ? (\n                <div>\n                    <div>\n                        <div>Address: </div>\n                        <input onChange={e => setAddress(e.target.value)}></input>\n                    </div>\n                    <div>\n                        <div>Lease Amount: </div>\n                        <input onChange={e => setLeaseAmt(e.target.value)} placeholder='$'></input>\n                    </div>\n                    <div>\n                        <input type='checkbox' name='leaseStatus' id='leaseStatus' onClick={() => checkbox(document.getElementById('leaseStatus'))}></input>\n                        <label htmlFor={'leaseStatus'}>Active Lease?</label>\n                    </div>\n                    <div>\n                        <button className='Submit' onClick={() => submit()}>Submit</button>\n                    </div>\n                </div>) : null}\n        </div>\n    )\n}\n\nexport default Properties","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/AccountDash/TheDashboard.js",["131","132","133","134","135","136"],"import React, { useEffect, useState } from 'react'\nimport MakePayment from '../Payments/MakePayment'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport MaintReqList from '../MaintReq/MaintReqList'\n\n\nconst TheDashboard = props => {\n  const [tenantOpenMr, setTenantOpenMr] = useState([])\n  const [managerOpenMr, setManagerOpenMr] = useState([])\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [email, setEmail] = useState('')\n  const [phone, setPhone] = useState('')\n  const [tenantInfo, setTenantInfo] = useState([])\n  const [editBool, setEditBool] = useState(false)\n  const [buttonId, setButtonId] = useState()\n  const { user_id, admin } = props\n\n  useEffect(() => {\n    if (admin === false) {\n      axios.get(`/api/tenant/get/${user_id}`)\n        .then(res => {\n          setTenantInfo(res.data)\n        })\n        .catch(err => console.log(err))\n    }\n  }, [user_id])\n\n  function clickEdit(id) {\n    setEditBool(true)\n    setButtonId(id)\n  }\n\n  function editTenant(element) {\n    axios.put(`/api/tenant/:${element.user_id}`, {\n      first_name: firstName !== '' ? firstName : element.first_name,\n      last_name: lastName !== '' ? lastName : element.last_name,\n      phone: phone !== '' ? phone : element.phone,\n      email: email !== '' ? email : element.email\n    })\n      .then(res => {\n        setFirstName('')\n        setLastName('')\n        setPhone('')\n        setEmail('')\n      })\n      .catch(err => console.log(err))\n  }\n\n  function mappedTenant(array) {\n    return array.map((element) => {\n\n      return (\n        <div key={element.user_id}>\n          <button onClick={() => clickEdit(element.user_id)}>Edit</button>\n          {editBool === false ? (\n            <div>\n              <div>{element.user_id}</div>\n              <div>{element.first_name}</div>\n              <div>{element.last_name}</div>\n              <div>{element.phone}</div>\n              <div>{element.email}</div>\n            </div>\n          ) : (\n              element.user_id === buttonId ? (\n                <div>\n                  <div>{element.user_id}</div>\n                  <input defaultValue={`${element.first_name}`} onChange={e => setFirstName(e.target.value)}></input>\n                  <input defaultValue={`${element.last_name}`} onChange={e => setLastName(e.target.value)}></input>\n                  <input defaultValue={element.phone} onChange={e => setPhone(e.target.value)}></input>\n                  <input defaultValue={element.email} onChange={e => setEmail(e.target.value)}></input>\n                  <button className='submit' onClick={() => editTenant(element)}>Save</button>\n                </div>\n              ) : (\n                  <div>\n                    <div>{element.user_id}</div>\n                    <div>{element.first_name}</div>\n                    <div>{element.last_name}</div>\n                    <div>{element.phone}</div>\n                    <div>{element.email}</div>\n                  </div>\n                )\n            )\n          }\n        </div >\n      )\n    })\n  }\n\n  return (\n    <div>\n      <p>TheDashboard</p>\n      <div>\n        {/* <h2>Open Maintenance Requests:</h2> */}\n        <MaintReqList open={true} />\n      </div>\n      <div>\n        {admin === false ? <h2>My Info:</h2> : null}\n        <div className=\"edit-tenant\">\n          {mappedTenant(tenantInfo)}\n        </div>\n      </div>\n    </div>\n\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    email: state.user.email,\n    user_id: state.user.user_id,\n    admin: state.user.admin,\n    approved: state.user.approved\n  }\n}\n\nexport default connect(mapStateToProps)(TheDashboard)\n\n//Tenant: \n// [ ] Display make payment\n// [X] get open Maintenance requests or show some \"error if you should have a request still open email manager...\"\n// [ ] Edit user app.put('/api/tenant/:user_id', tenantCtrl.editUser)\n\n//Manager: \n// [ ] Total Income this month (maybe add, outstanding balance -- can add the past due amounts below and display it)\n// [X]all open mrs\n// [ ]past due payments","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/RequestSubmitted.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/MaintReq/MaintReq.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/PasswordReset/UpdatePassword.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Tenants/Tenants.js",["137"],"import React, {useState} from 'react'\nimport TenantList from '../Tenants/TenantList'\nimport TenantRequestList from '../Tenants/TenantRequestList'\n\nconst Tenants = props => {\n    const [newTenantDisplay, setNewTenantDisplay] = useState(false)\n    const [submitTenant, setSubmitTenant] = useState(false)\n\n    function newTenant() {\n        console.log('clicked')\n        setSubmitTenant(false)\n        setNewTenantDisplay(true)          \n    }\n\n    function submit() {\n        console.log('submitted')\n        setSubmitTenant(true)\n        setNewTenantDisplay(false)\n    }\n\n return (\n  <div>\n      <div>\n          <div>\n            <h1>Current Tenants</h1>\n            <TenantList />\n          </div>\n          <div>\n            <h1>Tenant Requests</h1>\n            <TenantRequestList />\n          </div>\n          <button className=\"submit\" onClick={newTenant}>New Tenant</button>\n      </div>\n      {newTenantDisplay === true ? (\n        <div>\n            <div>\n                <div>\n                    <div>Name: </div>\n                    <input></input> \n                </div>\n                <div>\n                    <div>Address: </div>\n                    <input></input> \n                </div>\n            </div>\n            <div>\n                <div>\n                    <div>Phone: </div>\n                    <input></input> \n                </div>\n                <div>\n                    <div>Email: </div>\n                    <input></input> \n                </div>\n            </div>\n            <div>\n                <div>\n                    <div>Password: </div>\n                    <input></input> \n                </div>\n                <div>\n                    <div>Due Date: </div>\n                    <input></input> \n                </div>\n            </div>\n            <div>\n                <div>\n                    <div>Password: </div>\n                    <input></input> \n                </div>\n                <div>\n                    <input type='radio' placeholder='Pets: '></input>\n                    <button className='Submit' onClick={submit}>Submit</button> \n                </div>\n            </div>\n        </div>) : null}\n  </div>\n )\n}\nexport default Tenants","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/Login.js",["138"],"import React, { useState } from 'react'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport { loginUser } from '../../redux/reducer'\nimport Popup from '../Popup'\nimport { useForm } from 'react-hook-form'\n\nconst Login = props => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [isOpen, setIsOpen] = useState(false)\n  const { register, handleSubmit, errors } = useForm();\n\n  const onSubmit = (data) => {\n    console.log(data)\n  }\n\n  const togglePopup = () => {\n    setIsOpen(!isOpen)\n  }\n\n  function submit() {\n    axios.post('/auth/login', { email, password })\n      .then((res) => {\n        props.loginUser(res.data.email, res.data.user_id, res.data.admin, res.data.approved)\n        props.history.push('/dashboard')\n      })\n      .catch(err => console.log(err))\n  }\n\n  return (\n    <div>\n      <input\n        placeholder='Email'\n        type=\"text\"\n        value={email}\n        onChange={e => setEmail(e.target.value)}>\n      </input>\n      <input\n        placeholder='Password'\n        type=\"text\"\n        value={password}\n        onChange={e => setPassword(e.target.value)}>\n      </input>\n      <button onClick={e => submit()}>Login</button>\n      <button>I need access</button>\n      <input type=\"button\"\n        value=\"Login (popup)\"\n        onClick={togglePopup} />\n      {isOpen && <Popup content={<>\n        <div className=\"member-login\">\n          <h2>Lemon Prop Mgmt</h2>\n          <p>Just a placeholder for any extra text we may need here</p>\n          <input\n            placeholder='Email'\n            type=\"text\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}>\n          </input>\n          <input\n            placeholder='Password'\n            type=\"text\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}>\n          </input>\n          <button onClick={e => submit()}>Log in</button>\n        </div>\n        {/* Request access */}\n        <div className=\"login-request\">\n          <h2>Request access to the portal</h2>\n          <p>Need access? Fill out your information below and we'll send you an activation link via email. To best match your account, please use the same information provided to your Property Manager.</p>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <input type=\"text\" name=\"first name\" placeholder=\"First Name\" ref={register({ required: true })} />\n            <input type=\"text\" name=\"last name\" placeholder=\"Last Name\" ref={register({ required: true })} />\n            <input type=\"tel\" name=\"phone\" placeholder=\"Phone number\" ref={register({ required: true, minLength: 6, maxLength: 12 })} />\n            <input type=\"text\" name=\"email\" placeholder=\"Email address\" ref={register({ required: true, pattern: /^\\S+@\\S+$/i })} />\n            <input type=\"radio\" name=\"pets\" placeholder=\"Pets\" ref={register} />Pets\n            <input type=\"submit\" />\n          </form>\n        </div>\n      </>}\n        handleClose={togglePopup} />\n      }\n\n    </div>\n  )\n}\n\n\nexport default connect(null, { loginUser })(Login)","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/MaintReq/MaintReqList.js",["139"],"import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nconst MaintReqList = props => {\n  const [myList, setMyList] = useState([])\n  const [openList, setOpenList] = useState([])\n  const [closedList, setClosedList] = useState([])\n  const { user_id, admin } = props\n\n  useEffect(() => {\n    if (admin === false) {\n      axios.get(`/api/tenant/${user_id}/mr`)\n        .then(res => {\n          setMyList(res.data)\n        })\n        .catch(err => console.log(err))\n    } else if (admin === true) {\n      axios.get('/api/manager/mr/false')\n        .then(res => {\n          setOpenList(res.data)\n        })\n        .catch(err => console.log(err))\n      axios.get('/api/manager/mr/true')\n        .then(res => {\n          setClosedList(res.data)\n        })\n        .catch(err => console.log(err))\n    }\n  }, [user_id])\n\n  function mapIt(array) {\n    return array.map((element) => {\n      return (\n        <div key={element.maint_req_id}>\n          {(admin === false && !props.open) ? (\n            <div >\n              <h2>{ }</h2>\n              <div>{element.date_sub}</div>\n              <div>{element.subject}</div>\n              {admin === false ? null : <div>{element.prop_id}</div>}\n              <div>{element.status}</div>\n              {admin === true && element.status === 'open' ? <button>Complete</button> : null}\n            </div>\n          ) : (\n              element.is_compl === false ? (\n                <div>\n                  <h2>{ }</h2>\n                  <div>{element.date_sub}</div>\n                  <div>{element.subject}</div>\n                  {admin === false ? null : <div>{element.prop_id}</div>}\n                  <div>{element.status}</div>\n                  {admin === true && element.status === 'open' ? <button>Complete</button> : null}\n                </div>\n              ) : null)}\n        </div>\n      )\n    })\n  }\n\n  return (\n    <div className='maint-req'>\n      <h1>{!props.open ? 'Maintenance Request History' : null}</h1>\n      {(admin === false && !props.open) ? mapIt(myList) : null}\n      {(admin === false && props.open) ? (\n        <div>\n          <h2>Open Requests</h2>\n          {mapIt(myList)}\n        </div>\n      ) : null}\n      {(admin === true && !props.open) ? (\n        <div>\n          <h2>Open Requests:</h2>\n          {mapIt(openList)}\n        </div>) : null}\n      {(admin === true && !props.open) ? (\n        <div>\n          <h2>Closed Requests:</h2>\n          {mapIt(closedList)}\n        </div>) : null}\n      {(admin === true && props.open) ? (\n        <div>\n          <h2>Open Requests:</h2>\n          {mapIt(openList)}\n        </div>) : null}\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    email: state.user.email,\n    user_id: state.user.user_id,\n    admin: state.user.admin,\n    approved: state.user.approved\n  }\n}\n\nexport default connect(mapStateToProps)(MaintReqList)","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Tenants/TenantList.js",["140"],"import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nconst TenantList = props => {\n  const { setCurrentTenants, currentTenants } = props\n  const [addresses, setAddresses] = useState([])\n  const [editBool, setEditBool] = useState(false)\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [email, setEmail] = useState('')\n  const [phone, setPhone] = useState('')\n  const [propId, setPropId] = useState()\n  const [buttonId, setButtonId] = useState()\n  const [petBool, setPetBool] = useState(null)\n  const { user_id, admin } = props\n\n  useEffect(() => {\n    if (admin === true) {\n      axios.get('/api/manager/tenants/true')\n        .then(res => {\n          setCurrentTenants(res.data)\n        })\n        .catch(err => console.log(err))\n      axios.get('/api/manager/properties')\n        .then(res => {\n          setAddresses(res.data)\n        })\n        .catch(err => console.log(err))\n    }\n  }, [user_id])\n\n  function clickEdit(id) {\n    setEditBool(true)\n    setButtonId(id)\n  }\n\n  function checkbox(checkbox) {\n    if (checkbox.checked === true) {\n      setPetBool(true)\n    } else if (checkbox.checked === false) {\n      setPetBool(false)\n    }\n  }\n\n  function submit(element) {\n    axios.put(`/api/manager/tenants/${element.user_id}`, {\n      first_name: firstName !== '' ? firstName : element.first_name,\n      last_name: lastName !== '' ? lastName : element.last_name,\n      phone: phone !== '' ? phone : element.phone,\n      email: email !== '' ? email : element.email,\n      pet: petBool !== null ? petBool : element.pet,\n      is_approved: true,\n      prop_id: propId ? propId : element.prop_id\n    })\n      .then(res => {\n        setEditBool(false)\n        setFirstName('')\n        setLastName('')\n        setPhone('')\n        setEmail('')\n        setPetBool(null)\n        setPropId()\n        axios.get('/api/manager/tenants/true')\n          .then(res => {\n            setCurrentTenants(res.data)\n          })\n          .catch(err => console.log(err))\n      })\n      .catch(err => console.log(err))\n  }\n\n  function mapIt(array) {\n    let currentAddress\n    return array.map((element) => {\n      for (let i = 0; i < addresses.length; i++) {\n        if (element.prop_id === addresses[i].prop_id) {\n          currentAddress = addresses[i].address\n        }\n      }\n      return (\n        <div key={element.user_id}>\n          <button onClick={() => clickEdit(element.user_id)}>Edit</button>\n          {editBool === false ? (\n            <div>\n              <div>{element.user_id}</div>\n              <div>{`${element.first_name} ${element.last_name}`}</div>\n              <div>{element.prop_id && currentAddress}</div>\n              <div>{element.email}</div>\n              <div>{element.phone}</div>\n              {element.pet === true ? <div>Yes</div> : <div>No</div>}\n              <div>{element.due_date}</div>\n            </div>\n          ) : (\n              element.user_id === buttonId ? (\n                <div>\n                  <div>{element.user_id}</div>\n                  <input defaultValue={`${element.first_name}`} onChange={e => setFirstName(e.target.value)}></input>\n                  <input defaultValue={`${element.last_name}`} onChange={e => setLastName(e.target.value)}></input>\n                  <input defaultValue={element.prop_id} onChange={e => setPropId(e.target.value)}></input>\n                  <input defaultValue={element.email} onChange={e => setEmail(e.target.value)}></input>\n                  <input defaultValue={element.phone} onChange={e => setPhone(e.target.value)}></input>\n                  <input type='checkbox' name='pets' id='pets' defaultChecked={element.pet} onClick={() => checkbox(document.getElementById('pets'))}></input>\n                  <label htmlFor={'pets'}>Pets?</label>\n                  <button className='submit' onClick={() => submit(element)}>Save</button>\n                </div>\n              ) : (\n                  <div>\n                    <div>{element.user_id}</div>\n                    <div>{`${element.first_name} ${element.last_name}`}</div>\n                    <div>{currentAddress}</div>\n                    <div>{element.email}</div>\n                    <div>{element.phone}</div>\n                    {element.pets === true ? <div>Yes</div> : <div>No</div>}\n                    <div>{element.due_date}\n                    </div>\n                  </div>\n                )\n            )\n          }\n        </div>\n      )\n    })\n  }\n\n  return (\n    <div className='maint-req'>\n      {mapIt(currentTenants)}\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  console.log('state:', state)\n  return {\n    email: state.user.email,\n    user_id: state.user.user_id,\n    admin: state.user.admin,\n    approved: state.user.approved\n  }\n}\n\nexport default connect(mapStateToProps)(TenantList)","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Tenants/TenantRequestList.js",["141"],"import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nconst TenantRequestList = props => {\n\n  const [tenantRequests, setTenantRequests] = useState([])\n  const { setCurrentTenants } = props\n  const { user_id, admin } = props\n\n  useEffect(() => {\n    if (admin === false) {\n      return ('You do not have access to this data.')\n    } else if (admin === true) {\n      axios.get('/api/manager/tenants/false')\n        .then(res => {\n          setTenantRequests(res.data)\n        })\n        .catch(err => console.log(err))\n    }\n  }, [user_id])\n\n  function approve(element) {\n    axios.put(`/api/manager/tenants/${element.user_id}`, {\n      first_name: element.first_name,\n      last_name: element.last_name,\n      phone: element.phone,\n      email: element.email,\n      pet: element.pet,\n      is_approved: true,\n      prop_id: element.prop_id\n    })\n      .then(res => {\n        axios.get('/api/manager/tenants/false')\n          .then(res => {\n            setTenantRequests(res.data)\n            axios.get('/api/manager/tenants/true')\n              .then(res => {\n                setCurrentTenants(res.data)\n              })\n              .catch(err => console.log(err))\n          })\n          .catch(err => console.log(err))\n      })\n      .catch(err => console.log(err))\n  }\n\n  function mapIt(array) {\n    return array.map((element) => {\n      return (\n        <div key={element.user_id}>\n          <div>{element.user_id}</div>\n          <div>{`${element.first_name} ${element.last_name}`}</div>\n          <div>{element.email}</div>\n          <div>{element.phone}</div>\n          {element.pets === true ? <div>Yes</div> : <div>No</div>}\n          <div>{element.due_date}</div>\n          {admin === true && element.approved === false ? <button\n            className='submit'\n            onClick={() => approve(element)}>Approve</button> : null}\n        </div>\n      )\n    })\n  }\n\n  return (\n    <div>\n      {mapIt(tenantRequests)}\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  console.log('state:', state)\n  return {\n    email: state.user.email,\n    user_id: state.user.user_id,\n    admin: state.user.admin,\n    approved: state.user.approved\n  }\n}\n\nexport default connect(mapStateToProps)(TenantRequestList)","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Popup.js",[],["142","143"],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Payments/Payments.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Payments/MakePayment.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Properties/PropertiesList.js",["144"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\n\nconst PropertiesList = props => {\n  const { setCurrentProperties, currentProperties } = props\n  const [address, setAddress] = useState('')\n  const [leaseAmt, setLeaseAmt] = useState()\n  const [leaseStatus, setLeaseStatus] = useState(null)\n  const [buttonId, setButtonId] = useState()\n  const [editBool, setEditBool] = useState(false)\n  const { user_id, admin } = props\n\n  useEffect(() => {\n    if (admin === true) {\n      axios.get('/api/manager/properties')\n        .then(res => {\n          setCurrentProperties(res.data)\n        })\n        .catch(err => console.log(err))\n    }\n  }, [user_id])\n\n  function clickEdit(id) {\n    setEditBool(true)\n    setButtonId(id)\n  }\n\n  function checkbox(checkbox) {\n    if (checkbox.checked === true) {\n      setLeaseStatus(true)\n    } else if (checkbox.checked === false) {\n      setLeaseStatus(false)\n    }\n  }\n\n  function submit(element) {\n    axios.put(`/api/manager/properties/${element.prop_id}`, {\n      address: address !== '' ? address : element.address,\n      leaseAmt: leaseAmt !== undefined ? leaseAmt : element.lease_amt,\n      status: leaseStatus !== null ? leaseStatus : element.lease_status\n    })\n      .then(res => {\n        setEditBool(false)\n        setAddress('')\n        setLeaseAmt()\n        setLeaseStatus(null)\n        axios.get('/api/manager/properties')\n          .then(res => {\n            setCurrentProperties(res.data)\n          })\n          .catch(err => console.log(err))\n      })\n      .catch(err => console.log(err))\n  }\n\n  function mapIt(array) {\n    return array.map((element) => {\n      return (\n        <div key={element.prop_id}>\n          <button onClick={() => clickEdit(element.prop_id)}>Edit</button>\n          {editBool === false ? (\n            <div>\n              <div>{element.prop_id}</div>\n              <div>{element.address}</div>\n              <div>{`$${element.lease_amt}`}</div>\n              {element.lease_status === true ? <div>Yes</div> : <div>No</div>}\n            </div>\n          ) : (\n              element.prop_id === buttonId ? (\n                <div>\n                  <div>{element.prop_id}</div>\n                  <input defaultValue={element.address} onChange={e => setAddress(e.target.value)}></input>\n                  <input defaultValue={element.lease_amt} onChange={e => setLeaseAmt(e.target.value)}></input>\n                  <input type='checkbox' name='leaseStatus' id='leaseStatus' defaultChecked={element.lease_status} onClick={() => checkbox(document.getElementById('leaseStatus'))}></input>\n                  <label htmlFor={'leaseStatus'}>Active Lease?</label>\n                  <button className='submit' onClick={() => submit(element)}>Save</button>\n                </div>\n              ) : (\n                  <div>\n                    <div>{element.prop_id}</div>\n                    <div>{element.address}</div>\n                    <div>{`$${element.lease_amt}`}</div>\n                    {element.lease_status === true ? <div>Yes</div> : <div>No</div>}\n                  </div>\n                )\n            )\n          }\n        </div>\n      )\n    })\n  }\n\n  return (\n    <div className='maint-req'>\n      {mapIt(currentProperties)}\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  console.log('state:', state)\n  return {\n    email: state.user.email,\n    user_id: state.user.user_id,\n    admin: state.user.admin,\n    approved: state.user.approved\n  }\n}\nexport default connect(mapStateToProps)(PropertiesList)","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/redux/paymentReducer.js",[],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":14,"column":6,"nodeType":"151","endLine":14,"endColumn":8,"suggestions":"152"},{"ruleId":"153","severity":1,"message":"154","line":7,"column":11,"nodeType":"155","messageId":"156","endLine":7,"endColumn":21},{"ruleId":"153","severity":1,"message":"157","line":7,"column":23,"nodeType":"155","messageId":"156","endLine":7,"endColumn":39},{"ruleId":"149","severity":1,"message":"158","line":17,"column":8,"nodeType":"151","endLine":17,"endColumn":17,"suggestions":"159"},{"ruleId":"153","severity":1,"message":"160","line":8,"column":12,"nodeType":"155","messageId":"156","endLine":8,"endColumn":26},{"ruleId":"153","severity":1,"message":"161","line":12,"column":13,"nodeType":"155","messageId":"156","endLine":12,"endColumn":20},{"ruleId":"153","severity":1,"message":"162","line":12,"column":22,"nodeType":"155","messageId":"156","endLine":12,"endColumn":27},{"ruleId":"153","severity":1,"message":"163","line":2,"column":8,"nodeType":"155","messageId":"156","endLine":2,"endColumn":19},{"ruleId":"153","severity":1,"message":"164","line":9,"column":10,"nodeType":"155","messageId":"156","endLine":9,"endColumn":22},{"ruleId":"153","severity":1,"message":"165","line":9,"column":24,"nodeType":"155","messageId":"156","endLine":9,"endColumn":39},{"ruleId":"153","severity":1,"message":"166","line":10,"column":10,"nodeType":"155","messageId":"156","endLine":10,"endColumn":23},{"ruleId":"153","severity":1,"message":"167","line":10,"column":25,"nodeType":"155","messageId":"156","endLine":10,"endColumn":41},{"ruleId":"149","severity":1,"message":"168","line":28,"column":6,"nodeType":"151","endLine":28,"endColumn":15,"suggestions":"169"},{"ruleId":"153","severity":1,"message":"170","line":7,"column":12,"nodeType":"155","messageId":"156","endLine":7,"endColumn":24},{"ruleId":"153","severity":1,"message":"171","line":12,"column":35,"nodeType":"155","messageId":"156","endLine":12,"endColumn":41},{"ruleId":"149","severity":1,"message":"168","line":30,"column":6,"nodeType":"151","endLine":30,"endColumn":15,"suggestions":"172"},{"ruleId":"149","severity":1,"message":"173","line":31,"column":6,"nodeType":"151","endLine":31,"endColumn":15,"suggestions":"174"},{"ruleId":"149","severity":1,"message":"168","line":21,"column":6,"nodeType":"151","endLine":21,"endColumn":15,"suggestions":"175"},{"ruleId":"145","replacedBy":"176"},{"ruleId":"147","replacedBy":"177"},{"ruleId":"149","severity":1,"message":"178","line":22,"column":6,"nodeType":"151","endLine":22,"endColumn":15,"suggestions":"179"},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["182"],"no-unused-vars","'properties' is assigned a value but never used.","Identifier","unusedVar","'changeProperties' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'admin' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["183"],"'submitProperty' is assigned a value but never used.","'user_id' is assigned a value but never used.","'admin' is assigned a value but never used.","'MakePayment' is defined but never used.","'tenantOpenMr' is assigned a value but never used.","'setTenantOpenMr' is assigned a value but never used.","'managerOpenMr' is assigned a value but never used.","'setManagerOpenMr' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'admin'. Either include it or remove the dependency array.",["184"],"'submitTenant' is assigned a value but never used.","'errors' is assigned a value but never used.",["185"],"React Hook useEffect has missing dependencies: 'admin' and 'setCurrentTenants'. Either include them or remove the dependency array.",["186"],["187"],["180"],["181"],"React Hook useEffect has missing dependencies: 'admin' and 'setCurrentProperties'. Either include them or remove the dependency array.",["188"],"no-global-assign","no-unsafe-negation",{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"193","fix":"195"},{"desc":"196","fix":"197"},{"desc":"193","fix":"198"},{"desc":"199","fix":"200"},"Update the dependencies array to be: [props]",{"range":"201","text":"202"},"Update the dependencies array to be: [admin, props, user_id]",{"range":"203","text":"204"},"Update the dependencies array to be: [admin, user_id]",{"range":"205","text":"206"},{"range":"207","text":"206"},"Update the dependencies array to be: [admin, setCurrentTenants, user_id]",{"range":"208","text":"209"},{"range":"210","text":"206"},"Update the dependencies array to be: [admin, setCurrentProperties, user_id]",{"range":"211","text":"212"},[485,487],"[props]",[567,576],"[admin, props, user_id]",[935,944],"[admin, user_id]",[860,869],[1010,1019],"[admin, setCurrentTenants, user_id]",[590,599],[701,710],"[admin, setCurrentProperties, user_id]"]