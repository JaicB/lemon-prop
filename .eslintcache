<<<<<<< HEAD
[{"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/index.js":"1","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/reportWebVitals.js":"2","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/App.js":"3","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/redux/store.js":"4","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Routes.js":"5","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/redux/reducer.js":"6","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/AccountNavigation.js":"7","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Landing/RequestSubmitted.js":"8","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Landing/RequestAccess.js":"9","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Landing/LandingPage.js":"10","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/MaintReq/MaintReq.js":"11","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/PasswordReset/UpdatePassword.js":"12","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Payments/Payments.js":"13","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/PasswordReset/RequestReset.js":"14","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/AccountDash/TheDashboard.js":"15","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/MaintReq/SingleMaintReq.js":"16","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Properties/Properties.js":"17","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Tenants/Tenants.js":"18","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Landing/Login.js":"19","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/MaintReq/MaintReqList.js":"20","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Payments/PaymentList.js":"21","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Payments/MakePayment.js":"22","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Properties/PropertiesList.js":"23","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Tenants/TenantList.js":"24","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Tenants/TenantRequestList.js":"25","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Popup.js":"26"},{"size":778,"mtime":1612307391787,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1611607895094,"results":"29","hashOfConfig":"28"},{"size":758,"mtime":1612307391784,"results":"30","hashOfConfig":"28"},{"size":106,"mtime":1612307391787,"results":"31","hashOfConfig":"28"},{"size":1881,"mtime":1612307391787,"results":"32","hashOfConfig":"28"},{"size":894,"mtime":1612459577608,"results":"33","hashOfConfig":"28"},{"size":1676,"mtime":1612459667085,"results":"34","hashOfConfig":"28"},{"size":437,"mtime":1611941047681,"results":"35","hashOfConfig":"28"},{"size":1072,"mtime":1612021554960,"results":"36","hashOfConfig":"28"},{"size":1030,"mtime":1612465618401,"results":"37","hashOfConfig":"28"},{"size":321,"mtime":1612021554961,"results":"38","hashOfConfig":"28"},{"size":147,"mtime":1611941047683,"results":"39","hashOfConfig":"28"},{"size":357,"mtime":1612307391785,"results":"40","hashOfConfig":"28"},{"size":141,"mtime":1611941047683,"results":"41","hashOfConfig":"28"},{"size":4210,"mtime":1612459577605,"results":"42","hashOfConfig":"28"},{"size":1343,"mtime":1612459577606,"results":"43","hashOfConfig":"28"},{"size":2610,"mtime":1612459577607,"results":"44","hashOfConfig":"28"},{"size":4136,"mtime":1612459577608,"results":"45","hashOfConfig":"28"},{"size":3347,"mtime":1612467603757,"results":"46","hashOfConfig":"28"},{"size":3751,"mtime":1612459577606,"results":"47","hashOfConfig":"28"},{"size":1418,"mtime":1612459577607,"results":"48","hashOfConfig":"28"},{"size":2156,"mtime":1612459577606,"results":"49","hashOfConfig":"28"},{"size":4137,"mtime":1612459577607,"results":"50","hashOfConfig":"28"},{"size":5624,"mtime":1612459577607,"results":"51","hashOfConfig":"28"},{"size":2627,"mtime":1612459577608,"results":"52","hashOfConfig":"28"},{"size":274,"mtime":1612288712645,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1fyetth",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"56"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/index.js",[],["117","118"],"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/reportWebVitals.js",[],"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/App.js",["119"],"import React, { useEffect } from 'react'\nimport axios from 'axios'\nimport routes from './Routes'\nimport AccountNavigation from './Components/AccountNavigation'\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { loginUser } from './redux/reducer'\n\nfunction App(props) {\n  useEffect(() => {\n    console.log(props)\n    axios.get(`/auth/user`).then((res) => {\n      console.log(res.data)\n      props.loginUser(res.data.email, res.data.user_id, res.data.admin, res.data.approved);\n    }).catch(err => console.log(err))\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <AccountNavigation />\n      {routes}\n    </div>\n  );\n}\nfunction mapStateToProps(reduxState) { return reduxState }\nexport default connect(mapStateToProps, { loginUser })(App)\n","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/redux/store.js",[],"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Routes.js",[],"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/redux/reducer.js",[],"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/AccountNavigation.js",[],"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Landing/RequestSubmitted.js",[],"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Landing/RequestAccess.js",[],"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Landing/LandingPage.js",["120"],"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/MaintReq/MaintReq.js",[],"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/PasswordReset/UpdatePassword.js",[],"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Payments/Payments.js",[],"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/PasswordReset/RequestReset.js",[],"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/AccountDash/TheDashboard.js",[],"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/MaintReq/SingleMaintReq.js",["121","122"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\n\nconst SingleMaintReq = props => {\n  const [subject, setSubject] = useState('')\n  const [request, setRequest] = useState('')\n  const [admin] = useState(props.admin)\n  const [user_id] = useState(props.user_id)\n  const [prop_id] = useState(props.prop_id)\n\n  console.log(props)\n\n  function submitMaintReq() {\n    axios.post(`/api/tenant/${user_id}/mr`, { prop_id, subject, request })\n      .then(() => {\n        props.history.push('/maintreq')\n      })\n      .catch(err => console.log(err))\n  }\n\n\n\n  return (\n    <div>\n      <h1>Maintenance Request</h1>\n      <input\n        value={subject}\n        onChange={e => setSubject(e.target.value)}\n        placeholder=\"Subject\"\n        type=\"text\"\n      >\n      </input>\n      <input\n        value={request}\n        onChange={e => setRequest(e.target.value)}\n        placeholder=\"What is the issue?\"\n        type=\"text\"\n      >\n      </input>\n      <button onClick={submitMaintReq}>Submit</button>\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  console.log('state:', state)\n  return {\n    email: state.email,\n    user_id: state.user_id,\n    admin: state.admin,\n    approved: state.approved,\n    prop_id: state.prop_id\n  }\n}\n\nexport default connect(mapStateToProps)(SingleMaintReq)","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Properties/Properties.js",["123","124","125"],"import axios from 'axios'\nimport React, {useState} from 'react'\nimport PropertiesList from '../Properties/PropertiesList'\n\nconst Properties = props => {\n    const [admin, setAdmin] = useState(true)\n    const [newPropertyDisplay, setNewPropertyDisplay] = useState(false)\n    const [currentProperties, setCurrentProperties] = useState([])\n    const [submitProperty, setSubmitProperty] = useState(false)\n    const [address, setAddress] = useState('')\n    const [leaseAmt, setLeaseAmt] = useState()\n    const [leaseStatus, setLeaseStatus] = useState(null)\n\n    function newProperty() {\n        setSubmitProperty(false)\n        setNewPropertyDisplay(true)          \n    }\n\n    function submit() {\n        axios.post('/api/manager/properties', {\n            address: address,\n            leaseAmt: leaseAmt,\n            status: leaseStatus !== null ? leaseStatus : false\n        })\n        .then(res => {\n            setSubmitProperty(true)\n            setNewPropertyDisplay(false)\n            setAddress('')\n            setLeaseAmt()\n            setLeaseStatus(null)\n            axios.get('/api/manager/properties')\n            .then(res => {\n                setCurrentProperties(res.data)\n            })\n            .catch(err => console.log(err))\n        })\n    }\n\n    function checkbox(checkbox) {\n        if (checkbox.checked === true) {\n            setLeaseStatus(true)\n        } else if (checkbox.checked === false){\n            setLeaseStatus(false)\n        }\n    }\n\n return (\n  <div>\n      <div>\n          <div>\n            <h1>Current Properties</h1>\n            <PropertiesList setCurrentProperties={setCurrentProperties} currentProperties={currentProperties}/>\n          </div>\n          <button className=\"submit\" onClick={() => newProperty()}>New Property</button>\n      </div>\n      {newPropertyDisplay === true ? (\n        <div>\n            <div>\n                <div>Address: </div>\n                <input onChange={e => setAddress(e.target.value)}></input> \n            </div>\n            <div>\n                <div>Lease Amount: </div>\n                <input onChange={e => setLeaseAmt(e.target.value)} placeholder='$'></input> \n            </div>\n            <div>\n                <input type='checkbox' name='leaseStatus' id='leaseStatus' onClick={() => checkbox(document.getElementById('leaseStatus'))}></input>\n                <label htmlFor={'leaseStatus'}>Active Lease?</label>\n            </div>\n            <div>\n                <button className='Submit' onClick={() => submit()}>Submit</button> \n            </div>\n        \n        </div>) : null}\n  </div>\n )\n}\nexport default Properties","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Tenants/Tenants.js",["126"],"import axios from 'axios'\nimport React, {useState} from 'react'\nimport TenantList from '../Tenants/TenantList'\nimport TenantRequestList from '../Tenants/TenantRequestList'\n\nconst Tenants = props => {\n    const [newTenantDisplay, setNewTenantDisplay] = useState(false)\n    const [currentTenants, setCurrentTenants] = useState([])\n    const [submitTenant, setSubmitTenant] = useState(false)\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [email, setEmail] = useState('')\n    const [phone, setPhone] = useState('')\n    const [propId, setPropId] = useState()\n    const [dueDate, setDueDate] = useState('')\n    const [password, setPassword] = useState('')\n    const [petBool, setPetBool] = useState(null)\n\n    function newTenant() {\n        setSubmitTenant(false)\n        setNewTenantDisplay(true)          \n    }\n\n    function submit() {\n        axios.post('/api/manager/tenants', {\n            first_name: firstName,\n            last_name: lastName,\n            phone: phone,\n            email: email,\n            pet: petBool !== null ? petBool : false,\n            is_approved: true,\n            prop_id: propId,\n            password: password,\n            due_date: dueDate\n        })\n        .then(res => {\n            setSubmitTenant(true)\n            setNewTenantDisplay(false)\n            setFirstName('')\n            setLastName('')\n            setPhone('')\n            setEmail('')\n            setPetBool(null)\n            setPropId()\n            setPassword('')\n            setDueDate('')\n            axios.get('/api/manager/tenants/true')\n            .then(res => {\n                setCurrentTenants(res.data)\n            })\n            .catch(err => console.log(err))\n        })\n    }\n\n    function checkbox(checkbox) {\n        if (checkbox.checked === true) {\n            setPetBool(true)\n        } else if (checkbox.checked === false){\n            setPetBool(false)\n        }\n    }\n\n return (\n  <div>\n      <div>\n          <div>\n            <h1>Current Tenants</h1>\n            <TenantList setCurrentTenants={setCurrentTenants} currentTenants={currentTenants}/>\n          </div>\n          <div>\n            <h1>Tenant Requests</h1>\n            <TenantRequestList setCurrentTenants={setCurrentTenants} />\n          </div>\n          <button className=\"submit\" onClick={newTenant}>New Tenant</button>\n      </div>\n      {newTenantDisplay === true ? (\n        <div>\n            <div>\n                <div>\n                    <div>First Name: </div>\n                    <input onChange={e => setFirstName(e.target.value)}></input> \n                </div>\n                <div>\n                    <div>Last Name: </div>\n                    <input onChange={e => setLastName(e.target.value)}></input> \n                </div>\n                <div>\n                    <div>Property ID: </div>\n                    <input onChange={e => setPropId(e.target.value)}></input> \n                </div>\n            </div>\n            <div>\n                <div>\n                    <div>Phone: </div>\n                    <input onChange={e => setPhone(e.target.value)}></input> \n                </div>\n                <div>\n                    <div>Email: </div>\n                    <input onChange={e => setEmail(e.target.value)}></input> \n                </div>\n                <div>\n                    <div>Password: </div>\n                    <input onChange={e => setPassword(e.target.value)}></input> \n                </div>\n            </div>\n            <div>\n                <div>\n                    <div>Due Date: </div>\n                    <input onChange={e => setDueDate(e.target.value)}></input> \n                </div>\n                <div>\n                    <input type='checkbox' name='pets' id='pets' onClick={() => checkbox(document.getElementById('pets'))}></input>\n                    <label htmlFor={'pets'}>Pets?</label>\n                </div>\n                <div>\n                    <button className='Submit' onClick={submit}>Submit</button> \n                </div>\n            </div>\n        </div>) : null}\n  </div>\n )\n}\nexport default Tenants","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Landing/Login.js",["127"],"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/MaintReq/MaintReqList.js",["128"],"import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nconst MaintReqList = props => {\n\n  const [myList, setMyList] = useState([])\n  const [openList, setOpenList] = useState([])\n  const [closedList, setClosedList] = useState([])\n  const [admin] = useState(props.admin)\n  const [user_id] = useState(props.user_id)\n\n  // useEffect(() => {\n  //   myList.forEach( => {\n  //     let humanReadableDate = date_sub.split('T').slice(1, 1)\n  //     return humanReadableDate\n  //   })\n  // }, [])\n  // console.log(myList.date_sub)\n\n  useEffect(() => {\n    if (admin === false) {\n      axios.get(`/api/tenant/${user_id}/mr`)\n        .then(res => {\n          setMyList(res.data)\n        })\n        .catch(err => console.log(err))\n    } else if (admin === true) {\n      axios.get(`/api/manager/mr/admin/false`)\n        .then(res => {\n          console.log(res.data)\n          setOpenList(res.data)\n          // console.log(openList)\n        })\n        .catch(err => console.log(err))\n      axios.get('/api/manager/mr/admin/true')\n        .then(res => {\n          setClosedList(res.data)\n        })\n        .catch(err => console.log(err))\n    }\n  }, [])\n\n\n\n  function mapIt(array) {\n    return array.map((element) => {\n      return (\n        <div>\n          {(admin === false && !props.open) ? (\n            <div key={element.maint_req_id}>\n              <h2>{ }</h2>\n              <div>{element.date_sub}</div>\n              <div>{element.subject}</div>\n              {admin === false ? null : <div>{element.prop_id}</div>}\n              <div>{element.status}</div>\n              {admin === true && element.status === 'open' ? <button>Complete</button> : null}\n            </div>\n          ) : (\n              element.is_compl === false ? (\n                <div key={element.maint_req_id}>\n                  <h2>{ }</h2>\n                  <div>{element.date_sub} {console.log(element)}</div>\n                  <div>{element.subject}</div>\n                  {admin === false ? null : <div>{element.prop_id}</div>}\n                  <div>{element.status}</div>\n                  {admin === true && element.status === 'open' ? <button>Complete</button> : null}\n                </div>\n              ) : null)}\n          {(admin === true && element.is_compl === true && !props.open) ? (\n            <div key={element.maint_req_id}>\n              <h2>{ }</h2>\n              <div>{element.date_sub}</div>\n              <div>{element.subject}</div>\n              {admin === false ? null : <div>{element.prop_id}</div>}\n              <div>{element.status}</div>\n              {admin === true && element.status === 'open' ? <button>Complete</button> : null}\n            </div>\n          ) : null}\n        </div>\n      )\n    })\n  }\n\n  return (\n    <div className='maint-req'>\n      <h1>{!props.open ? 'Maintenance Request History' : null}</h1>\n      {(admin === false && !props.open) ? mapIt(myList) : null}\n      {(admin === false && props.open) ? (\n        <div>\n          <h2>Open Requests</h2>\n          {mapIt(myList)}\n        </div>\n      ) : null}\n      {(admin === true && !props.open) ? (\n        <div>\n          <h2>Open Requests:</h2>\n          {mapIt(openList)}\n        </div>) : null}\n      {(admin === true && !props.open) ? (\n        <div>\n          <h2>Closed Requests:</h2>\n          {mapIt(closedList)}\n        </div>) : null}\n      {(admin === true && props.open) ? (\n        <div>\n          <h2>Open Requests:</h2>\n          {mapIt(openList)}\n        </div>) : null}\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    email: state.email,\n    user_id: state.user_id,\n    admin: state.admin,\n    approved: state.approved\n  }\n}\n\nexport default connect(mapStateToProps)(MaintReqList)","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Payments/PaymentList.js",["129"],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\n// List of tenants past payments\n// Study maintReqList Component\n\nconst PaymentList = props => {\n    console.log('PAYMENT LIST PROPS:   ', props)\n\n    const [paymentsList, setPaymentsList] = useState([])\n    const { admin, user_id } = props\n\n    useEffect(() => {\n        if (admin === false) {\n            axios.get(`/api/tenant/${user_id}/payments`)\n                .then(res => {\n                    setPaymentsList(res.data)\n                })\n                .catch(err => console.log(err))\n        } else if (admin === true) {\n            axios.get('/api/manager/payments')\n                .then(res => {\n                    setPaymentsList(res.data)\n                })\n                .catch(err => console.log(err))\n        }\n    }, [props])\n\n\n    let mappedList = paymentsList.map((el) => {\n        return (\n            <div key={el.invoice_id}>\n                <div> {el.date_paid} </div>\n                <div> {el.amt_paid} </div>\n            </div>\n        )\n    })\n\n    return (\n        <div>\n            <p>PaymentList</p>\n            <div> {mappedList} </div>\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    console.log(\"state:\", state);\n    return {\n        user_id: state.user_id,\n        admin: state.admin\n    }\n}\n\nexport default connect(mapStateToProps)(PaymentList)","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Payments/MakePayment.js",["130"],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { connect } from 'react-redux';\n\ntoast.configure();\n\nconst MakePayment = props => {\n    const [rentAmount, setRentAmount] = useState();\n\n    const { user_id } = props;\n\n\n    useEffect(() => {\n        axios.get(`/api/tenant/${user_id}/rent`)\n            .then(res => {\n                console.log(res.data)\n                setRentAmount(res.data[0].lease_amt)\n            })\n            .catch(err => console.log(err))\n    }, [props]);\n\n\n    async function handleToken(token) {\n        console.log(token, rentAmount)\n        await axios.post('/pay_rent', {\n            token,\n            rentAmount\n        }).then(res => {\n            console.log(res.data.status);\n            if (res.data.status === 'success') {\n                console.log('status = success')\n                toast('Success! Your rent has been paid!',\n                    { type: 'success' })\n            } else {\n                console.log('status = error')\n                toast('Something went wrong',\n                    { type: 'error' })\n            }\n            setRentAmount('')\n        }).catch(err => console.log(err))\n    }\n\n    return (\n        <div className='donate'>\n            <div className='container'>\n                <div>MakePayment.js</div>\n                <div> Your rent amount due:\n                    {rentAmount}\n                </div>\n                <StripeCheckout\n                    stripeKey='pk_test_51IEMDRHaijm3D4Gz5082wV01blikaeeyYMcLRDpCWBUPTHQSOhYA5t5lRF7VfAmzitNMVR1JIxYSuKwOPYPAmfY700a2qf4x3J'\n                    token={handleToken}\n                    billingAddress\n                    amount={rentAmount * 100}\n                    label='Pay Rent'\n\n                />\n            </div>\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    console.log(\"state:\", state);\n    return {\n        user_id: state.user_id,\n        admin: state.admin\n    }\n}\n\nexport default connect(mapStateToProps)(MakePayment)\n","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Properties/PropertiesList.js",["131","132"],"import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\n\nconst PropertiesList = props => {\n    const {setCurrentProperties, currentProperties} = props\n    const [admin, setAdmin] = useState(true)\n    const [address, setAddress] = useState('')\n    const [leaseAmt, setLeaseAmt] = useState()\n    const [leaseStatus, setLeaseStatus] = useState(null)\n    const [buttonId, setButtonId] = useState()\n    const [editBool, setEditBool] = useState(false)\n\n    useEffect(() => {\n        setAdmin(props.admin)\n      }, [])\n    \n      useEffect(() => {\n  \n         if (admin === true) {\n          axios.get('/api/manager/properties')\n            .then(res => {\n              setCurrentProperties(res.data)\n            })\n            .catch(err => console.log(err))\n        }\n      }, [props])\n  \n      function clickEdit(id) {\n          setEditBool(true)\n          setButtonId(id)\n      }\n  \n      function checkbox(checkbox) {\n          if (checkbox.checked === true) {\n              setLeaseStatus(true)\n          } else if (checkbox.checked === false){\n              setLeaseStatus(false)\n          }\n      }\n  \n      function submit(element) {\n          axios.put(`/api/manager/properties/${element.prop_id}`, {\n              address: address !== '' ? address : element.address,\n              leaseAmt: leaseAmt !== undefined ? leaseAmt : element.lease_amt,\n              status: leaseStatus !== null ? leaseStatus : element.lease_status\n          })\n          .then(res => {\n                setEditBool(false)\n                setAddress('')\n                setLeaseAmt()\n                setLeaseStatus(null)\n              axios.get('/api/manager/properties')\n              .then(res => {\n                  setCurrentProperties(res.data)\n              })\n              .catch(err => console.log(err))\n          })\n          .catch(err => console.log(err))\n      }\n  \n      function mapIt(array) {\n          return array.map((element) => {\n            return (\n              <div key={element.prop_id}>\n              <button onClick={() => clickEdit(element.prop_id)}>Edit</button>\n                {editBool === false ? (\n                  <div>\n                      <div>{element.prop_id}</div>\n                      <div>{element.address}</div>\n                      <div>{`$${element.lease_amt}`}</div>\n                      {element.lease_status === true ? <div>Yes</div> : <div>No</div>}\n                  </div>\n                  ) : (\n                      element.prop_id === buttonId ? (\n                      <div>\n                          <div>{element.prop_id}</div>\n                          <input defaultValue={element.address} onChange={e => setAddress(e.target.value)}></input>\n                          <input defaultValue={element.lease_amt} onChange={e => setLeaseAmt(e.target.value)}></input>\n                          <input type='checkbox' name='leaseStatus' id='leaseStatus' defaultChecked={element.lease_status} onClick={() => checkbox(document.getElementById('leaseStatus'))}></input>\n                          <label htmlFor={'leaseStatus'}>Active Lease?</label>\n                          <button className='submit' onClick={() => submit(element)}>Save</button>\n                       </div>\n                      ) : (\n                          <div>\n                              <div>{element.prop_id}</div>\n                                <div>{element.address}</div>\n                                <div>{`$${element.lease_amt}`}</div>\n                                {element.lease_status === true ? <div>Yes</div> : <div>No</div>}\n                          </div>\n                      )\n                  )\n                }\n              </div>\n            )\n          })\n        }\n  \n      return (\n          <div className='maint-req'>\n              {mapIt(currentProperties)}\n          </div>\n      )\n  }\n  \n  function mapStateToProps(state) {\n      return {\n        email: state.email,\n        user_id: state.user_id,\n        admin: state.admin,\n        approved: state.approved\n      }\n  \n}\nexport default connect(mapStateToProps)(PropertiesList)","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Tenants/TenantList.js",["133","134"],"import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nconst TenantList = props => {\n    // const [currentTenants, setCurrentTenants] = useState([])\n    const {setCurrentTenants, currentTenants} = props\n    const [addresses, setAddresses] = useState([])\n    const [admin, setAdmin] = useState(true)\n    const [editBool, setEditBool] = useState(false)\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [email, setEmail] = useState('')\n    const [phone, setPhone] = useState('')\n    const [propId, setPropId] = useState()\n    const [buttonId, setButtonId] = useState()\n    const [petBool, setPetBool] = useState(null)\n\n    useEffect(() => {\n      setAdmin(props.admin)\n    }, [])\n  \n    useEffect(() => {\n\n       if (admin === true) {\n        axios.get('/api/manager/tenants/true')\n          .then(res => {\n            setCurrentTenants(res.data)\n          })\n          .catch(err => console.log(err))\n        axios.get('/api/manager/properties')\n        .then(res => {\n            setAddresses(res.data)\n        })\n        .catch(err => console.log(err))\n      }\n    }, [props])\n\n    function clickEdit(id) {\n        setEditBool(true)\n        setButtonId(id)\n    }\n\n    function checkbox(checkbox) {\n        if (checkbox.checked === true) {\n            setPetBool(true)\n        } else if (checkbox.checked === false){\n            setPetBool(false)\n        }\n    }\n\n    function submit(element) {\n        axios.put(`/api/manager/tenants/${element.user_id}`, {\n            first_name: firstName !== '' ? firstName : element.first_name,\n            last_name: lastName !== '' ? lastName : element.last_name,\n            phone: phone !== '' ? phone : element.phone,\n            email: email !== '' ? email : element.email,\n            pet: petBool !== null ? petBool : element.pet,\n            is_approved: true,\n            prop_id: propId ? propId : element.prop_id\n        })\n        .then(res => {\n              setEditBool(false)\n              setFirstName('')\n              setLastName('')\n              setPhone('')\n              setEmail('')\n              setPetBool(null)\n              setPropId()\n            axios.get('/api/manager/tenants/true')\n            .then(res => {\n                setCurrentTenants(res.data)\n            })\n            .catch(err => console.log(err))\n        })\n        .catch(err => console.log(err))\n    }\n\n    function mapIt(array) {\n        let currentAddress\n        return array.map((element) => {\n            for (let i = 0; i < addresses.length; i++) {\n               if (element.prop_id === addresses[i].prop_id) {\n                currentAddress = addresses[i].address\n            }  \n        }\n          return (\n            <div key={element.user_id}>\n            <button onClick={() => clickEdit(element.user_id)}>Edit</button>\n              {editBool === false ? (\n                <div>\n                    <div>{element.user_id}</div>\n                    <div>{`${element.first_name} ${element.last_name}`}</div>\n                    <div>{element.prop_id && currentAddress}</div>\n                    <div>{element.email}</div>\n                    <div>{element.phone}</div>\n                    {element.pet === true ? <div>Yes</div> : <div>No</div>}\n                    <div>{element.due_date}</div>\n                </div>\n                ) : (\n                    element.user_id === buttonId ? (\n                    <div>\n                        <div>{element.user_id}</div>\n                        <input defaultValue={`${element.first_name}`} onChange={e => setFirstName(e.target.value)}></input>\n                        <input defaultValue={`${element.last_name}`} onChange={e => setLastName(e.target.value)}></input>\n                        <input defaultValue={element.prop_id} onChange={e => setPropId(e.target.value)}></input>\n                        <input defaultValue={element.email} onChange={e => setEmail(e.target.value)}></input>\n                        <input defaultValue={element.phone} onChange={e => setPhone(e.target.value)}></input>\n                        <input type='checkbox' name='pets' id='pets' defaultChecked={element.pet} onClick={() => checkbox(document.getElementById('pets'))}></input>\n                        <label htmlFor={'pets'}>Pets?</label>\n                        {/* <input defaultValue={element.approved} onchange={e => setApproved(e.targetValue)}></input> */}\n                        <button className='submit' onClick={() => submit(element)}>Save</button>\n                     </div>\n                    ) : (\n                        <div>\n                            <div>{element.user_id}</div>\n                            <div>{`${element.first_name} ${element.last_name}`}</div>\n                            <div>{currentAddress}</div>\n                            <div>{element.email}</div>\n                            <div>{element.phone}</div>\n                            {element.pets === true ? <div>Yes</div> : <div>No</div>}\n                            <div>{element.due_date}\n                        </div>\n                </div> \n                    )\n                )\n              }\n            </div>\n          )\n        })\n      }\n\n    return (\n        <div className='maint-req'>\n            {mapIt(currentTenants)}\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    console.log('state:', state)\n    return {\n      email: state.email,\n      user_id: state.user_id,\n      admin: state.admin,\n      approved: state.approved\n    }\n}\n\nexport default connect(mapStateToProps)(TenantList)","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Tenants/TenantRequestList.js",["135","136"],"import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nconst TenantRequestList = props => {\n\n    const [tenantRequests, setTenantRequests] = useState([])\n    const {setCurrentTenants} = props\n     // const [addresses, setAddresses] = useState([])\n    const [admin, setAdmin] = useState(props.admin)\n  \n    useEffect(() => {\n        setAdmin(props.admin)\n      }, [])\n      \n    useEffect(() => {\n      if (admin === false) {\n        return ('You do not have access to this data.')\n      } else if (admin === true) {\n        axios.get('/api/manager/tenants/false')\n          .then(res => {\n            setTenantRequests(res.data)\n          })\n          .catch(err => console.log(err))\n      }\n    }, [props])\n\n    function approve(element) {\n        axios.put(`/api/manager/tenants/${element.user_id}`, {\n            first_name: element.first_name,\n            last_name: element.last_name,\n            phone: element.phone,\n            email: element.email,\n            pet: element.pet,\n            is_approved: true,\n            prop_id: element.prop_id\n        })\n        .then(res => {\n            axios.get('/api/manager/tenants/false')\n            .then(res => {\n                setTenantRequests(res.data)\n                axios.get('/api/manager/tenants/true')\n                .then(res => {\n                    setCurrentTenants(res.data)\n                })\n                .catch(err => console.log(err))\n            })\n            .catch(err => console.log(err))\n        })\n        .catch(err => console.log(err))\n    }\n\n    function mapIt(array) {\n        return array.map((element) => {\n          return (\n            <div key={element.user_id}>\n              <div>{element.user_id}</div>\n              <div>{`${element.first_name} ${element.last_name}`}</div>\n              {/* <div>{currentAddress}</div> */}\n              <div>{element.email}</div>\n              <div>{element.phone}</div>\n              {element.pets === true ? <div>Yes</div> : <div>No</div>}\n              <div>{element.due_date}</div>\n              {admin === true && element.approved === false ? <button \n                className='submit' \n                onClick={() => approve(element)}>Approve</button> : null}\n            </div>\n          )\n        })\n      }\n\n    return (\n        <div>\n            {mapIt(tenantRequests)}\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n      email: state.email,\n      user_id: state.user_id,\n      admin: state.admin,\n      approved: state.approved\n    }\n}\n\nexport default connect(mapStateToProps)(TenantRequestList)","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Popup.js",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":16,"column":6,"nodeType":"143","endLine":16,"endColumn":8,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":13,"column":9,"nodeType":"147","endLine":13,"endColumn":43},{"ruleId":"148","severity":1,"message":"149","line":1,"column":27,"nodeType":"150","messageId":"151","endLine":1,"endColumn":36},{"ruleId":"148","severity":1,"message":"152","line":8,"column":10,"nodeType":"150","messageId":"151","endLine":8,"endColumn":15},{"ruleId":"148","severity":1,"message":"152","line":6,"column":12,"nodeType":"150","messageId":"151","endLine":6,"endColumn":17},{"ruleId":"148","severity":1,"message":"153","line":6,"column":19,"nodeType":"150","messageId":"151","endLine":6,"endColumn":27},{"ruleId":"148","severity":1,"message":"154","line":9,"column":12,"nodeType":"150","messageId":"151","endLine":9,"endColumn":26},{"ruleId":"148","severity":1,"message":"155","line":9,"column":12,"nodeType":"150","messageId":"151","endLine":9,"endColumn":24},{"ruleId":"148","severity":1,"message":"156","line":14,"column":35,"nodeType":"150","messageId":"151","endLine":14,"endColumn":41},{"ruleId":"141","severity":1,"message":"157","line":42,"column":6,"nodeType":"143","endLine":42,"endColumn":8,"suggestions":"158"},{"ruleId":"141","severity":1,"message":"157","line":27,"column":8,"nodeType":"143","endLine":27,"endColumn":15,"suggestions":"159"},{"ruleId":"141","severity":1,"message":"160","line":23,"column":8,"nodeType":"143","endLine":23,"endColumn":15,"suggestions":"161"},{"ruleId":"141","severity":1,"message":"162","line":16,"column":10,"nodeType":"143","endLine":16,"endColumn":12,"suggestions":"163"},{"ruleId":"141","severity":1,"message":"164","line":27,"column":10,"nodeType":"143","endLine":27,"endColumn":17,"suggestions":"165"},{"ruleId":"141","severity":1,"message":"162","line":21,"column":8,"nodeType":"143","endLine":21,"endColumn":10,"suggestions":"166"},{"ruleId":"141","severity":1,"message":"167","line":37,"column":8,"nodeType":"143","endLine":37,"endColumn":15,"suggestions":"168"},{"ruleId":"141","severity":1,"message":"162","line":14,"column":10,"nodeType":"143","endLine":14,"endColumn":12,"suggestions":"169"},{"ruleId":"141","severity":1,"message":"170","line":26,"column":8,"nodeType":"143","endLine":26,"endColumn":15,"suggestions":"171"},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["174"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'admin' is assigned a value but never used.","'setAdmin' is assigned a value but never used.","'submitProperty' is assigned a value but never used.","'submitTenant' is assigned a value but never used.","'errors' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'admin' and 'user_id'. Either include them or remove the dependency array.",["175"],["176"],"React Hook useEffect has a missing dependency: 'user_id'. Either include it or remove the dependency array.",["177"],"React Hook useEffect has a missing dependency: 'props.admin'. Either include it or remove the dependency array. If 'setAdmin' needs the current value of 'props.admin', you can also switch to useReducer instead of useState and read 'props.admin' in the reducer.",["178"],"React Hook useEffect has missing dependencies: 'admin' and 'setCurrentProperties'. Either include them or remove the dependency array.",["179"],["180"],"React Hook useEffect has missing dependencies: 'admin' and 'setCurrentTenants'. Either include them or remove the dependency array.",["181"],["182"],"React Hook useEffect has a missing dependency: 'admin'. Either include it or remove the dependency array.",["183"],"no-global-assign","no-unsafe-negation",{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"192","fix":"196"},{"desc":"197","fix":"198"},{"desc":"192","fix":"199"},{"desc":"200","fix":"201"},"Update the dependencies array to be: [props]",{"range":"202","text":"203"},"Update the dependencies array to be: [admin, user_id]",{"range":"204","text":"205"},"Update the dependencies array to be: [admin, props, user_id]",{"range":"206","text":"207"},"Update the dependencies array to be: [props, user_id]",{"range":"208","text":"209"},"Update the dependencies array to be: [props.admin]",{"range":"210","text":"211"},"Update the dependencies array to be: [admin, props, setCurrentProperties]",{"range":"212","text":"213"},{"range":"214","text":"211"},"Update the dependencies array to be: [admin, props, setCurrentTenants]",{"range":"215","text":"216"},{"range":"217","text":"211"},"Update the dependencies array to be: [admin, props]",{"range":"218","text":"219"},[536,538],"[props]",[1196,1198],"[admin, user_id]",[859,866],"[admin, props, user_id]",[651,658],"[props, user_id]",[565,567],"[props.admin]",[829,836],"[admin, props, setCurrentProperties]",[795,797],[1190,1197],"[admin, props, setCurrentTenants]",[424,426],[760,767],"[admin, props]"]
=======
[{"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/index.js":"1","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/App.js":"2","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/reportWebVitals.js":"3","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/redux/store.js":"4","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/redux/reducer.js":"5","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/redux/paymentReducer.js":"6","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Routes.js":"7","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/AccountNavigation.js":"8","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/RequestSubmitted.js":"9","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/LandingPage.js":"10","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/RequestAccess.js":"11","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/MaintReq/MaintReq.js":"12","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/AccountDash/TheDashboard.js":"13","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/PasswordReset/RequestReset.js":"14","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/PasswordReset/UpdatePassword.js":"15","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Properties/Properties.js":"16","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/MaintReq/SingleMaintReq.js":"17","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Tenants/Tenants.js":"18","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Payments/Payments.js":"19","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/Login.js":"20","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/MaintReq/MaintReqList.js":"21","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Payments/MakePayment.js":"22","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Properties/PropertiesList.js":"23","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Tenants/TenantList.js":"24","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Tenants/TenantRequestList.js":"25","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Payments/PaymentList.js":"26","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Popup.js":"27"},{"size":778,"mtime":1612306541227,"results":"28","hashOfConfig":"29"},{"size":709,"mtime":1612468080791,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1611607556846,"results":"31","hashOfConfig":"29"},{"size":371,"mtime":1612466223492,"results":"32","hashOfConfig":"29"},{"size":838,"mtime":1612467473964,"results":"33","hashOfConfig":"29"},{"size":1056,"mtime":1612468514234,"results":"34","hashOfConfig":"29"},{"size":1881,"mtime":1612308183128,"results":"35","hashOfConfig":"29"},{"size":1691,"mtime":1612466268410,"results":"36","hashOfConfig":"29"},{"size":438,"mtime":1612466223478,"results":"37","hashOfConfig":"29"},{"size":458,"mtime":1612466223475,"results":"38","hashOfConfig":"29"},{"size":1066,"mtime":1612466223477,"results":"39","hashOfConfig":"29"},{"size":376,"mtime":1612466223478,"results":"40","hashOfConfig":"29"},{"size":4195,"mtime":1612468453826,"results":"41","hashOfConfig":"29"},{"size":141,"mtime":1612286956765,"results":"42","hashOfConfig":"29"},{"size":147,"mtime":1612286956765,"results":"43","hashOfConfig":"29"},{"size":2855,"mtime":1612466223486,"results":"44","hashOfConfig":"29"},{"size":1368,"mtime":1612467585115,"results":"45","hashOfConfig":"29"},{"size":4136,"mtime":1612389521120,"results":"46","hashOfConfig":"29"},{"size":355,"mtime":1612466223485,"results":"47","hashOfConfig":"29"},{"size":3157,"mtime":1612467205151,"results":"48","hashOfConfig":"29"},{"size":3438,"mtime":1612468218312,"results":"49","hashOfConfig":"29"},{"size":2400,"mtime":1612468327046,"results":"50","hashOfConfig":"29"},{"size":3522,"mtime":1612468387817,"results":"51","hashOfConfig":"29"},{"size":4850,"mtime":1612468111350,"results":"52","hashOfConfig":"29"},{"size":2243,"mtime":1612468125493,"results":"53","hashOfConfig":"29"},{"size":1513,"mtime":1612468567336,"results":"54","hashOfConfig":"29"},{"size":274,"mtime":1612287388563,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"dlyh98",{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"58"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/index.js",[],["123","124"],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/App.js",["125"],"import React, { useEffect } from 'react'\nimport axios from 'axios'\nimport routes from './Routes'\nimport AccountNavigation from './Components/AccountNavigation'\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { loginUser } from './redux/reducer'\n\nfunction App(props) {\n  useEffect(() => {\n    axios.get(`/auth/user`).then((res) => {\n      props.loginUser(res.data.email, res.data.user_id, res.data.admin, res.data.approved);\n    }).catch(err => console.log(err))\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <AccountNavigation />\n      {routes}\n    </div>\n  );\n}\nfunction mapStateToProps(reduxState) {\n  return reduxState\n}\nexport default connect(mapStateToProps, { loginUser })(App)\n","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/reportWebVitals.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/redux/store.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/redux/reducer.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/redux/paymentReducer.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Routes.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/AccountNavigation.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/RequestSubmitted.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/LandingPage.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/RequestAccess.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/MaintReq/MaintReq.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/AccountDash/TheDashboard.js",["126"],"import React, { useEffect, useState } from 'react'\nimport MakePayment from '../Payments/MakePayment'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport MaintReqList from '../MaintReq/MaintReqList'\n\n\nconst TheDashboard = props => {\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [email, setEmail] = useState('')\n  const [phone, setPhone] = useState('')\n  const [tenantInfo, setTenantInfo] = useState([])\n  const [editBool, setEditBool] = useState(false)\n  const [buttonId, setButtonId] = useState()\n  const { user_id, admin } = props\n\n  useEffect(() => {\n    if (admin === false) {\n      axios.get(`/api/tenant/get/${user_id}`)\n        .then(res => {\n          setTenantInfo(res.data)\n\n        })\n        .catch(err => console.log(err))\n    }\n  }, [user_id])\n\n  function clickEdit(id) {\n    setEditBool(true)\n    setButtonId(id)\n  }\n\n  function editTenant(element) {\n    axios.put(`/api/tenant/${element.user_id}`, {\n      first_name: firstName !== '' ? firstName : element.first_name,\n      last_name: lastName !== '' ? lastName : element.last_name,\n      phone: phone !== '' ? phone : element.phone,\n      email: email !== '' ? email : element.email\n    })\n      .then(res => {\n        setFirstName('')\n        setLastName('')\n        setPhone('')\n        setEmail('')\n        setEditBool(false)\n        axios.get(`/api/tenant/${user_id}`)\n          .then(res => {\n            setTenantInfo(res.data)\n          })\n          .catch(err => console.log(err))\n      })\n      .catch(err => console.log(err))\n  }\n\n  function mappedTenant(array) {\n    return array.map((element) => {\n\n      return (\n        <div key={element.user_id}>\n          <button onClick={() => clickEdit(element.user_id)}>Edit</button>\n          {editBool === false ? (\n            <div>\n              <div>{element.first_name}</div>\n              <div>{element.last_name}</div>\n              <div>{element.phone}</div>\n              <div>{element.email}</div>\n            </div>\n          ) : (\n              element.user_id === buttonId ? (\n                <div>\n                  <div>{element.user_id}</div>\n                  <input defaultValue={`${element.first_name}`} onChange={e => setFirstName(e.target.value)}></input>\n                  <input defaultValue={`${element.last_name}`} onChange={e => setLastName(e.target.value)}></input>\n                  <input defaultValue={element.phone} onChange={e => setPhone(e.target.value)}></input>\n                  <input defaultValue={element.email} onChange={e => setEmail(e.target.value)}></input>\n                  <button className='submit' onClick={() => editTenant(element)}>Save</button>\n                </div>\n              ) : (\n                  <div>\n                    <div>{element.user_id}</div>\n                    <div>{element.first_name}</div>\n                    <div>{element.last_name}</div>\n                    <div>{element.phone}</div>\n                    <div>{element.email}</div>\n                  </div>\n                )\n            )\n          }\n        </div >\n      )\n    })\n  }\n\n  return (\n    <div>\n      <p>TheDashboard</p>\n      <div>\n        {admin === false ? (\n          <MakePayment />\n        ) : null}\n      </div>\n      <div>\n        <MaintReqList open={true} />\n      </div>\n\n      {\n        admin === false ? (\n          <div>\n            <h2>My Info:</h2>\n            <div className=\"edit-tenant\">\n              {mappedTenant(tenantInfo)}\n            </div>\n          </div>\n        ) : null\n      }\n    </div >\n\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    email: state.user.email,\n    user_id: state.user.user_id,\n    admin: state.user.admin,\n    approved: state.user.approved\n  }\n}\n\nexport default connect(mapStateToProps)(TheDashboard)\n\n//Tenant: \n// [X] Display make payment\n// [X] get open Maintenance requests or show some \"error if you should have a request still open email manager...\"\n// [X] Edit user app.put('/api/tenant/:user_id', tenantCtrl.editUser)\n\n//Manager: \n// [ ] Total Income this month (maybe add, outstanding balance -- can add the past due amounts below and display it)\n// [X]all open mrs\n// [ ]past due payments","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/PasswordReset/RequestReset.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/PasswordReset/UpdatePassword.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Properties/Properties.js",["127","128","129"],"import axios from 'axios'\nimport React, { useState } from 'react'\nimport PropertiesList from '../Properties/PropertiesList'\n\nconst Properties = props => {\n    const [newPropertyDisplay, setNewPropertyDisplay] = useState(false)\n    const [currentProperties, setCurrentProperties] = useState([])\n    const [submitProperty, setSubmitProperty] = useState(false)\n    const [address, setAddress] = useState('')\n    const [leaseAmt, setLeaseAmt] = useState()\n    const [leaseStatus, setLeaseStatus] = useState(null)\n    const { user_id, admin } = props\n\n    function newProperty() {\n        setSubmitProperty(false)\n        setNewPropertyDisplay(true)\n    }\n\n    function submit() {\n        axios.post('/api/manager/properties', {\n            address: address,\n            leaseAmt: leaseAmt,\n            status: leaseStatus !== null ? leaseStatus : false\n        })\n            .then(res => {\n                setSubmitProperty(true)\n                setNewPropertyDisplay(false)\n                setAddress('')\n                setLeaseAmt()\n                setLeaseStatus(null)\n                axios.get('/api/manager/properties')\n                    .then(res => {\n                        setCurrentProperties(res.data)\n                    })\n                    .catch(err => console.log(err))\n            })\n    }\n\n    function checkbox(checkbox) {\n        if (checkbox.checked === true) {\n            setLeaseStatus(true)\n        } else if (checkbox.checked === false) {\n            setLeaseStatus(false)\n        }\n    }\n\n    return (\n        <div>\n            <div>\n                <div>\n                    <h1>Current Properties</h1>\n                    <PropertiesList setCurrentProperties={setCurrentProperties} currentProperties={currentProperties} />\n                </div>\n                <button className=\"submit\" onClick={() => newProperty()}>New Property</button>\n            </div>\n            {newPropertyDisplay === true ? (\n                <div>\n                    <div>\n                        <div>Address: </div>\n                        <input onChange={e => setAddress(e.target.value)}></input>\n                    </div>\n                    <div>\n                        <div>Lease Amount: </div>\n                        <input onChange={e => setLeaseAmt(e.target.value)} placeholder='$'></input>\n                    </div>\n                    <div>\n                        <input type='checkbox' name='leaseStatus' id='leaseStatus' onClick={() => checkbox(document.getElementById('leaseStatus'))}></input>\n                        <label htmlFor={'leaseStatus'}>Active Lease?</label>\n                    </div>\n                    <div>\n                        <button className='Submit' onClick={() => submit()}>Submit</button>\n                    </div>\n                </div>) : null}\n        </div>\n    )\n}\n\nexport default Properties","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/MaintReq/SingleMaintReq.js",["130","131"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\n\nconst SingleMaintReq = props => {\n  const [subject, setSubject] = useState('')\n  const [request, setRequest] = useState('')\n  const [admin] = useState(props.admin)\n  const [user_id] = useState(props.user_id)\n  const [prop_id] = useState(props.prop_id)\n\n  console.log(props)\n\n  function submitMaintReq() {\n    axios.post(`/api/tenant/${user_id}/mr`, { prop_id, subject, request })\n      .then(() => {\n        props.history.push('/maintreq')\n      })\n      .catch(err => console.log(err))\n  }\n\n\n\n  return (\n    <div>\n      <h1>Maintenance Request</h1>\n      <input\n        value={subject}\n        onChange={e => setSubject(e.target.value)}\n        placeholder=\"Subject\"\n        type=\"text\"\n      >\n      </input>\n      <input\n        value={request}\n        onChange={e => setRequest(e.target.value)}\n        placeholder=\"What is the issue?\"\n        type=\"text\"\n      >\n      </input>\n      <button onClick={submitMaintReq}>Submit</button>\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  console.log('state:', state)\n  return {\n    email: state.user.email,\n    user_id: state.user.user_id,\n    admin: state.user.admin,\n    approved: state.user.approved,\n    prop_id: state.user.prop_id\n  }\n}\n\nexport default connect(mapStateToProps)(SingleMaintReq)","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Tenants/Tenants.js",["132"],"import axios from 'axios'\nimport React, {useState} from 'react'\nimport TenantList from '../Tenants/TenantList'\nimport TenantRequestList from '../Tenants/TenantRequestList'\n\nconst Tenants = props => {\n    const [newTenantDisplay, setNewTenantDisplay] = useState(false)\n    const [currentTenants, setCurrentTenants] = useState([])\n    const [submitTenant, setSubmitTenant] = useState(false)\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [email, setEmail] = useState('')\n    const [phone, setPhone] = useState('')\n    const [propId, setPropId] = useState()\n    const [dueDate, setDueDate] = useState('')\n    const [password, setPassword] = useState('')\n    const [petBool, setPetBool] = useState(null)\n\n    function newTenant() {\n        setSubmitTenant(false)\n        setNewTenantDisplay(true)          \n    }\n\n    function submit() {\n        axios.post('/api/manager/tenants', {\n            first_name: firstName,\n            last_name: lastName,\n            phone: phone,\n            email: email,\n            pet: petBool !== null ? petBool : false,\n            is_approved: true,\n            prop_id: propId,\n            password: password,\n            due_date: dueDate\n        })\n        .then(res => {\n            setSubmitTenant(true)\n            setNewTenantDisplay(false)\n            setFirstName('')\n            setLastName('')\n            setPhone('')\n            setEmail('')\n            setPetBool(null)\n            setPropId()\n            setPassword('')\n            setDueDate('')\n            axios.get('/api/manager/tenants/true')\n            .then(res => {\n                setCurrentTenants(res.data)\n            })\n            .catch(err => console.log(err))\n        })\n    }\n\n    function checkbox(checkbox) {\n        if (checkbox.checked === true) {\n            setPetBool(true)\n        } else if (checkbox.checked === false){\n            setPetBool(false)\n        }\n    }\n\n return (\n  <div>\n      <div>\n          <div>\n            <h1>Current Tenants</h1>\n            <TenantList setCurrentTenants={setCurrentTenants} currentTenants={currentTenants}/>\n          </div>\n          <div>\n            <h1>Tenant Requests</h1>\n            <TenantRequestList setCurrentTenants={setCurrentTenants} />\n          </div>\n          <button className=\"submit\" onClick={newTenant}>New Tenant</button>\n      </div>\n      {newTenantDisplay === true ? (\n        <div>\n            <div>\n                <div>\n                    <div>First Name: </div>\n                    <input onChange={e => setFirstName(e.target.value)}></input> \n                </div>\n                <div>\n                    <div>Last Name: </div>\n                    <input onChange={e => setLastName(e.target.value)}></input> \n                </div>\n                <div>\n                    <div>Property ID: </div>\n                    <input onChange={e => setPropId(e.target.value)}></input> \n                </div>\n            </div>\n            <div>\n                <div>\n                    <div>Phone: </div>\n                    <input onChange={e => setPhone(e.target.value)}></input> \n                </div>\n                <div>\n                    <div>Email: </div>\n                    <input onChange={e => setEmail(e.target.value)}></input> \n                </div>\n                <div>\n                    <div>Password: </div>\n                    <input onChange={e => setPassword(e.target.value)}></input> \n                </div>\n            </div>\n            <div>\n                <div>\n                    <div>Due Date: </div>\n                    <input onChange={e => setDueDate(e.target.value)}></input> \n                </div>\n                <div>\n                    <input type='checkbox' name='pets' id='pets' onClick={() => checkbox(document.getElementById('pets'))}></input>\n                    <label htmlFor={'pets'}>Pets?</label>\n                </div>\n                <div>\n                    <button className='Submit' onClick={submit}>Submit</button> \n                </div>\n            </div>\n        </div>) : null}\n  </div>\n )\n}\nexport default Tenants","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Payments/Payments.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/Login.js",["133"],"import React, { useState } from 'react'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport { loginUser } from '../../redux/reducer'\nimport Popup from '../Popup'\nimport { useForm } from 'react-hook-form'\n\nconst Login = props => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [isOpen, setIsOpen] = useState(false)\n  const { register, handleSubmit, errors } = useForm();\n\n  const onSubmit = (data) => {\n    console.log(data)\n  }\n\n  const togglePopup = () => {\n    setIsOpen(!isOpen)\n  }\n\n  function submit() {\n    axios.post('/auth/login', { email, password })\n      .then((res) => {\n        // console.log('login successful - 1')\n        props.loginUser(res.data.email, res.data.user_id, res.data.admin, res.data.approved, res.data.prop_id)\n        props.history.push('/dashboard')\n      })\n      .catch(err => console.log(err))\n  }\n\n  return (\n    <div>\n      <input\n        placeholder='Email'\n        type=\"text\"\n        value={email}\n        onChange={e => setEmail(e.target.value)}>\n      </input>\n      <input\n        placeholder='Password'\n        type=\"text\"\n        value={password}\n        onChange={e => setPassword(e.target.value)}>\n      </input>\n      <button onClick={e => submit()}>Login</button>\n      <button>I need access</button>\n      <input type=\"button\"\n        value=\"Login\"\n        onClick={togglePopup} />\n      {isOpen && <Popup content={<>\n        <div className=\"member-login\">\n          <h2>Lemon Prop Mgmt</h2>\n          <p>Just a placeholder for any extra text we may need here</p>\n          <input\n            placeholder='Email'\n            type=\"text\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}>\n          </input>\n          <input\n            placeholder='Password'\n            type=\"text\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}>\n          </input>\n          <button onClick={e => submit()}>Log in</button>\n        </div>\n        {/* Request access */}\n        <div className=\"login-request\">\n          <h2>Request access to the portal</h2>\n          <p>Need access? Fill out your information below and we'll send you an activation link via email. To best match your account, please use the same information provided to your Property Manager.</p>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <input type=\"text\" name=\"first name\" placeholder=\"First Name\" ref={register({ required: true })} />\n            <input type=\"text\" name=\"last name\" placeholder=\"Last Name\" ref={register({ required: true })} />\n            <input type=\"tel\" name=\"phone\" placeholder=\"Phone number\" ref={register({ required: true, minLength: 6, maxLength: 12 })} />\n            <input type=\"text\" name=\"email\" placeholder=\"Email address\" ref={register({ required: true, pattern: /^\\S+@\\S+$/i })} />\n            <input type=\"radio\" name=\"pets\" placeholder=\"Pets\" ref={register} />Pets\n            <input type=\"submit\" />\n          </form>\n        </div>\n      </>}\n        handleClose={togglePopup} />\n      }\n\n    </div>\n  )\n}\n\n\nexport default connect(null, { loginUser })(Login)","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/MaintReq/MaintReqList.js",["134"],"import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nconst MaintReqList = props => {\n  const [myList, setMyList] = useState([])\n  const [openList, setOpenList] = useState([])\n  const [closedList, setClosedList] = useState([])\n  const { user_id, admin } = props\n\n  useEffect(() => {\n    if (admin === false) {\n      axios.get(`/api/tenant/${user_id}/mr`)\n        .then(res => {\n          setMyList(res.data)\n        })\n        .catch(err => console.log(err))\n    } else if (admin === true) {\n      axios.get(`/api/manager/mr/admin/false`)\n        .then(res => {\n          setOpenList(res.data)\n        })\n        .catch(err => console.log(err))\n      axios.get('/api/manager/mr/admin/true')\n        .then(res => {\n          setClosedList(res.data)\n        })\n        .catch(err => console.log(err))\n    }\n  }, [user_id])\n\n\n\n  function mapIt(array) {\n    return array.map((element) => {\n      return (\n        <div key={element.maint_req_id}>\n          {(admin === false && !props.open) ? (\n            <div >\n              <h2>{ }</h2>\n              <div>{element.date_sub}</div>\n              <div>{element.subject}</div>\n              {admin === false ? null : <div>{element.prop_id}</div>}\n              <div>{element.status}</div>\n              {admin === true && element.status === 'open' ? <button>Complete</button> : null}\n            </div>\n          ) : (\n              element.is_compl === false ? (\n                <div>\n                  <h2>{ }</h2>\n                  <div>{element.date_sub}</div>\n                  <div>{element.subject}</div>\n                  {admin === false ? null : <div>{element.prop_id}</div>}\n                  <div>{element.status}</div>\n                  {admin === true && element.status === 'open' ? <button>Complete</button> : null}\n                </div>\n              ) : null)}\n          {(admin === true && element.is_compl === true && !props.open) ? (\n            <div key={element.maint_req_id}>\n              <h2>{ }</h2>\n              <div>{element.date_sub}</div>\n              <div>{element.subject}</div>\n              {admin === false ? null : <div>{element.prop_id}</div>}\n              <div>{element.status}</div>\n              {admin === true && element.status === 'open' ? <button>Complete</button> : null}\n            </div>\n          ) : null}\n        </div>\n      )\n    })\n  }\n\n  return (\n    <div className='maint-req'>\n      <h1>{!props.open ? 'Maintenance Request History' : null}</h1>\n      {(admin === false && !props.open) ? mapIt(myList) : null}\n      {(admin === false && props.open) ? (\n        <div>\n          <h2>Open Requests</h2>\n          {mapIt(myList)}\n        </div>\n      ) : null}\n      {(admin === true && !props.open) ? (\n        <div>\n          <h2>Open Requests:</h2>\n          {mapIt(openList)}\n        </div>) : null}\n      {(admin === true && !props.open) ? (\n        <div>\n          <h2>Closed Requests:</h2>\n          {mapIt(closedList)}\n        </div>) : null}\n      {(admin === true && props.open) ? (\n        <div>\n          <h2>Open Requests:</h2>\n          {mapIt(openList)}\n        </div>) : null}\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    email: state.user.email,\n    user_id: state.user.user_id,\n    admin: state.user.admin,\n    approved: state.user.approved,\n    prop_id: state.user.prop_id\n  }\n}\n\nexport default connect(mapStateToProps)(MaintReqList)","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Payments/MakePayment.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Properties/PropertiesList.js",["135"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\n\nconst PropertiesList = props => {\n  const { setCurrentProperties, currentProperties } = props\n  const [address, setAddress] = useState('')\n  const [leaseAmt, setLeaseAmt] = useState()\n  const [leaseStatus, setLeaseStatus] = useState(null)\n  const [buttonId, setButtonId] = useState()\n  const [editBool, setEditBool] = useState(false)\n  const { user_id, admin } = props\n\n  useEffect(() => {\n    if (admin === true) {\n      axios.get('/api/manager/properties')\n        .then(res => {\n          setCurrentProperties(res.data)\n        })\n        .catch(err => console.log(err))\n    }\n  }, [user_id])\n\n  function clickEdit(id) {\n    setEditBool(true)\n    setButtonId(id)\n  }\n\n  function checkbox(checkbox) {\n    if (checkbox.checked === true) {\n      setLeaseStatus(true)\n    } else if (checkbox.checked === false) {\n      setLeaseStatus(false)\n    }\n  }\n\n  function submit(element) {\n    axios.put(`/api/manager/properties/${element.prop_id}`, {\n      address: address !== '' ? address : element.address,\n      leaseAmt: leaseAmt !== undefined ? leaseAmt : element.lease_amt,\n      status: leaseStatus !== null ? leaseStatus : element.lease_status\n    })\n      .then(res => {\n        setEditBool(false)\n        setAddress('')\n        setLeaseAmt()\n        setLeaseStatus(null)\n        axios.get('/api/manager/properties')\n          .then(res => {\n            setCurrentProperties(res.data)\n          })\n          .catch(err => console.log(err))\n      })\n      .catch(err => console.log(err))\n  }\n\n  function mapIt(array) {\n    return array.map((element) => {\n      return (\n        <div key={element.prop_id}>\n          <button onClick={() => clickEdit(element.prop_id)}>Edit</button>\n          {editBool === false ? (\n            <div>\n              <div>{element.prop_id}</div>\n              <div>{element.address}</div>\n              <div>{`$${element.lease_amt}`}</div>\n              {element.lease_status === true ? <div>Yes</div> : <div>No</div>}\n            </div>\n          ) : (\n              element.prop_id === buttonId ? (\n                <div>\n                  <div>{element.prop_id}</div>\n                  <input defaultValue={element.address} onChange={e => setAddress(e.target.value)}></input>\n                  <input defaultValue={element.lease_amt} onChange={e => setLeaseAmt(e.target.value)}></input>\n                  <input type='checkbox' name='leaseStatus' id='leaseStatus' defaultChecked={element.lease_status} onClick={() => checkbox(document.getElementById('leaseStatus'))}></input>\n                  <label htmlFor={'leaseStatus'}>Active Lease?</label>\n                  <button className='submit' onClick={() => submit(element)}>Save</button>\n                </div>\n              ) : (\n                  <div>\n                    <div>{element.prop_id}</div>\n                    <div>{element.address}</div>\n                    <div>{`$${element.lease_amt}`}</div>\n                    {element.lease_status === true ? <div>Yes</div> : <div>No</div>}\n                  </div>\n                )\n            )\n          }\n        </div>\n      )\n    })\n  }\n\n  return (\n    <div className='maint-req'>\n      {mapIt(currentProperties)}\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    email: state.user.email,\n    user_id: state.user.user_id,\n    admin: state.user.admin,\n    approved: state.user.approved\n  }\n}\nexport default connect(mapStateToProps)(PropertiesList)","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Tenants/TenantList.js",["136"],"import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nconst TenantList = props => {\n  const { setCurrentTenants, currentTenants } = props\n  const [addresses, setAddresses] = useState([])\n  const [editBool, setEditBool] = useState(false)\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [email, setEmail] = useState('')\n  const [phone, setPhone] = useState('')\n  const [propId, setPropId] = useState()\n  const [buttonId, setButtonId] = useState()\n  const [petBool, setPetBool] = useState(null)\n  const { user_id, admin } = props\n\n  useEffect(() => {\n    if (admin === true) {\n      axios.get('/api/manager/tenants/true')\n        .then(res => {\n          setCurrentTenants(res.data)\n        })\n        .catch(err => console.log(err))\n      axios.get('/api/manager/properties')\n        .then(res => {\n          setAddresses(res.data)\n        })\n        .catch(err => console.log(err))\n    }\n  }, [user_id])\n\n  function clickEdit(id) {\n    setEditBool(true)\n    setButtonId(id)\n  }\n\n  function checkbox(checkbox) {\n    if (checkbox.checked === true) {\n      setPetBool(true)\n    } else if (checkbox.checked === false) {\n      setPetBool(false)\n    }\n  }\n\n  function submit(element) {\n    axios.put(`/api/manager/tenants/${element.user_id}`, {\n      first_name: firstName !== '' ? firstName : element.first_name,\n      last_name: lastName !== '' ? lastName : element.last_name,\n      phone: phone !== '' ? phone : element.phone,\n      email: email !== '' ? email : element.email,\n      pet: petBool !== null ? petBool : element.pet,\n      is_approved: true,\n      prop_id: propId ? propId : element.prop_id\n    })\n      .then(res => {\n        setEditBool(false)\n        setFirstName('')\n        setLastName('')\n        setPhone('')\n        setEmail('')\n        setPetBool(null)\n        setPropId()\n        axios.get('/api/manager/tenants/true')\n          .then(res => {\n            setCurrentTenants(res.data)\n          })\n          .catch(err => console.log(err))\n      })\n      .catch(err => console.log(err))\n  }\n\n  function mapIt(array) {\n    let currentAddress\n    return array.map((element) => {\n      for (let i = 0; i < addresses.length; i++) {\n        if (element.prop_id === addresses[i].prop_id) {\n          currentAddress = addresses[i].address\n        }\n      }\n      return (\n        <div key={element.user_id}>\n          <button onClick={() => clickEdit(element.user_id)}>Edit</button>\n          {editBool === false ? (\n            <div>\n              <div>{element.user_id}</div>\n              <div>{`${element.first_name} ${element.last_name}`}</div>\n              <div>{element.prop_id && currentAddress}</div>\n              <div>{element.email}</div>\n              <div>{element.phone}</div>\n              {element.pet === true ? <div>Yes</div> : <div>No</div>}\n              <div>{element.due_date}</div>\n            </div>\n          ) : (\n              element.user_id === buttonId ? (\n                <div>\n                  <div>{element.user_id}</div>\n                  <input defaultValue={`${element.first_name}`} onChange={e => setFirstName(e.target.value)}></input>\n                  <input defaultValue={`${element.last_name}`} onChange={e => setLastName(e.target.value)}></input>\n                  <input defaultValue={element.prop_id} onChange={e => setPropId(e.target.value)}></input>\n                  <input defaultValue={element.email} onChange={e => setEmail(e.target.value)}></input>\n                  <input defaultValue={element.phone} onChange={e => setPhone(e.target.value)}></input>\n                  <input type='checkbox' name='pets' id='pets' defaultChecked={element.pet} onClick={() => checkbox(document.getElementById('pets'))}></input>\n                  <label htmlFor={'pets'}>Pets?</label>\n                  <button className='submit' onClick={() => submit(element)}>Save</button>\n                </div>\n              ) : (\n                  <div>\n                    <div>{element.user_id}</div>\n                    <div>{`${element.first_name} ${element.last_name}`}</div>\n                    <div>{currentAddress}</div>\n                    <div>{element.email}</div>\n                    <div>{element.phone}</div>\n                    {element.pets === true ? <div>Yes</div> : <div>No</div>}\n                    <div>{element.due_date}\n                    </div>\n                  </div>\n                )\n            )\n          }\n        </div>\n      )\n    })\n  }\n\n  return (\n    <div className='maint-req'>\n      {mapIt(currentTenants)}\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    email: state.user.email,\n    user_id: state.user.user_id,\n    admin: state.user.admin,\n    approved: state.user.approved\n  }\n}\n\nexport default connect(mapStateToProps)(TenantList)","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Tenants/TenantRequestList.js",["137"],"import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nconst TenantRequestList = props => {\n\n  const [tenantRequests, setTenantRequests] = useState([])\n  const { setCurrentTenants } = props\n  const { user_id, admin } = props\n\n  useEffect(() => {\n    if (admin === false) {\n      return ('You do not have access to this data.')\n    } else if (admin === true) {\n      axios.get('/api/manager/tenants/false')\n        .then(res => {\n          setTenantRequests(res.data)\n        })\n        .catch(err => console.log(err))\n    }\n  }, [user_id])\n\n  function approve(element) {\n    axios.put(`/api/manager/tenants/${element.user_id}`, {\n      first_name: element.first_name,\n      last_name: element.last_name,\n      phone: element.phone,\n      email: element.email,\n      pet: element.pet,\n      is_approved: true,\n      prop_id: element.prop_id\n    })\n      .then(res => {\n        axios.get('/api/manager/tenants/false')\n          .then(res => {\n            setTenantRequests(res.data)\n            axios.get('/api/manager/tenants/true')\n              .then(res => {\n                setCurrentTenants(res.data)\n              })\n              .catch(err => console.log(err))\n          })\n          .catch(err => console.log(err))\n      })\n      .catch(err => console.log(err))\n  }\n\n  function mapIt(array) {\n    return array.map((element) => {\n      return (\n        <div key={element.user_id}>\n          <div>{element.user_id}</div>\n          <div>{`${element.first_name} ${element.last_name}`}</div>\n          <div>{element.email}</div>\n          <div>{element.phone}</div>\n          {element.pets === true ? <div>Yes</div> : <div>No</div>}\n          <div>{element.due_date}</div>\n          {admin === true && element.approved === false ? <button\n            className='submit'\n            onClick={() => approve(element)}>Approve</button> : null}\n        </div>\n      )\n    })\n  }\n\n  return (\n    <div>\n      {mapIt(tenantRequests)}\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    email: state.user.email,\n    user_id: state.user.user_id,\n    admin: state.user.admin,\n    approved: state.user.approved\n  }\n}\n\nexport default connect(mapStateToProps)(TenantRequestList)","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Payments/PaymentList.js",["138","139","140"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { updatePaymentsTnt, updatePaymentsMgr } from '../../redux/paymentReducer';\n\n// List of tenants' past payments\nconst PaymentList = props => {\n    let { properties, changeProperties } = useState([])\n    const { admin, user_id } = props\n\n    useEffect(() => {\n        if (admin === false) {\n            props.updatePaymentsTnt(user_id)\n            // .then(res => console.log(res))\n        } else if (admin === true) {\n            props.updatePaymentsMgr()\n        }\n    }, [user_id])\n\n    function mappedList(array) {\n        return array.map((el) => {\n            return (\n                <div key={el.invoice_id}>\n                    <div> {el.invoice_id} </div>\n                    <div> {el.date_paid} </div>\n                    <div> {el.amt_paid} </div>\n                    {admin === true ? <div> {el.user_id} </div> : null}\n                </div>\n            )\n        })\n    }\n\n    return (\n        <div>\n            <p>PaymentList</p>\n            {admin === false ? mappedList(props.tnt_payments_list) : mappedList(props.mgr_payments_list)}\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user_id: state.user.user_id,\n        admin: state.user.admin,\n        mgr_payments_list: state.payments.mgr_payments_list,\n        tnt_payments_list: state.payments.tnt_payments_list\n    }\n}\n\nexport default connect(mapStateToProps, { updatePaymentsTnt, updatePaymentsMgr })(PaymentList)","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Popup.js",[],["141","142"],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":14,"column":6,"nodeType":"149","endLine":14,"endColumn":8,"suggestions":"150"},{"ruleId":"147","severity":1,"message":"151","line":27,"column":6,"nodeType":"149","endLine":27,"endColumn":15,"suggestions":"152"},{"ruleId":"153","severity":1,"message":"154","line":8,"column":12,"nodeType":"155","messageId":"156","endLine":8,"endColumn":26},{"ruleId":"153","severity":1,"message":"157","line":12,"column":13,"nodeType":"155","messageId":"156","endLine":12,"endColumn":20},{"ruleId":"153","severity":1,"message":"158","line":12,"column":22,"nodeType":"155","messageId":"156","endLine":12,"endColumn":27},{"ruleId":"153","severity":1,"message":"159","line":1,"column":27,"nodeType":"155","messageId":"156","endLine":1,"endColumn":36},{"ruleId":"153","severity":1,"message":"158","line":8,"column":10,"nodeType":"155","messageId":"156","endLine":8,"endColumn":15},{"ruleId":"153","severity":1,"message":"160","line":9,"column":12,"nodeType":"155","messageId":"156","endLine":9,"endColumn":24},{"ruleId":"153","severity":1,"message":"161","line":12,"column":35,"nodeType":"155","messageId":"156","endLine":12,"endColumn":41},{"ruleId":"147","severity":1,"message":"151","line":30,"column":6,"nodeType":"149","endLine":30,"endColumn":15,"suggestions":"162"},{"ruleId":"147","severity":1,"message":"163","line":22,"column":6,"nodeType":"149","endLine":22,"endColumn":15,"suggestions":"164"},{"ruleId":"147","severity":1,"message":"165","line":31,"column":6,"nodeType":"149","endLine":31,"endColumn":15,"suggestions":"166"},{"ruleId":"147","severity":1,"message":"151","line":21,"column":6,"nodeType":"149","endLine":21,"endColumn":15,"suggestions":"167"},{"ruleId":"153","severity":1,"message":"168","line":7,"column":11,"nodeType":"155","messageId":"156","endLine":7,"endColumn":21},{"ruleId":"153","severity":1,"message":"169","line":7,"column":23,"nodeType":"155","messageId":"156","endLine":7,"endColumn":39},{"ruleId":"147","severity":1,"message":"170","line":17,"column":8,"nodeType":"149","endLine":17,"endColumn":17,"suggestions":"171"},{"ruleId":"143","replacedBy":"172"},{"ruleId":"145","replacedBy":"173"},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["176"],"React Hook useEffect has a missing dependency: 'admin'. Either include it or remove the dependency array.",["177"],"no-unused-vars","'submitProperty' is assigned a value but never used.","Identifier","unusedVar","'user_id' is assigned a value but never used.","'admin' is assigned a value but never used.","'useEffect' is defined but never used.","'submitTenant' is assigned a value but never used.","'errors' is assigned a value but never used.",["178"],"React Hook useEffect has missing dependencies: 'admin' and 'setCurrentProperties'. Either include them or remove the dependency array.",["179"],"React Hook useEffect has missing dependencies: 'admin' and 'setCurrentTenants'. Either include them or remove the dependency array.",["180"],["181"],"'properties' is assigned a value but never used.","'changeProperties' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'admin' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["182"],["174"],["175"],"no-global-assign","no-unsafe-negation",{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"185","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"185","fix":"192"},{"desc":"193","fix":"194"},"Update the dependencies array to be: [props]",{"range":"195","text":"196"},"Update the dependencies array to be: [admin, user_id]",{"range":"197","text":"198"},{"range":"199","text":"198"},"Update the dependencies array to be: [admin, setCurrentProperties, user_id]",{"range":"200","text":"201"},"Update the dependencies array to be: [admin, setCurrentTenants, user_id]",{"range":"202","text":"203"},{"range":"204","text":"198"},"Update the dependencies array to be: [admin, props, user_id]",{"range":"205","text":"206"},[485,487],"[props]",[824,833],"[admin, user_id]",[872,881],[701,710],"[admin, setCurrentProperties, user_id]",[1010,1019],"[admin, setCurrentTenants, user_id]",[590,599],[570,579],"[admin, props, user_id]"]
>>>>>>> main
