[{"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/index.js":"1","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/App.js":"2","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/reportWebVitals.js":"3","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/redux/store.js":"4","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/redux/reducer.js":"5","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Routes.js":"6","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/AccountNavigation.js":"7","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/RequestSubmitted.js":"8","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/LandingPage.js":"9","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/RequestAccess.js":"10","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/MaintReq/MaintReq.js":"11","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/AccountDash/TheDashboard.js":"12","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/PasswordReset/RequestReset.js":"13","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/PasswordReset/UpdatePassword.js":"14","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Properties/Properties.js":"15","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/MaintReq/SingleMaintReq.js":"16","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Tenants/Tenants.js":"17","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Payments/Payments.js":"18","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/Login.js":"19","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/MaintReq/MaintReqList.js":"20","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Payments/MakePayment.js":"21","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Properties/PropertiesList.js":"22","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Tenants/TenantList.js":"23","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Tenants/TenantRequestList.js":"24","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Payments/PaymentList.js":"25","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Popup.js":"26","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/redux/paymentReducer.js":"27"},{"size":778,"mtime":1612306541227,"results":"28","hashOfConfig":"29"},{"size":709,"mtime":1612498649281,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1611607556846,"results":"31","hashOfConfig":"29"},{"size":371,"mtime":1612482034252,"results":"32","hashOfConfig":"29"},{"size":838,"mtime":1612482034249,"results":"33","hashOfConfig":"29"},{"size":1881,"mtime":1612308183128,"results":"34","hashOfConfig":"29"},{"size":2444,"mtime":1612498940020,"results":"35","hashOfConfig":"29"},{"size":438,"mtime":1612482034227,"results":"36","hashOfConfig":"29"},{"size":924,"mtime":1612496775517,"results":"37","hashOfConfig":"29"},{"size":1066,"mtime":1612482034224,"results":"38","hashOfConfig":"29"},{"size":393,"mtime":1612498945609,"results":"39","hashOfConfig":"29"},{"size":4186,"mtime":1612499001483,"results":"40","hashOfConfig":"29"},{"size":141,"mtime":1612286956765,"results":"41","hashOfConfig":"29"},{"size":147,"mtime":1612286956765,"results":"42","hashOfConfig":"29"},{"size":2872,"mtime":1612498945609,"results":"43","hashOfConfig":"29"},{"size":1368,"mtime":1612482034229,"results":"44","hashOfConfig":"29"},{"size":4665,"mtime":1612498945609,"results":"45","hashOfConfig":"29"},{"size":334,"mtime":1612498945295,"results":"46","hashOfConfig":"29"},{"size":3237,"mtime":1612482034223,"results":"47","hashOfConfig":"29"},{"size":3438,"mtime":1612482034228,"results":"48","hashOfConfig":"29"},{"size":2400,"mtime":1612482034231,"results":"49","hashOfConfig":"29"},{"size":3522,"mtime":1612482034236,"results":"50","hashOfConfig":"29"},{"size":4850,"mtime":1612482034239,"results":"51","hashOfConfig":"29"},{"size":2243,"mtime":1612482034242,"results":"52","hashOfConfig":"29"},{"size":1517,"mtime":1612495119663,"results":"53","hashOfConfig":"29"},{"size":274,"mtime":1612287388563,"results":"54","hashOfConfig":"29"},{"size":1056,"mtime":1612482034248,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"dlyh98",{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/index.js",[],["120","121"],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/App.js",["122"],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/reportWebVitals.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/redux/store.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/redux/reducer.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Routes.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/AccountNavigation.js",["123","124"],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/RequestSubmitted.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/LandingPage.js",["125"],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/RequestAccess.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/MaintReq/MaintReq.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/AccountDash/TheDashboard.js",["126"],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/PasswordReset/RequestReset.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/PasswordReset/UpdatePassword.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Properties/Properties.js",["127","128","129"],"import axios from 'axios'\nimport React, { useState } from 'react'\nimport PropertiesList from '../Properties/PropertiesList'\n\nconst Properties = props => {\n    const [newPropertyDisplay, setNewPropertyDisplay] = useState(false)\n    const [currentProperties, setCurrentProperties] = useState([])\n    const [submitProperty, setSubmitProperty] = useState(false)\n    const [address, setAddress] = useState('')\n    const [leaseAmt, setLeaseAmt] = useState()\n    const [leaseStatus, setLeaseStatus] = useState(null)\n    const { user_id, admin } = props\n\n    function newProperty() {\n        setSubmitProperty(false)\n        setNewPropertyDisplay(true)\n    }\n\n    function submit() {\n        axios.post('/api/manager/properties', {\n            address: address,\n            leaseAmt: leaseAmt,\n            status: leaseStatus !== null ? leaseStatus : false\n        })\n            .then(res => {\n                setSubmitProperty(true)\n                setNewPropertyDisplay(false)\n                setAddress('')\n                setLeaseAmt()\n                setLeaseStatus(null)\n                axios.get('/api/manager/properties')\n                    .then(res => {\n                        setCurrentProperties(res.data)\n                    })\n                    .catch(err => console.log(err))\n            })\n    }\n\n    function checkbox(checkbox) {\n        if (checkbox.checked === true) {\n            setLeaseStatus(true)\n        } else if (checkbox.checked === false) {\n            setLeaseStatus(false)\n        }\n    }\n\n    return (\n        <div>\n            <div>\n                <div>\n                    <h1>Current Properties</h1>\n                    <PropertiesList setCurrentProperties={setCurrentProperties} currentProperties={currentProperties} />\n                </div>\n                <button className=\"submit\" onClick={() => newProperty()}>New Property</button>\n            </div>\n            {newPropertyDisplay === true ? (\n                <div>\n                    <div>\n                        <div>Address: </div>\n                        <input onChange={e => setAddress(e.target.value)}></input>\n                    </div>\n                    <div>\n                        <div>Lease Amount: </div>\n                        <input onChange={e => setLeaseAmt(e.target.value)} placeholder='$'></input>\n                    </div>\n                    <div>\n                        <input type='checkbox' name='leaseStatus' id='leaseStatus' onClick={() => checkbox(document.getElementById('leaseStatus'))}></input>\n                        <label htmlFor={'leaseStatus'}>Active Lease?</label>\n                    </div>\n                    <div>\n                        <button className='Submit' onClick={() => submit()}>Submit</button>\n                    </div>\n                </div>) : null}\n        </div>\n    )\n}\n\nexport default Properties","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/MaintReq/SingleMaintReq.js",["130","131"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\n\nconst SingleMaintReq = props => {\n  const [subject, setSubject] = useState('')\n  const [request, setRequest] = useState('')\n  const [admin] = useState(props.admin)\n  const [user_id] = useState(props.user_id)\n  const [prop_id] = useState(props.prop_id)\n\n  console.log(props)\n\n  function submitMaintReq() {\n    axios.post(`/api/tenant/${user_id}/mr`, { prop_id, subject, request })\n      .then(() => {\n        props.history.push('/maintreq')\n      })\n      .catch(err => console.log(err))\n  }\n\n\n\n  return (\n    <div>\n      <h1>Maintenance Request</h1>\n      <input\n        value={subject}\n        onChange={e => setSubject(e.target.value)}\n        placeholder=\"Subject\"\n        type=\"text\"\n      >\n      </input>\n      <input\n        value={request}\n        onChange={e => setRequest(e.target.value)}\n        placeholder=\"What is the issue?\"\n        type=\"text\"\n      >\n      </input>\n      <button onClick={submitMaintReq}>Submit</button>\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  console.log('state:', state)\n  return {\n    email: state.user.email,\n    user_id: state.user.user_id,\n    admin: state.user.admin,\n    approved: state.user.approved,\n    prop_id: state.user.prop_id\n  }\n}\n\nexport default connect(mapStateToProps)(SingleMaintReq)","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Tenants/Tenants.js",["132"],"import axios from 'axios'\nimport React, {useState} from 'react'\nimport TenantList from '../Tenants/TenantList'\nimport TenantRequestList from '../Tenants/TenantRequestList'\n\nconst Tenants = props => {\n    const [newTenantDisplay, setNewTenantDisplay] = useState(false)\n    const [currentTenants, setCurrentTenants] = useState([])\n    const [submitTenant, setSubmitTenant] = useState(false)\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [email, setEmail] = useState('')\n    const [phone, setPhone] = useState('')\n    const [propId, setPropId] = useState()\n    const [dueDate, setDueDate] = useState('')\n    const [password, setPassword] = useState('')\n    const [petBool, setPetBool] = useState(null)\n\n    function newTenant() {\n        setSubmitTenant(false)\n        setNewTenantDisplay(true)          \n    }\n\n    function submit() {\n        axios.post('/api/manager/tenants', {\n            first_name: firstName,\n            last_name: lastName,\n            phone: phone,\n            email: email,\n            pet: petBool !== null ? petBool : false,\n            is_approved: true,\n            prop_id: propId,\n            password: password,\n            due_date: dueDate\n        })\n        .then(res => {\n            setSubmitTenant(true)\n            setNewTenantDisplay(false)\n            setFirstName('')\n            setLastName('')\n            setPhone('')\n            setEmail('')\n            setPetBool(null)\n            setPropId()\n            setPassword('')\n            setDueDate('')\n            axios.get('/api/manager/tenants/true')\n            .then(res => {\n                setCurrentTenants(res.data)\n            })\n            .catch(err => console.log(err))\n        })\n    }\n\n    function checkbox(checkbox) {\n        if (checkbox.checked === true) {\n            setPetBool(true)\n        } else if (checkbox.checked === false){\n            setPetBool(false)\n        }\n    }\n\n return (\n  <div>\n      <div>\n          <div>\n            <h1>Current Tenants</h1>\n            <TenantList setCurrentTenants={setCurrentTenants} currentTenants={currentTenants}/>\n          </div>\n          <div>\n            <h1>Tenant Requests</h1>\n            <TenantRequestList setCurrentTenants={setCurrentTenants} />\n          </div>\n          <button className=\"submit\" onClick={newTenant}>New Tenant</button>\n      </div>\n      {newTenantDisplay === true ? (\n        <div>\n            <div>\n                <div>\n                    <div>First Name: </div>\n                    <input onChange={e => setFirstName(e.target.value)}></input> \n                </div>\n                <div>\n                    <div>Last Name: </div>\n                    <input onChange={e => setLastName(e.target.value)}></input> \n                </div>\n                <div>\n                    <div>Property ID: </div>\n                    <input onChange={e => setPropId(e.target.value)}></input> \n                </div>\n            </div>\n            <div>\n                <div>\n                    <div>Phone: </div>\n                    <input onChange={e => setPhone(e.target.value)}></input> \n                </div>\n                <div>\n                    <div>Email: </div>\n                    <input onChange={e => setEmail(e.target.value)}></input> \n                </div>\n                <div>\n                    <div>Password: </div>\n                    <input onChange={e => setPassword(e.target.value)}></input> \n                </div>\n            </div>\n            <div>\n                <div>\n                    <div>Due Date: </div>\n                    <input onChange={e => setDueDate(e.target.value)}></input> \n                </div>\n                <div>\n                    <input type='checkbox' name='pets' id='pets' onClick={() => checkbox(document.getElementById('pets'))}></input>\n                    <label htmlFor={'pets'}>Pets?</label>\n                </div>\n                <div>\n                    <button className='Submit' onClick={submit}>Submit</button> \n                </div>\n            </div>\n        </div>) : null}\n  </div>\n )\n}\nexport default Tenants","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Payments/Payments.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/Login.js",["133"],"import React, { useState } from 'react'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport { loginUser } from '../../redux/reducer'\nimport Popup from '../Popup'\nimport { useForm } from 'react-hook-form'\nimport '../../scss/main.scss'\n\nconst Login = props => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [isOpen, setIsOpen] = useState(false)\n  const { register, handleSubmit, errors } = useForm();\n\n  const onSubmit = (data) => {\n    console.log(data)\n  }\n\n  const togglePopup = () => {\n    setIsOpen(!isOpen)\n  }\n\n  function submit() {\n    axios.post('/auth/login', { email, password })\n      .then((res) => {\n        // console.log('login successful - 1')\n        props.loginUser(res.data.email, res.data.user_id, res.data.admin, res.data.approved, res.data.prop_id)\n        props.history.push('/dashboard')\n      })\n      .catch(err => console.log(err))\n  }\n\n  return (\n    <div className='login-page'>\n      {/* <input\n        placeholder='Email'\n        type=\"text\"\n        value={email}\n        onChange={e => setEmail(e.target.value)}>\n      </input>\n      <input\n        placeholder='Password'\n        type=\"text\"\n        value={password}\n        onChange={e => setPassword(e.target.value)}>\n      </input>\n      <button onClick={e => submit()}>Login</button>\n      <button>I need access</button> */}\n      <input  className=\"btn-1\" type=\"button\"\n        value=\"Login\"\n        onClick={togglePopup} />\n      {isOpen && <Popup content={<>\n        <div className=\"member-login\">\n          <h2>Lemon Prop Mgmt</h2>\n          <p>Just a placeholder for any extra text we may need here</p>\n          <input\n            placeholder='Email'\n            type=\"text\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}>\n          </input>\n          <input\n            placeholder='Password'\n            type=\"text\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}>\n          </input>\n          <button onClick={e => submit()}>Log in</button>\n        </div>\n        {/* Request access */}\n        <div className=\"login-request\">\n          <h2>Request access to the portal</h2>\n          <p>Need access? Fill out your information below and we'll send you an activation link via email. To best match your account, please use the same information provided to your Property Manager.</p>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <input type=\"text\" name=\"first name\" placeholder=\"First Name\" ref={register({ required: true })} />\n            <input type=\"text\" name=\"last name\" placeholder=\"Last Name\" ref={register({ required: true })} />\n            <input type=\"tel\" name=\"phone\" placeholder=\"Phone number\" ref={register({ required: true, minLength: 6, maxLength: 12 })} />\n            <input type=\"text\" name=\"email\" placeholder=\"Email address\" ref={register({ required: true, pattern: /^\\S+@\\S+$/i })} />\n            <input type=\"radio\" name=\"pets\" placeholder=\"Pets\" ref={register} />Pets\n            <input type=\"submit\" />\n          </form>\n        </div>\n      </>}\n        handleClose={togglePopup} />\n      }\n\n    </div>\n  )\n}\n\n\nexport default connect(null, { loginUser })(Login)","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/MaintReq/MaintReqList.js",["134"],"import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nconst MaintReqList = props => {\n  const [myList, setMyList] = useState([])\n  const [openList, setOpenList] = useState([])\n  const [closedList, setClosedList] = useState([])\n  const { user_id, admin } = props\n\n  useEffect(() => {\n    if (admin === false) {\n      axios.get(`/api/tenant/${user_id}/mr`)\n        .then(res => {\n          setMyList(res.data)\n        })\n        .catch(err => console.log(err))\n    } else if (admin === true) {\n      axios.get(`/api/manager/mr/admin/false`)\n        .then(res => {\n          setOpenList(res.data)\n        })\n        .catch(err => console.log(err))\n      axios.get('/api/manager/mr/admin/true')\n        .then(res => {\n          setClosedList(res.data)\n        })\n        .catch(err => console.log(err))\n    }\n  }, [user_id])\n\n\n\n  function mapIt(array) {\n    return array.map((element) => {\n      return (\n        <div key={element.maint_req_id}>\n          {(admin === false && !props.open) ? (\n            <div >\n              <h2>{ }</h2>\n              <div>{element.date_sub}</div>\n              <div>{element.subject}</div>\n              {admin === false ? null : <div>{element.prop_id}</div>}\n              <div>{element.status}</div>\n              {admin === true && element.status === 'open' ? <button>Complete</button> : null}\n            </div>\n          ) : (\n              element.is_compl === false ? (\n                <div>\n                  <h2>{ }</h2>\n                  <div>{element.date_sub}</div>\n                  <div>{element.subject}</div>\n                  {admin === false ? null : <div>{element.prop_id}</div>}\n                  <div>{element.status}</div>\n                  {admin === true && element.status === 'open' ? <button>Complete</button> : null}\n                </div>\n              ) : null)}\n          {(admin === true && element.is_compl === true && !props.open) ? (\n            <div key={element.maint_req_id}>\n              <h2>{ }</h2>\n              <div>{element.date_sub}</div>\n              <div>{element.subject}</div>\n              {admin === false ? null : <div>{element.prop_id}</div>}\n              <div>{element.status}</div>\n              {admin === true && element.status === 'open' ? <button>Complete</button> : null}\n            </div>\n          ) : null}\n        </div>\n      )\n    })\n  }\n\n  return (\n    <div className='maint-req'>\n      <h1>{!props.open ? 'Maintenance Request History' : null}</h1>\n      {(admin === false && !props.open) ? mapIt(myList) : null}\n      {(admin === false && props.open) ? (\n        <div>\n          <h2>Open Requests</h2>\n          {mapIt(myList)}\n        </div>\n      ) : null}\n      {(admin === true && !props.open) ? (\n        <div>\n          <h2>Open Requests:</h2>\n          {mapIt(openList)}\n        </div>) : null}\n      {(admin === true && !props.open) ? (\n        <div>\n          <h2>Closed Requests:</h2>\n          {mapIt(closedList)}\n        </div>) : null}\n      {(admin === true && props.open) ? (\n        <div>\n          <h2>Open Requests:</h2>\n          {mapIt(openList)}\n        </div>) : null}\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    email: state.user.email,\n    user_id: state.user.user_id,\n    admin: state.user.admin,\n    approved: state.user.approved,\n    prop_id: state.user.prop_id\n  }\n}\n\nexport default connect(mapStateToProps)(MaintReqList)","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Payments/MakePayment.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Properties/PropertiesList.js",["135"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\n\nconst PropertiesList = props => {\n  const { setCurrentProperties, currentProperties } = props\n  const [address, setAddress] = useState('')\n  const [leaseAmt, setLeaseAmt] = useState()\n  const [leaseStatus, setLeaseStatus] = useState(null)\n  const [buttonId, setButtonId] = useState()\n  const [editBool, setEditBool] = useState(false)\n  const { user_id, admin } = props\n\n  useEffect(() => {\n    if (admin === true) {\n      axios.get('/api/manager/properties')\n        .then(res => {\n          setCurrentProperties(res.data)\n        })\n        .catch(err => console.log(err))\n    }\n  }, [user_id])\n\n  function clickEdit(id) {\n    setEditBool(true)\n    setButtonId(id)\n  }\n\n  function checkbox(checkbox) {\n    if (checkbox.checked === true) {\n      setLeaseStatus(true)\n    } else if (checkbox.checked === false) {\n      setLeaseStatus(false)\n    }\n  }\n\n  function submit(element) {\n    axios.put(`/api/manager/properties/${element.prop_id}`, {\n      address: address !== '' ? address : element.address,\n      leaseAmt: leaseAmt !== undefined ? leaseAmt : element.lease_amt,\n      status: leaseStatus !== null ? leaseStatus : element.lease_status\n    })\n      .then(res => {\n        setEditBool(false)\n        setAddress('')\n        setLeaseAmt()\n        setLeaseStatus(null)\n        axios.get('/api/manager/properties')\n          .then(res => {\n            setCurrentProperties(res.data)\n          })\n          .catch(err => console.log(err))\n      })\n      .catch(err => console.log(err))\n  }\n\n  function mapIt(array) {\n    return array.map((element) => {\n      return (\n        <div key={element.prop_id}>\n          <button onClick={() => clickEdit(element.prop_id)}>Edit</button>\n          {editBool === false ? (\n            <div>\n              <div>{element.prop_id}</div>\n              <div>{element.address}</div>\n              <div>{`$${element.lease_amt}`}</div>\n              {element.lease_status === true ? <div>Yes</div> : <div>No</div>}\n            </div>\n          ) : (\n              element.prop_id === buttonId ? (\n                <div>\n                  <div>{element.prop_id}</div>\n                  <input defaultValue={element.address} onChange={e => setAddress(e.target.value)}></input>\n                  <input defaultValue={element.lease_amt} onChange={e => setLeaseAmt(e.target.value)}></input>\n                  <input type='checkbox' name='leaseStatus' id='leaseStatus' defaultChecked={element.lease_status} onClick={() => checkbox(document.getElementById('leaseStatus'))}></input>\n                  <label htmlFor={'leaseStatus'}>Active Lease?</label>\n                  <button className='submit' onClick={() => submit(element)}>Save</button>\n                </div>\n              ) : (\n                  <div>\n                    <div>{element.prop_id}</div>\n                    <div>{element.address}</div>\n                    <div>{`$${element.lease_amt}`}</div>\n                    {element.lease_status === true ? <div>Yes</div> : <div>No</div>}\n                  </div>\n                )\n            )\n          }\n        </div>\n      )\n    })\n  }\n\n  return (\n    <div className='maint-req'>\n      {mapIt(currentProperties)}\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    email: state.user.email,\n    user_id: state.user.user_id,\n    admin: state.user.admin,\n    approved: state.user.approved\n  }\n}\nexport default connect(mapStateToProps)(PropertiesList)","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Tenants/TenantList.js",["136"],"import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nconst TenantList = props => {\n  const { setCurrentTenants, currentTenants } = props\n  const [addresses, setAddresses] = useState([])\n  const [editBool, setEditBool] = useState(false)\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [email, setEmail] = useState('')\n  const [phone, setPhone] = useState('')\n  const [propId, setPropId] = useState()\n  const [buttonId, setButtonId] = useState()\n  const [petBool, setPetBool] = useState(null)\n  const { user_id, admin } = props\n\n  useEffect(() => {\n    if (admin === true) {\n      axios.get('/api/manager/tenants/true')\n        .then(res => {\n          setCurrentTenants(res.data)\n        })\n        .catch(err => console.log(err))\n      axios.get('/api/manager/properties')\n        .then(res => {\n          setAddresses(res.data)\n        })\n        .catch(err => console.log(err))\n    }\n  }, [user_id])\n\n  function clickEdit(id) {\n    setEditBool(true)\n    setButtonId(id)\n  }\n\n  function checkbox(checkbox) {\n    if (checkbox.checked === true) {\n      setPetBool(true)\n    } else if (checkbox.checked === false) {\n      setPetBool(false)\n    }\n  }\n\n  function submit(element) {\n    axios.put(`/api/manager/tenants/${element.user_id}`, {\n      first_name: firstName !== '' ? firstName : element.first_name,\n      last_name: lastName !== '' ? lastName : element.last_name,\n      phone: phone !== '' ? phone : element.phone,\n      email: email !== '' ? email : element.email,\n      pet: petBool !== null ? petBool : element.pet,\n      is_approved: true,\n      prop_id: propId ? propId : element.prop_id\n    })\n      .then(res => {\n        setEditBool(false)\n        setFirstName('')\n        setLastName('')\n        setPhone('')\n        setEmail('')\n        setPetBool(null)\n        setPropId()\n        axios.get('/api/manager/tenants/true')\n          .then(res => {\n            setCurrentTenants(res.data)\n          })\n          .catch(err => console.log(err))\n      })\n      .catch(err => console.log(err))\n  }\n\n  function mapIt(array) {\n    let currentAddress\n    return array.map((element) => {\n      for (let i = 0; i < addresses.length; i++) {\n        if (element.prop_id === addresses[i].prop_id) {\n          currentAddress = addresses[i].address\n        }\n      }\n      return (\n        <div key={element.user_id}>\n          <button onClick={() => clickEdit(element.user_id)}>Edit</button>\n          {editBool === false ? (\n            <div>\n              <div>{element.user_id}</div>\n              <div>{`${element.first_name} ${element.last_name}`}</div>\n              <div>{element.prop_id && currentAddress}</div>\n              <div>{element.email}</div>\n              <div>{element.phone}</div>\n              {element.pet === true ? <div>Yes</div> : <div>No</div>}\n              <div>{element.due_date}</div>\n            </div>\n          ) : (\n              element.user_id === buttonId ? (\n                <div>\n                  <div>{element.user_id}</div>\n                  <input defaultValue={`${element.first_name}`} onChange={e => setFirstName(e.target.value)}></input>\n                  <input defaultValue={`${element.last_name}`} onChange={e => setLastName(e.target.value)}></input>\n                  <input defaultValue={element.prop_id} onChange={e => setPropId(e.target.value)}></input>\n                  <input defaultValue={element.email} onChange={e => setEmail(e.target.value)}></input>\n                  <input defaultValue={element.phone} onChange={e => setPhone(e.target.value)}></input>\n                  <input type='checkbox' name='pets' id='pets' defaultChecked={element.pet} onClick={() => checkbox(document.getElementById('pets'))}></input>\n                  <label htmlFor={'pets'}>Pets?</label>\n                  <button className='submit' onClick={() => submit(element)}>Save</button>\n                </div>\n              ) : (\n                  <div>\n                    <div>{element.user_id}</div>\n                    <div>{`${element.first_name} ${element.last_name}`}</div>\n                    <div>{currentAddress}</div>\n                    <div>{element.email}</div>\n                    <div>{element.phone}</div>\n                    {element.pets === true ? <div>Yes</div> : <div>No</div>}\n                    <div>{element.due_date}\n                    </div>\n                  </div>\n                )\n            )\n          }\n        </div>\n      )\n    })\n  }\n\n  return (\n    <div className='maint-req'>\n      {mapIt(currentTenants)}\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    email: state.user.email,\n    user_id: state.user.user_id,\n    admin: state.user.admin,\n    approved: state.user.approved\n  }\n}\n\nexport default connect(mapStateToProps)(TenantList)","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Tenants/TenantRequestList.js",["137"],"import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nconst TenantRequestList = props => {\n\n  const [tenantRequests, setTenantRequests] = useState([])\n  const { setCurrentTenants } = props\n  const { user_id, admin } = props\n\n  useEffect(() => {\n    if (admin === false) {\n      return ('You do not have access to this data.')\n    } else if (admin === true) {\n      axios.get('/api/manager/tenants/false')\n        .then(res => {\n          setTenantRequests(res.data)\n        })\n        .catch(err => console.log(err))\n    }\n  }, [user_id])\n\n  function approve(element) {\n    axios.put(`/api/manager/tenants/${element.user_id}`, {\n      first_name: element.first_name,\n      last_name: element.last_name,\n      phone: element.phone,\n      email: element.email,\n      pet: element.pet,\n      is_approved: true,\n      prop_id: element.prop_id\n    })\n      .then(res => {\n        axios.get('/api/manager/tenants/false')\n          .then(res => {\n            setTenantRequests(res.data)\n            axios.get('/api/manager/tenants/true')\n              .then(res => {\n                setCurrentTenants(res.data)\n              })\n              .catch(err => console.log(err))\n          })\n          .catch(err => console.log(err))\n      })\n      .catch(err => console.log(err))\n  }\n\n  function mapIt(array) {\n    return array.map((element) => {\n      return (\n        <div key={element.user_id}>\n          <div>{element.user_id}</div>\n          <div>{`${element.first_name} ${element.last_name}`}</div>\n          <div>{element.email}</div>\n          <div>{element.phone}</div>\n          {element.pets === true ? <div>Yes</div> : <div>No</div>}\n          <div>{element.due_date}</div>\n          {admin === true && element.approved === false ? <button\n            className='submit'\n            onClick={() => approve(element)}>Approve</button> : null}\n        </div>\n      )\n    })\n  }\n\n  return (\n    <div>\n      {mapIt(tenantRequests)}\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    email: state.user.email,\n    user_id: state.user.user_id,\n    admin: state.user.admin,\n    approved: state.user.approved\n  }\n}\n\nexport default connect(mapStateToProps)(TenantRequestList)","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Payments/PaymentList.js",["138","139","140"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { updatePaymentsTnt, updatePaymentsMgr } from '../../redux/paymentReducer';\n\n// List of tenants' past payments\nconst PaymentList = props => {\n    let { properties, changeProperties } = useState([])\n    const { admin, user_id } = props\n\n    useEffect(() => {\n        if (admin === false) {\n            props.updatePaymentsTnt(user_id)\n            // .then(res => console.log(res))\n        } else if (admin === true) {\n            props.updatePaymentsMgr()\n        }\n    }, [user_id])\n\n    function mappedList(array) {\n        return array.map((el) => {\n            return (\n                <div key={el.invoice_id}>\n                    <div> {el.invoice_id} </div>\n                    <div> {el.date_paid} </div>\n                    <div> {el.amt_paid} </div>\n                    {admin === true ? <div> {el.user_id} </div> : null}\n                </div>\n            )\n        })\n    }\n\n    return (\n        <div>\n            <p>Payment History</p>\n            {admin === false ? mappedList(props.tnt_payments_list) : mappedList(props.mgr_payments_list)}\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user_id: state.user.user_id,\n        admin: state.user.admin,\n        mgr_payments_list: state.payments.mgr_payments_list,\n        tnt_payments_list: state.payments.tnt_payments_list\n    }\n}\n\nexport default connect(mapStateToProps, { updatePaymentsTnt, updatePaymentsMgr })(PaymentList)","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Popup.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/redux/paymentReducer.js",[],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":14,"column":6,"nodeType":"147","endLine":14,"endColumn":8,"suggestions":"148"},{"ruleId":"149","severity":1,"message":"150","line":26,"column":19,"nodeType":"151","endLine":26,"endColumn":55},{"ruleId":"149","severity":1,"message":"150","line":48,"column":21,"nodeType":"151","endLine":48,"endColumn":57},{"ruleId":"149","severity":1,"message":"150","line":13,"column":9,"nodeType":"151","endLine":13,"endColumn":43},{"ruleId":"145","severity":1,"message":"152","line":27,"column":6,"nodeType":"147","endLine":27,"endColumn":15,"suggestions":"153"},{"ruleId":"154","severity":1,"message":"155","line":8,"column":12,"nodeType":"156","messageId":"157","endLine":8,"endColumn":26},{"ruleId":"154","severity":1,"message":"158","line":12,"column":13,"nodeType":"156","messageId":"157","endLine":12,"endColumn":20},{"ruleId":"154","severity":1,"message":"159","line":12,"column":22,"nodeType":"156","messageId":"157","endLine":12,"endColumn":27},{"ruleId":"154","severity":1,"message":"160","line":1,"column":27,"nodeType":"156","messageId":"157","endLine":1,"endColumn":36},{"ruleId":"154","severity":1,"message":"159","line":8,"column":10,"nodeType":"156","messageId":"157","endLine":8,"endColumn":15},{"ruleId":"154","severity":1,"message":"161","line":9,"column":12,"nodeType":"156","messageId":"157","endLine":9,"endColumn":24},{"ruleId":"154","severity":1,"message":"162","line":13,"column":35,"nodeType":"156","messageId":"157","endLine":13,"endColumn":41},{"ruleId":"145","severity":1,"message":"152","line":30,"column":6,"nodeType":"147","endLine":30,"endColumn":15,"suggestions":"163"},{"ruleId":"145","severity":1,"message":"164","line":22,"column":6,"nodeType":"147","endLine":22,"endColumn":15,"suggestions":"165"},{"ruleId":"145","severity":1,"message":"166","line":31,"column":6,"nodeType":"147","endLine":31,"endColumn":15,"suggestions":"167"},{"ruleId":"145","severity":1,"message":"152","line":21,"column":6,"nodeType":"147","endLine":21,"endColumn":15,"suggestions":"168"},{"ruleId":"154","severity":1,"message":"169","line":7,"column":11,"nodeType":"156","messageId":"157","endLine":7,"endColumn":21},{"ruleId":"154","severity":1,"message":"170","line":7,"column":23,"nodeType":"156","messageId":"157","endLine":7,"endColumn":39},{"ruleId":"145","severity":1,"message":"171","line":17,"column":8,"nodeType":"147","endLine":17,"endColumn":17,"suggestions":"172"},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["175"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'admin'. Either include it or remove the dependency array.",["176"],"no-unused-vars","'submitProperty' is assigned a value but never used.","Identifier","unusedVar","'user_id' is assigned a value but never used.","'admin' is assigned a value but never used.","'useEffect' is defined but never used.","'submitTenant' is assigned a value but never used.","'errors' is assigned a value but never used.",["177"],"React Hook useEffect has missing dependencies: 'admin' and 'setCurrentProperties'. Either include them or remove the dependency array.",["178"],"React Hook useEffect has missing dependencies: 'admin' and 'setCurrentTenants'. Either include them or remove the dependency array.",["179"],["180"],"'properties' is assigned a value but never used.","'changeProperties' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'admin' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["181"],"no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"184","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"184","fix":"191"},{"desc":"192","fix":"193"},"Update the dependencies array to be: [props]",{"range":"194","text":"195"},"Update the dependencies array to be: [admin, user_id]",{"range":"196","text":"197"},{"range":"198","text":"197"},"Update the dependencies array to be: [admin, setCurrentProperties, user_id]",{"range":"199","text":"200"},"Update the dependencies array to be: [admin, setCurrentTenants, user_id]",{"range":"201","text":"202"},{"range":"203","text":"197"},"Update the dependencies array to be: [admin, props, user_id]",{"range":"204","text":"205"},[485,487],"[props]",[824,833],"[admin, user_id]",[872,881],[701,710],"[admin, setCurrentProperties, user_id]",[1010,1019],"[admin, setCurrentTenants, user_id]",[590,599],[570,579],"[admin, props, user_id]"]