[{"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/index.js":"1","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/App.js":"2","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/reportWebVitals.js":"3","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Routes.js":"4","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/AccountNavigation.js":"5","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/redux/store.js":"6","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/LandingPage.js":"7","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/redux/reducer.js":"8","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Payments/PaymentList.js":"9","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/MaintReq/SingleMaintReq.js":"10","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/RequestAccess.js":"11","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/PasswordReset/RequestReset.js":"12","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Properties/Properties.js":"13","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/AccountDash/TheDashboard.js":"14","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/RequestSubmitted.js":"15","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/MaintReq/MaintReq.js":"16","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/PasswordReset/UpdatePassword.js":"17","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Tenants/Tenants.js":"18","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/Login.js":"19","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/MaintReq/MaintReqList.js":"20","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Tenants/TenantList.js":"21","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Tenants/TenantRequestList.js":"22","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Popup.js":"23","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Payments/Payments.js":"24","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Payments/MakePayment.js":"25","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Properties/PropertiesList.js":"26"},{"size":778,"mtime":1612306541227,"results":"27","hashOfConfig":"28"},{"size":758,"mtime":1612374976408,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1611607556846,"results":"30","hashOfConfig":"28"},{"size":1881,"mtime":1612308183128,"results":"31","hashOfConfig":"28"},{"size":1738,"mtime":1612286956762,"results":"32","hashOfConfig":"28"},{"size":106,"mtime":1612306541228,"results":"33","hashOfConfig":"28"},{"size":412,"mtime":1612286956762,"results":"34","hashOfConfig":"28"},{"size":850,"mtime":1612376058218,"results":"35","hashOfConfig":"28"},{"size":1418,"mtime":1612385309099,"results":"36","hashOfConfig":"28"},{"size":328,"mtime":1612306541226,"results":"37","hashOfConfig":"28"},{"size":1072,"mtime":1612286956763,"results":"38","hashOfConfig":"28"},{"size":141,"mtime":1612286956765,"results":"39","hashOfConfig":"28"},{"size":2683,"mtime":1612375007380,"results":"40","hashOfConfig":"28"},{"size":3837,"mtime":1612375007380,"results":"41","hashOfConfig":"28"},{"size":437,"mtime":1612286956763,"results":"42","hashOfConfig":"28"},{"size":321,"mtime":1612286956763,"results":"43","hashOfConfig":"28"},{"size":147,"mtime":1612286956765,"results":"44","hashOfConfig":"28"},{"size":4209,"mtime":1612306541227,"results":"45","hashOfConfig":"28"},{"size":3348,"mtime":1612375007380,"results":"46","hashOfConfig":"28"},{"size":1854,"mtime":1612308183125,"results":"47","hashOfConfig":"28"},{"size":5694,"mtime":1612375007382,"results":"48","hashOfConfig":"28"},{"size":2702,"mtime":1612375007382,"results":"49","hashOfConfig":"28"},{"size":274,"mtime":1612287388563,"results":"50","hashOfConfig":"28"},{"size":357,"mtime":1612374976410,"results":"51","hashOfConfig":"28"},{"size":2208,"mtime":1612385557351,"results":"52","hashOfConfig":"28"},{"size":4251,"mtime":1612375007381,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"dlyh98",{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"56"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"56"},"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/index.js",[],["118","119"],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/App.js",["120"],"import React, { useEffect } from 'react'\nimport axios from 'axios'\nimport routes from './Routes'\nimport AccountNavigation from './Components/AccountNavigation'\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { loginUser } from './redux/reducer'\n\nfunction App(props) {\n  useEffect(() => {\n    console.log(props)\n    axios.get(`/auth/user`).then((res) => {\n      console.log(res.data)\n      props.loginUser(res.data.email, res.data.user_id, res.data.admin, res.data.approved);\n    }).catch(err => console.log(err))\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <AccountNavigation />\n      {routes}\n    </div>\n  );\n}\nfunction mapStateToProps(reduxState) { return reduxState }\nexport default connect(mapStateToProps, { loginUser })(App)\n","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/reportWebVitals.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Routes.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/AccountNavigation.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/redux/store.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/LandingPage.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/redux/reducer.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Payments/PaymentList.js",["121"],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\n// List of tenants past payments\n// Study maintReqList Component\n\nconst PaymentList = props => {\n    console.log('PAYMENT LIST PROPS:   ', props)\n\n    const [paymentsList, setPaymentsList] = useState([])\n    const { admin, user_id } = props\n\n    useEffect(() => {\n        if (admin === false) {\n            axios.get(`/api/tenant/${user_id}/payments`)\n                .then(res => {\n                    setPaymentsList(res.data)\n                })\n                .catch(err => console.log(err))\n        } else if (admin === true) {\n            axios.get('/api/manager/payments')\n                .then(res => {\n                    setPaymentsList(res.data)\n                })\n                .catch(err => console.log(err))\n        }\n    }, [props])\n\n\n    let mappedList = paymentsList.map((el) => {\n        return (\n            <div key={el.invoice_id}>\n                <div> {el.date_paid} </div>\n                <div> {el.amt_paid} </div>\n            </div>\n        )\n    })\n\n    return (\n        <div>\n            <p>PaymentList</p>\n            <div> {mappedList} </div>\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    console.log(\"state:\", state);\n    return {\n        user_id: state.user_id,\n        admin: state.admin\n    }\n}\n\nexport default connect(mapStateToProps)(PaymentList)","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/MaintReq/SingleMaintReq.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/RequestAccess.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/PasswordReset/RequestReset.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Properties/Properties.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/AccountDash/TheDashboard.js",["122","123","124","125","126","127","128","129"],"import React, { useEffect, useState } from 'react'\nimport MakePayment from '../Payments/MakePayment'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\n\n\nconst TheDashboard = props => {\n  const [tenantOpenMr, setTenantOpenMr] = useState([])\n  const [managerOpenMr, setManagerOpenMr] = useState([])\n  const [admin, setAdmin] = useState(props.admin)\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [email, setEmail] = useState('')\n  const [phone, setPhone] = useState('')\n  const [user_id, setUserId] = useState(props.user_id)\n  const [tenantInfo, setTenantInfo] = useState([])\n  const [editBool, setEditBool] = useState(false)\n  const [buttonId, setButtonId] = useState()\n\n  useEffect(() => {\n    if (admin === false) {\n      axios.put(`/api/tenant/:${user_id}`)\n        .then(res => {\n          setTenantOpenMr(res.data)\n        })\n        .catch(err => console.log(err))\n    } else if (admin === true) {\n      axios.get('/api/manager/manager/mr/false')\n        .then(res => {\n          setManagerOpenMr(res.data)\n        })\n        .catch(err => console.log(err))\n    }\n  }, [])\n\n  function clickEdit(id) {\n    setEditBool(true)\n    setButtonId(id)\n  }\n\n  function editTenant(element) {\n    axios.put(`/api/tenant/:${element.user_id}`, {\n      first_name: firstName !== '' ? firstName : element.first_name,\n      last_name: lastName !== '' ? lastName : element.last_name,\n      phone: phone !== '' ? phone : element.phone,\n      email: email !== '' ? email : element.email\n    })\n      .then(res => {\n        setFirstName('')\n        setLastName('')\n        setPhone('')\n        setEmail('')\n      })\n      .catch(err => console.log(err))\n  }\n\n  function mappedTenant(array) {\n    return array.map((element) => {\n\n      return (\n        <div key={element.user_id}>\n          <button onClick={() => clickEdit(element.user_id)}>Edit</button>\n          {editBool === false ? (\n            <div>\n              <div>{element.user_id}</div>\n              <div>{element.first_name}</div>\n              <div>{element.last_name}</div>\n              <div>{element.phone}</div>\n              <div>{element.email}</div>\n            </div>\n          ) : (\n              element.user_id === buttonId ? (\n                <div>\n                  <div>{element.user_id}</div>\n                  <input defaultValue={`${element.first_name}`} onChange={e => setFirstName(e.target.value)}></input>\n                  <input defaultValue={`${element.last_name}`} onChange={e => setLastName(e.target.value)}></input>\n                  <input defaultValue={element.phone} onChange={e => setPhone(e.target.value)}></input>\n                  <input defaultValue={element.email} onChange={e => setEmail(e.target.value)}></input>\n                  <button className='submit' onClick={() => editTenant(element)}>Save</button>\n                </div>\n              ) : (\n                  <div>\n                    <div>{element.user_id}</div>\n                    <div>{element.first_name}</div>\n                    <div>{element.last_name}</div>\n                    <div>{element.phone}</div>\n                    <div>{element.email}</div>\n                  </div>\n                )\n            )\n          }\n        </div >\n      )\n    })\n  }\n\n  return (\n    <div>\n      <p>TheDashboard</p>\n      <div className=\"edit-tenant\">\n        {mappedTenant(tenantInfo)}\n      </div>\n    </div>\n    \n  )\n}\nexport default TheDashboard\n\n//Tenant: \n// Display make payment\n// get open Maintenance requests or show some \"error if you should have a request still open email manager...\"\n// Edit user app.put('/api/tenant/:user_id', tenantCtrl.editUser)\n\n//Manager: \n//Total Income this month (maybe add, outstanding balance -- can add the past due amounts below and display it)\n//all open mrs\n//past due payments","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/RequestSubmitted.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/MaintReq/MaintReq.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/PasswordReset/UpdatePassword.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Tenants/Tenants.js",["130"],"import React, {useState} from 'react'\nimport TenantList from '../Tenants/TenantList'\nimport TenantRequestList from '../Tenants/TenantRequestList'\n\nconst Tenants = props => {\n    const [newTenantDisplay, setNewTenantDisplay] = useState(false)\n    const [submitTenant, setSubmitTenant] = useState(false)\n\n    function newTenant() {\n        console.log('clicked')\n        setSubmitTenant(false)\n        setNewTenantDisplay(true)          \n    }\n\n    function submit() {\n        console.log('submitted')\n        setSubmitTenant(true)\n        setNewTenantDisplay(false)\n    }\n\n return (\n  <div>\n      <div>\n          <div>\n            <h1>Current Tenants</h1>\n            <TenantList />\n          </div>\n          <div>\n            <h1>Tenant Requests</h1>\n            <TenantRequestList />\n          </div>\n          <button className=\"submit\" onClick={newTenant}>New Tenant</button>\n      </div>\n      {newTenantDisplay === true ? (\n        <div>\n            <div>\n                <div>\n                    <div>Name: </div>\n                    <input></input> \n                </div>\n                <div>\n                    <div>Address: </div>\n                    <input></input> \n                </div>\n            </div>\n            <div>\n                <div>\n                    <div>Phone: </div>\n                    <input></input> \n                </div>\n                <div>\n                    <div>Email: </div>\n                    <input></input> \n                </div>\n            </div>\n            <div>\n                <div>\n                    <div>Password: </div>\n                    <input></input> \n                </div>\n                <div>\n                    <div>Due Date: </div>\n                    <input></input> \n                </div>\n            </div>\n            <div>\n                <div>\n                    <div>Password: </div>\n                    <input></input> \n                </div>\n                <div>\n                    <input type='radio' placeholder='Pets: '></input>\n                    <button className='Submit' onClick={submit}>Submit</button> \n                </div>\n            </div>\n        </div>) : null}\n  </div>\n )\n}\nexport default Tenants","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/Login.js",["131"],"import React, { useState } from 'react'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport { loginUser } from '../../redux/reducer'\n// import { Link } from 'react-router-dom'\nimport Popup from '../Popup'\nimport { useForm } from 'react-hook-form'\n\nconst Login = props => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [isOpen, setIsOpen] = useState(false)\n  const { register, handleSubmit, errors } = useForm();\n\n  const onSubmit = (data) => {\n    console.log(data)\n  }\n\n  const togglePopup = () => {\n    setIsOpen(!isOpen)\n  }\n\n  function submit() {\n    // setEmail(email)\n    // setPassword(password)\n    axios.post('/auth/login', { email, password })\n      .then((res) => {\n        // console.log('login successful - 1')\n        props.loginUser(res.data.email, res.data.user_id, res.data.admin, res.data.approved)\n        // console.log('login successful - 2')\n        props.history.push('/dashboard')\n      })\n      .catch(err => console.log(err))\n  }\n\n  return (\n    <div>\n      <input\n        placeholder='Email'\n        type=\"text\"\n        value={email}\n        onChange={e => setEmail(e.target.value)}>\n      </input>\n      <input\n        placeholder='Password'\n        type=\"text\"\n        value={password}\n        onChange={e => setPassword(e.target.value)}>\n      </input>\n      {/* <Link to='/dashboard'> */}\n      <button onClick={e => submit()}>Login</button>\n      {/* </Link> */}\n      <button>I need access</button>\n      <input type=\"button\"\n        value=\"Login (popup)\"\n        onClick={togglePopup} />\n      {isOpen && <Popup content={<>\n        <div className=\"member-login\">\n          <h2>Lemon Prop Mgmt</h2>\n          <p>Just a placeholder for any extra text we may need here</p>\n          <input\n            placeholder='Email'\n            type=\"text\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}>\n          </input>\n          <input\n            placeholder='Password'\n            type=\"text\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}>\n          </input>\n          <button onClick={e => submit()}>Log in</button>\n        </div>\n        {/* Request access */}\n        <div className=\"login-request\">\n          <h2>Request access to the portal</h2>\n          <p>Need access? Fill out your information below and we'll send you an activation link via email. To best match your account, please use the same information provided to your Property Manager.</p>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <input type=\"text\" name=\"firstname\" placeholder=\"First Name\" ref={register({ required: true })} />\n            <input type=\"text\" name=\"lastname\" placeholder=\"Last Name\" ref={register({ required: true })} />\n            <input type=\"tel\" name=\"phone\" placeholder=\"Phone number\" ref={register({ required: true, minLength: 6, maxLength: 12 })} />\n            <input type=\"text\" name=\"email\" placeholder=\"Email address\" ref={register({ required: true, pattern: /^\\S+@\\S+$/i })} />\n            <input type=\"radio\" name=\"pets\" placeholder=\"Pets\" ref={register} />Pets\n            <input type=\"submit\" />\n          </form>\n        </div>\n      </>}\n        handleClose={togglePopup} />\n      }\n\n    </div>\n  )\n}\n\n\nexport default connect(null, { loginUser })(Login)","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/MaintReq/MaintReqList.js",["132","133","134"],"import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nconst MaintReqList = props => {\n\n  const [myList, setMyList] = useState([])\n  const [openList, setOpenList] = useState([])\n  const [closedList, setClosedList] = useState([])\n  const [admin, setAdmin] = useState(props.admin)\n  const [user_id, setUserId] = useState(props.user_id)\n\n\n  useEffect(() => {\n    if (admin === false) {\n      axios.get(`/api/tenant/${user_id}/mr`)\n        .then(res => {\n          setMyList(res.data)\n        })\n        .catch(err => console.log(err))\n    } else if (admin === true) {\n      axios.get('/api/manager/mr/false')\n        .then(res => {\n          setOpenList(res.data)\n        })\n        .catch(err => console.log(err))\n      axios.get('/api/manager/mr/true')\n        .then(res => {\n          setClosedList(res.data)\n        })\n        .catch(err => console.log(err))\n    }\n  }, [])\n\n  function mapIt(array) {\n    return array.map((element) => {\n      return (\n        <div key={element.maint_req_id}>\n          <div>{element.date_sub}</div>\n          <div>{element.subject}</div>\n          {admin === false ? null : <div>{element.prop_id}</div>}\n          <div>{element.status}</div>\n          {admin === true && element.status === 'open' ? <button>Complete</button> : null}\n        </div>\n      )\n    })\n  }\n\n  return (\n    <div className='maint-req'>\n      <h1>Maintenance Request History</h1>\n      {admin === false ? mapIt(myList) : null}\n      {admin === true ? mapIt(openList) : null}\n      {admin === true ? mapIt(closedList) : null}\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  console.log('state:', state)\n  return {\n    email: state.email,\n    user_id: state.user_id,\n    admin: state.admin,\n    approved: state.approved\n  }\n}\n\nexport default connect(mapStateToProps)(MaintReqList)","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Tenants/TenantList.js",["135","136","137"],"import axios from 'axios'\nimport React, { useEffect, useReducer, useState } from 'react'\nimport { connect } from 'react-redux'\n\nconst TenantList = props => {\n    const [currentTenants, setCurrentTenants] = useState([])\n    const [addresses, setAddresses] = useState([])\n    const [admin, setAdmin] = useState(true)\n    const [editBool, setEditBool] = useState(false)\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [email, setEmail] = useState('')\n    const [phone, setPhone] = useState('')\n    const [propId, setPropId] = useState()\n    const [buttonId, setButtonId] = useState()\n    const [petBool, setPetBool] = useState()\n\n    useEffect(() => {\n      setAdmin(props.admin)\n    }, [])\n  \n    useEffect(() => {\n        console.log(admin)\n    //   if (admin === false) {\n    //     return ('You do not have access to this data.')\n    //   } else\n       if (admin === true) {\n        axios.get('/api/manager/tenants/true')\n          .then(res => {\n            console.log(res.data)\n            setCurrentTenants(res.data)\n          })\n          .catch(err => console.log(err))\n        axios.get('/api/manager/properties')\n        .then(res => {\n            setAddresses(res.data)\n        })\n        .catch(err => console.log(err))\n      }\n    }, [])\n\n    function clickEdit(id) {\n        setEditBool(true)\n        setButtonId(id)\n    }\n\n    function submit(element) {\n        axios.put(`/api/manager/tenants/${element.user_id}`, {\n            first_name: firstName !== '' ? firstName : element.first_name,\n            last_name: lastName !== '' ? lastName : element.last_name,\n            phone: phone !== '' ? phone : element.phone,\n            email: email !== '' ? email : element.email,\n            pet: petBool ? petBool : element.pet,\n            approved: true,\n            prop_id: propId !== '' ? propId : element.prop_id\n        })\n        .then(res => {\n            axios.get('/api/manager/tenants/true')\n            .then(res => {\n              setCurrentTenants(res.data)\n              setEditBool(false)\n            })\n            .catch(err => console.log(err))\n        })\n        .catch(err => console.log(err))\n    }\n\n    function mapIt(array) {\n        let currentAddress\n        return array.map((element) => {\n            for (let i = 0; i < addresses.length; i++) {\n               if (element.prop_id === addresses[i].prop_id) {\n                currentAddress = addresses[i].address\n            }  \n        }\n           \n          return (\n            <div key={element.user_id}>\n            <button onClick={() => clickEdit(element.user_id)}>Edit</button>\n              {editBool === false ? (\n                <div>\n                    <div>{element.user_id}</div>\n                    <div>{`${element.first_name} ${element.last_name}`}</div>\n                    <div>{currentAddress}</div>\n                    <div>{element.email}</div>\n                    <div>{element.phone}</div>\n                    {element.pets === true ? <div>Yes</div> : <div>No</div>}\n                    <div>{element.due_date}</div>\n                </div>\n                ) : (\n                    element.user_id === buttonId ? (\n                    <div>\n                        <div>{element.user_id}</div>\n                        <input defaultValue={`${element.first_name}`} onChange={e => setFirstName(e.target.value)}></input>\n                        <input defaultValue={`${element.last_name}`} onChange={e => setLastName(e.target.value)}></input>\n                        <input defaultValue={element.prop_id} onChange={e => setPropId(e.target.value)}></input>\n                        <input defaultValue={element.email} onChange={e => setEmail(e.target.value)}></input>\n                        <input defaultValue={element.phone} onChange={e => setPhone(e.target.value)}></input>\n                        <input type='radio' defaultValue={element.pet} onClick={petBool === true ? () => setPetBool(false) : () => setPetBool(true)}></input>\n                        {/* <input defaultValue={element.approved} onchange={e => setApproved(e.targetValue)}></input> */}\n                        <button className='submit' onClick={() => submit(element)}>Save</button>\n                     </div>\n                    ) : (\n                        <div>\n                            <div>{element.user_id}</div>\n                            <div>{`${element.first_name} ${element.last_name}`}</div>\n                            <div>{currentAddress}</div>\n                            <div>{element.email}</div>\n                            <div>{element.phone}</div>\n                            {element.pets === true ? <div>Yes</div> : <div>No</div>}\n                            <div>{element.due_date}\n                        </div>\n                </div> \n                    )\n                )\n              }\n            </div>\n          )\n        })\n      }\n\n    return (\n        <div className='maint-req'>\n            {mapIt(currentTenants)}\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    console.log('state:', state)\n    return {\n      email: state.email,\n      user_id: state.user_id,\n      admin: state.admin,\n      approved: state.approved\n    }\n}\n\nexport default connect(mapStateToProps)(TenantList)","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Tenants/TenantRequestList.js",["138","139","140"],"import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nconst TenantRequestList = props => {\n\n    const [tenantRequests, setTenantRequests] = useState([])\n    const [addresses, setAddresses] = useState([])\n    const [admin, setAdmin] = useState(props.admin)\n  \n    useEffect(() => {\n      if (admin === false) {\n        return ('You do not have access to this data.')\n      } else if (admin === true) {\n        axios.get('/api/manager/tenants/false')\n          .then(res => {\n            setTenantRequests(res.data)\n          })\n          .catch(err => console.log(err))\n      }\n    }, [])\n\n    function mapIt(array) {\n        let currentAddress\n        return array.map((element) => {\n            for (let i = 0; i < addresses.length; i++) {\n               if (element.prop_id === addresses[i].prop_id) {\n                currentAddress = addresses[i].address\n            }  \n        }\n           \n          return (\n            <div key={element.user_id}>\n              <div>{element.user_id}</div>\n              <div>{`${element.first_name} ${element.last_name}`}</div>\n              <div>{currentAddress}</div>\n              <div>{element.email}</div>\n              <div>{element.phone}</div>\n              {element.pets === true ? <div>Yes</div> : <div>No</div>}\n              <div>{element.due_date}</div>\n              {admin === true && element.approved === false ? <button>Approve</button> : null}\n            </div>\n          )\n        })\n      }\n\n    return (\n        <div>\n            {mapIt(tenantRequests)}\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    console.log('state:', state)\n    return {\n      email: state.email,\n      user_id: state.user_id,\n      admin: state.admin,\n      approved: state.approved\n    }\n}\n\nexport default connect(mapStateToProps)(TenantRequestList)","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Popup.js",[],["141","142"],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Payments/Payments.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Payments/MakePayment.js",["143"],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { connect } from 'react-redux';\n\ntoast.configure();\n\nconst MakePayment = props => {\n    const [rentAmount, setRentAmount] = useState(1500);\n\n    const { user_id } = props;\n\n    // http://localhost:5555/api/tenant/36/rent\n\n    useEffect(() => {\n        axios.get(`/api/tenant/${user_id}/rent`)\n            .then(res => {\n                console.log(res.data)\n                setRentAmount(res.data[0].lease_amt)\n            })\n            .catch(err => console.log(err))\n    }, [props]);\n\n\n    async function handleToken(token) {\n        console.log(token, rentAmount)\n        await axios.post('/pay_rent', {\n            token,\n            rentAmount\n        }).then(res => {\n            console.log(res.data.status);\n            if (res.data.status === 'success') {\n                console.log('status = success')\n                toast('Success! Your rent has been paid!',\n                    { type: 'success' })\n            } else {\n                console.log('status = error')\n                toast('Something went wrong',\n                    { type: 'error' })\n            }\n            setRentAmount('')\n        }).catch(err => console.log(err))\n    }\n\n    return (\n        <div className='donate'>\n            <div className='container'>\n                <div>MakePayment.js</div>\n                <div> Your rent amount due:\n                    {rentAmount}\n                </div>\n                <StripeCheckout\n                    stripeKey='pk_test_51IEMDRHaijm3D4Gz5082wV01blikaeeyYMcLRDpCWBUPTHQSOhYA5t5lRF7VfAmzitNMVR1JIxYSuKwOPYPAmfY700a2qf4x3J'\n                    token={handleToken}\n                    billingAddress\n                    amount={rentAmount * 100}\n                    label='Pay Rent'\n\n                />\n            </div>\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    console.log(\"state:\", state);\n    return {\n        user_id: state.user_id,\n        admin: state.admin\n    }\n}\n\nexport default connect(mapStateToProps)(MakePayment)\n","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Properties/PropertiesList.js",["144","145"],"import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\n\nconst PropertiesList = props => {\n    const {setCurrentProperties, currentProperties} = props\n    const [admin, setAdmin] = useState(true)\n    const [address, setAddress] = useState('')\n    const [leaseAmt, setLeaseAmt] = useState()\n    const [leaseStatus, setLeaseStatus] = useState(null)\n    const [buttonId, setButtonId] = useState()\n    const [editBool, setEditBool] = useState(false)\n\n    useEffect(() => {\n        setAdmin(props.admin)\n      }, [])\n    \n      useEffect(() => {\n  \n         if (admin === true) {\n          axios.get('/api/manager/properties')\n            .then(res => {\n              setCurrentProperties(res.data)\n            })\n            .catch(err => console.log(err))\n        }\n      }, [props])\n  \n      function clickEdit(id) {\n          setEditBool(true)\n          setButtonId(id)\n      }\n  \n      function checkbox(checkbox) {\n          if (checkbox.checked === true) {\n              console.log('i am checked')\n              setLeaseStatus(true)\n          } else if (checkbox.checked === false){\n              console.log('i am not checked')\n              setLeaseStatus(false)\n          }\n      }\n  \n      function submit(element) {\n          axios.put(`/api/manager/properties/${element.prop_id}`, {\n              address: address !== '' ? address : element.address,\n              leaseAmt: leaseAmt ? leaseAmt : element.lease_amt,\n              leaseStatus: leaseStatus !== null ? leaseStatus : element.lease_status\n          })\n          .then(res => {\n                setEditBool(false)\n                setAddress('')\n                setLeaseAmt()\n                setLeaseStatus(null)\n              axios.get('/api/manager/properties')\n              .then(res => {\n                  setCurrentProperties(res.data)\n              })\n              .catch(err => console.log(err))\n          })\n          .catch(err => console.log(err))\n      }\n  \n      function mapIt(array) {\n          return array.map((element) => {\n            return (\n              <div key={element.prop_id}>\n              <button onClick={() => clickEdit(element.prop_id)}>Edit</button>\n                {editBool === false ? (\n                  <div>\n                      <div>{element.prop_id}</div>\n                      <div>{element.address}</div>\n                      <div>{`$${element.lease_amt}`}</div>\n                      {element.lease_status === true ? <div>Yes</div> : <div>No</div>}\n                  </div>\n                  ) : (\n                      element.prop_id === buttonId ? (\n                      <div>\n                          <div>{element.prop_id}</div>\n                          <input defaultValue={element.address} onChange={e => setAddress(e.target.value)}></input>\n                          <input defaultValue={element.lease_amt} onChange={e => setLeaseAmt(e.target.value)}></input>\n                          <input type='checkbox' name='leaseStatus' id='leaseStatus' defaultChecked={element.lease_status} onClick={() => checkbox(document.getElementById('leaseStatus'))}></input>\n                          <label htmlFor={'leaseStatus'}>Active Lease?</label>\n                          <button className='submit' onClick={() => submit(element)}>Save</button>\n                       </div>\n                      ) : (\n                          <div>\n                              <div>{element.prop_id}</div>\n                                <div>{element.address}</div>\n                                <div>{`$${element.lease_amt}`}</div>\n                                {element.lease_status === true ? <div>Yes</div> : <div>No</div>}\n                          </div>\n                      )\n                  )\n                }\n              </div>\n            )\n          })\n        }\n  \n      return (\n          <div className='maint-req'>\n              {mapIt(currentProperties)}\n          </div>\n      )\n  }\n  \n  function mapStateToProps(state) {\n      console.log('state:', state)\n      return {\n        email: state.email,\n        user_id: state.user_id,\n        admin: state.admin,\n        approved: state.approved\n      }\n  \n}\nexport default connect(mapStateToProps)(PropertiesList)",{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":16,"column":6,"nodeType":"152","endLine":16,"endColumn":8,"suggestions":"153"},{"ruleId":"150","severity":1,"message":"154","line":27,"column":8,"nodeType":"152","endLine":27,"endColumn":15,"suggestions":"155"},{"ruleId":"156","severity":1,"message":"157","line":2,"column":8,"nodeType":"158","messageId":"159","endLine":2,"endColumn":19},{"ruleId":"156","severity":1,"message":"160","line":4,"column":10,"nodeType":"158","messageId":"159","endLine":4,"endColumn":17},{"ruleId":"156","severity":1,"message":"161","line":8,"column":10,"nodeType":"158","messageId":"159","endLine":8,"endColumn":22},{"ruleId":"156","severity":1,"message":"162","line":9,"column":10,"nodeType":"158","messageId":"159","endLine":9,"endColumn":23},{"ruleId":"156","severity":1,"message":"163","line":10,"column":17,"nodeType":"158","messageId":"159","endLine":10,"endColumn":25},{"ruleId":"156","severity":1,"message":"164","line":15,"column":19,"nodeType":"158","messageId":"159","endLine":15,"endColumn":28},{"ruleId":"156","severity":1,"message":"165","line":16,"column":22,"nodeType":"158","messageId":"159","endLine":16,"endColumn":35},{"ruleId":"150","severity":1,"message":"154","line":34,"column":6,"nodeType":"152","endLine":34,"endColumn":8,"suggestions":"166"},{"ruleId":"156","severity":1,"message":"167","line":7,"column":12,"nodeType":"158","messageId":"159","endLine":7,"endColumn":24},{"ruleId":"156","severity":1,"message":"168","line":13,"column":35,"nodeType":"158","messageId":"159","endLine":13,"endColumn":41},{"ruleId":"156","severity":1,"message":"163","line":10,"column":17,"nodeType":"158","messageId":"159","endLine":10,"endColumn":25},{"ruleId":"156","severity":1,"message":"164","line":11,"column":19,"nodeType":"158","messageId":"159","endLine":11,"endColumn":28},{"ruleId":"150","severity":1,"message":"154","line":33,"column":6,"nodeType":"152","endLine":33,"endColumn":8,"suggestions":"169"},{"ruleId":"156","severity":1,"message":"170","line":2,"column":28,"nodeType":"158","messageId":"159","endLine":2,"endColumn":38},{"ruleId":"150","severity":1,"message":"171","line":20,"column":8,"nodeType":"152","endLine":20,"endColumn":10,"suggestions":"172"},{"ruleId":"150","severity":1,"message":"173","line":40,"column":8,"nodeType":"152","endLine":40,"endColumn":10,"suggestions":"174"},{"ruleId":"156","severity":1,"message":"175","line":8,"column":23,"nodeType":"158","messageId":"159","endLine":8,"endColumn":35},{"ruleId":"156","severity":1,"message":"163","line":9,"column":19,"nodeType":"158","messageId":"159","endLine":9,"endColumn":27},{"ruleId":"150","severity":1,"message":"173","line":21,"column":8,"nodeType":"152","endLine":21,"endColumn":10,"suggestions":"176"},{"ruleId":"146","replacedBy":"177"},{"ruleId":"148","replacedBy":"178"},{"ruleId":"150","severity":1,"message":"179","line":24,"column":8,"nodeType":"152","endLine":24,"endColumn":15,"suggestions":"180"},{"ruleId":"150","severity":1,"message":"171","line":16,"column":10,"nodeType":"152","endLine":16,"endColumn":12,"suggestions":"181"},{"ruleId":"150","severity":1,"message":"182","line":27,"column":10,"nodeType":"152","endLine":27,"endColumn":17,"suggestions":"183"},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["186"],"React Hook useEffect has missing dependencies: 'admin' and 'user_id'. Either include them or remove the dependency array.",["187"],"no-unused-vars","'MakePayment' is defined but never used.","Identifier","unusedVar","'connect' is defined but never used.","'tenantOpenMr' is assigned a value but never used.","'managerOpenMr' is assigned a value but never used.","'setAdmin' is assigned a value but never used.","'setUserId' is assigned a value but never used.","'setTenantInfo' is assigned a value but never used.",["188"],"'submitTenant' is assigned a value but never used.","'errors' is assigned a value but never used.",["189"],"'useReducer' is defined but never used.","React Hook useEffect has a missing dependency: 'props.admin'. Either include it or remove the dependency array. If 'setAdmin' needs the current value of 'props.admin', you can also switch to useReducer instead of useState and read 'props.admin' in the reducer.",["190"],"React Hook useEffect has a missing dependency: 'admin'. Either include it or remove the dependency array.",["191"],"'setAddresses' is assigned a value but never used.",["192"],["184"],["185"],"React Hook useEffect has a missing dependency: 'user_id'. Either include it or remove the dependency array.",["193"],["194"],"React Hook useEffect has missing dependencies: 'admin' and 'setCurrentProperties'. Either include them or remove the dependency array.",["195"],"no-global-assign","no-unsafe-negation",{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"200","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"205","fix":"207"},{"desc":"208","fix":"209"},{"desc":"203","fix":"210"},{"desc":"211","fix":"212"},"Update the dependencies array to be: [props]",{"range":"213","text":"214"},"Update the dependencies array to be: [admin, props, user_id]",{"range":"215","text":"216"},"Update the dependencies array to be: [admin, user_id]",{"range":"217","text":"218"},{"range":"219","text":"218"},"Update the dependencies array to be: [props.admin]",{"range":"220","text":"221"},"Update the dependencies array to be: [admin]",{"range":"222","text":"223"},{"range":"224","text":"223"},"Update the dependencies array to be: [props, user_id]",{"range":"225","text":"226"},{"range":"227","text":"221"},"Update the dependencies array to be: [admin, props, setCurrentProperties]",{"range":"228","text":"229"},[536,538],"[props]",[859,866],"[admin, props, user_id]",[1145,1147],"[admin, user_id]",[932,934],[746,748],"[props.admin]",[1308,1310],"[admin]",[646,648],[703,710],"[props, user_id]",[565,567],[829,836],"[admin, props, setCurrentProperties]"]