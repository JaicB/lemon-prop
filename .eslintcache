[{"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/index.js":"1","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/App.js":"2","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/reportWebVitals.js":"3","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Routes.js":"4","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/AccountNavigation.js":"5","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/redux/store.js":"6","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/LandingPage.js":"7","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/redux/reducer.js":"8","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Payments/PaymentList.js":"9","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/MaintReq/SingleMaintReq.js":"10","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/RequestAccess.js":"11","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/PasswordReset/RequestReset.js":"12","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Properties/Properties.js":"13","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/AccountDash/TheDashboard.js":"14","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/RequestSubmitted.js":"15","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/MaintReq/MaintReq.js":"16","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/PasswordReset/UpdatePassword.js":"17","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Tenants/Tenants.js":"18","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/Login.js":"19","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/MaintReq/MaintReqList.js":"20","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Tenants/TenantList.js":"21","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Tenants/TenantRequestList.js":"22","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Popup.js":"23","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Payments/Payments.js":"24","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Payments/MakePayment.js":"25"},{"size":846,"mtime":1612286956768,"results":"26","hashOfConfig":"27"},{"size":562,"mtime":1612289099787,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1611607556846,"results":"29","hashOfConfig":"27"},{"size":1881,"mtime":1612292382262,"results":"30","hashOfConfig":"27"},{"size":1738,"mtime":1612286956762,"results":"31","hashOfConfig":"27"},{"size":104,"mtime":1612286956768,"results":"32","hashOfConfig":"27"},{"size":412,"mtime":1612286956762,"results":"33","hashOfConfig":"27"},{"size":835,"mtime":1612286956768,"results":"34","hashOfConfig":"27"},{"size":1413,"mtime":1612301881666,"results":"35","hashOfConfig":"27"},{"size":147,"mtime":1612286956764,"results":"36","hashOfConfig":"27"},{"size":1072,"mtime":1612286956763,"results":"37","hashOfConfig":"27"},{"size":141,"mtime":1612286956765,"results":"38","hashOfConfig":"27"},{"size":135,"mtime":1612286956766,"results":"39","hashOfConfig":"27"},{"size":141,"mtime":1612286956762,"results":"40","hashOfConfig":"27"},{"size":437,"mtime":1612286956763,"results":"41","hashOfConfig":"27"},{"size":321,"mtime":1612286956763,"results":"42","hashOfConfig":"27"},{"size":147,"mtime":1612286956765,"results":"43","hashOfConfig":"27"},{"size":2205,"mtime":1612287388564,"results":"44","hashOfConfig":"27"},{"size":2072,"mtime":1612287388562,"results":"45","hashOfConfig":"27"},{"size":1854,"mtime":1612290720382,"results":"46","hashOfConfig":"27"},{"size":5284,"mtime":1612287388563,"results":"47","hashOfConfig":"27"},{"size":1864,"mtime":1612287388563,"results":"48","hashOfConfig":"27"},{"size":274,"mtime":1612287388563,"results":"49","hashOfConfig":"27"},{"size":357,"mtime":1612299457337,"results":"50","hashOfConfig":"27"},{"size":1800,"mtime":1612302900916,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"dlyh98",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/index.js",[],["109","110"],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/App.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/reportWebVitals.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Routes.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/AccountNavigation.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/redux/store.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/LandingPage.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/redux/reducer.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Payments/PaymentList.js",["111"],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\n// List of tenants past payments\n// Study maintReqList Component\n\nconst PaymentList = props => {\n    console.log('PAYMENT LIST PROPS:   ', props)\n\n    const [paymentsList, setPaymentsList] = useState([])\n    const { admin, user_id } = props\n\n    useEffect(() => {\n        if (admin === false) {\n            axios.get(`/api/tenant/${user_id}/payments`)\n                .then(res => {\n                    setPaymentsList(res.data)\n                })\n                .catch(err => console.log(err))\n        } else if (admin === true) {\n            axios.get('/api/manager/payments')\n                .then(res => {\n                    setPaymentsList(res.data)\n                })\n                .catch(err => console.log(err))\n        }\n    }, [])\n\n\n    let mappedList = paymentsList.map((el) => {\n        return (\n            <div key={el.invoice_id}>\n                <div> {el.date_paid} </div>\n                <div> {el.amt_paid} </div>\n            </div>\n        )\n    })\n\n    return (\n        <div>\n            <p>PaymentList</p>\n            <div> {mappedList} </div>\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    console.log(\"state:\", state);\n    return {\n        user_id: state.user_id,\n        admin: state.admin\n    }\n}\n\nexport default connect(mapStateToProps)(PaymentList)","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/MaintReq/SingleMaintReq.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/RequestAccess.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/PasswordReset/RequestReset.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Properties/Properties.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/AccountDash/TheDashboard.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/RequestSubmitted.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/MaintReq/MaintReq.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/PasswordReset/UpdatePassword.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Tenants/Tenants.js",["112"],"import React, {useState} from 'react'\nimport TenantList from '../Tenants/TenantList'\nimport TenantRequestList from '../Tenants/TenantRequestList'\n\nconst Tenants = props => {\n    const [newTenantDisplay, setNewTenantDisplay] = useState(false)\n    const [submitTenant, setSubmitTenant] = useState(false)\n\n    function newTenant() {\n        console.log('clicked')\n        setSubmitTenant(false)\n        setNewTenantDisplay(true)          \n    }\n\n    function submit() {\n        console.log('submitted')\n        setSubmitTenant(true)\n        setNewTenantDisplay(false)\n    }\n\n return (\n  <div>\n      <div>\n          <div>\n            <h1>Current Tenants</h1>\n            <TenantList />\n          </div>\n          <div>\n            <h1>Tenant Requests</h1>\n            <TenantRequestList />\n          </div>\n          <button className=\"submit\" onClick={newTenant}>New Tenant</button>\n      </div>\n      {newTenantDisplay === true ? (\n        <div>\n            <div>\n                <div>\n                    <div>Name: </div>\n                    <input></input> \n                </div>\n                <div>\n                    <div>Address: </div>\n                    <input></input> \n                </div>\n            </div>\n            <div>\n                <div>\n                    <div>Phone: </div>\n                    <input></input> \n                </div>\n                <div>\n                    <div>Email: </div>\n                    <input></input> \n                </div>\n            </div>\n            <div>\n                <div>\n                    <div>Password: </div>\n                    <input></input> \n                </div>\n                <div>\n                    <div>Due Date: </div>\n                    <input></input> \n                </div>\n            </div>\n            <div>\n                <div>\n                    <div>Password: </div>\n                    <input></input> \n                </div>\n                <div>\n                    <input type='radio' placeholder='Pets: '></input>\n                    <button className='Submit' onClick={submit}>Submit</button> \n                </div>\n            </div>\n        </div>) : null}\n  </div>\n )\n}\nexport default Tenants","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Landing/Login.js",["113"],"import React, { useState } from 'react'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport { loginUser } from '../../redux/reducer'\nimport { Link } from 'react-router-dom'\nimport Popup from '../Popup'\n\nconst Login = props => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [isOpen, setIsOpen] = useState(false)\n\n  const togglePopup = () => {\n    setIsOpen(!isOpen)\n  }\n\n  function submit() {\n    // setEmail(email)\n    // setPassword(password)\n    axios.post('/auth/login', { email, password })\n      .then((res) => {\n        console.log('login successful - 1')\n        props.loginUser(res.data.email, res.data.user_id, res.data.admin, res.data.approved)\n        console.log('login successful - 2')\n        props.history.push('/dashboard')\n      })\n      .catch(err => console.log(err))\n  }\n\n  return (\n    <div>\n      <input\n        placeholder='Email'\n        type=\"text\"\n        value={email}\n        onChange={e => setEmail(e.target.value)}>\n      </input>\n      <input\n        placeholder='Password'\n        type=\"text\"\n        value={password}\n        onChange={e => setPassword(e.target.value)}>\n      </input>\n      {/* <Link to='/dashboard'> */}\n      <button onClick={e => submit()}>Login</button>\n      {/* </Link> */}\n      <button>I need access</button>\n      <input type=\"button\"\n        value=\"Login (popup)\"\n        onClick={togglePopup} />\n      <p>Just a placeholder for any extra text we may need here</p>\n      {isOpen && <Popup content={<>\n        <b>Lemon Prop Mgmt</b>\n        <input\n          placeholder='Email'\n          type=\"text\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}>\n        </input>\n        <input\n          placeholder='Password'\n          type=\"text\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}>\n        </input>\n        <button onClick={e => submit()}>Log in</button>\n      </>}\n        handleClose={togglePopup} />\n      }\n    </div>\n  )\n}\n\n\nexport default connect(null, { loginUser })(Login)","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/MaintReq/MaintReqList.js",["114","115","116"],"import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nconst MaintReqList = props => {\n\n  const [myList, setMyList] = useState([])\n  const [openList, setOpenList] = useState([])\n  const [closedList, setClosedList] = useState([])\n  const [admin, setAdmin] = useState(props.admin)\n  const [user_id, setUserId] = useState(props.user_id)\n\n\n  useEffect(() => {\n    if (admin === false) {\n      axios.get(`/api/tenant/${user_id}/mr`)\n        .then(res => {\n          setMyList(res.data)\n        })\n        .catch(err => console.log(err))\n    } else if (admin === true) {\n      axios.get('/api/manager/mr/false')\n        .then(res => {\n          setOpenList(res.data)\n        })\n        .catch(err => console.log(err))\n      axios.get('/api/manager/mr/true')\n        .then(res => {\n          setClosedList(res.data)\n        })\n        .catch(err => console.log(err))\n    }\n  }, [])\n\n  function mapIt(array) {\n    return array.map((element) => {\n      return (\n        <div key={element.maint_req_id}>\n          <div>{element.date_sub}</div>\n          <div>{element.subject}</div>\n          {admin === false ? null : <div>{element.prop_id}</div>}\n          <div>{element.status}</div>\n          {admin === true && element.status === 'open' ? <button>Complete</button> : null}\n        </div>\n      )\n    })\n  }\n\n  return (\n    <div className='maint-req'>\n      <h1>Maintenance Request History</h1>\n      {admin === false ? mapIt(myList) : null}\n      {admin === true ? mapIt(openList) : null}\n      {admin === true ? mapIt(closedList) : null}\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  console.log('state:', state)\n  return {\n    email: state.email,\n    user_id: state.user_id,\n    admin: state.admin,\n    approved: state.approved\n  }\n}\n\nexport default connect(mapStateToProps)(MaintReqList)","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Tenants/TenantList.js",["117","118","119"],"import axios from 'axios'\nimport React, { useEffect, useReducer, useState } from 'react'\nimport { connect } from 'react-redux'\n\nconst TenantList = props => {\n    const [currentTenants, setCurrentTenants] = useState([])\n    const [addresses, setAddresses] = useState([])\n    const [admin, setAdmin] = useState(true)\n    const [editBool, setEditBool] = useState(false)\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [email, setEmail] = useState('')\n    const [phone, setPhone] = useState('')\n    const [propId, setPropId] = useState()\n    const [buttonId, setButtonId] = useState()\n    const [petBool, setPetBool] = useState()\n\n    useEffect(() => {\n      setAdmin(props.admin)\n    }, [])\n  \n    useEffect(() => {\n        console.log(admin)\n    //   if (admin === false) {\n    //     return ('You do not have access to this data.')\n    //   } else\n       if (admin === true) {\n        axios.get('/api/manager/tenants/true')\n          .then(res => {\n            console.log(res.data)\n            setCurrentTenants(res.data)\n          })\n          .catch(err => console.log(err))\n        axios.get('/api/manager/properties')\n        .then(res => {\n            setAddresses(res.data)\n        })\n        .catch(err => console.log(err))\n      }\n    }, [])\n\n    function clickEdit(id) {\n        setEditBool(true)\n        setButtonId(id)\n    }\n\n    function submit(element) {\n        axios.put(`/api/manager/tenants/${element.user_id}`, {\n            first_name: firstName !== '' ? firstName : element.first_name,\n            last_name: lastName !== '' ? lastName : element.last_name,\n            phone: phone !== '' ? phone : element.phone,\n            email: email !== '' ? email : element.email,\n            pet: petBool ? petBool : element.pet,\n            approved: true,\n            prop_id: propId !== '' ? propId : element.prop_id\n        })\n        .then(res => {\n            axios.get('/api/manager/tenants/true')\n            .then(res => {\n              setCurrentTenants(res.data)\n              setEditBool(false)\n            })\n            .catch(err => console.log(err))\n        })\n        .catch(err => console.log(err))\n    }\n\n    function mapIt(array) {\n        let currentAddress\n        return array.map((element) => {\n            for (let i = 0; i < addresses.length; i++) {\n               if (element.prop_id === addresses[i].prop_id) {\n                currentAddress = addresses[i].address\n            }  \n        }\n           \n          return (\n            <div key={element.user_id}>\n            <button onClick={() => clickEdit(element.user_id)}>Edit</button>\n              {editBool === false ? (\n                <div>\n                    <div>{element.user_id}</div>\n                    <div>{`${element.first_name} ${element.last_name}`}</div>\n                    <div>{currentAddress}</div>\n                    <div>{element.email}</div>\n                    <div>{element.phone}</div>\n                    {element.pets === true ? <div>Yes</div> : <div>No</div>}\n                    <div>{element.due_date}</div>\n                </div>\n                ) : (\n                    element.user_id === buttonId ? (\n                    <div>\n                        <div>{element.user_id}</div>\n                        <input defaultValue={`${element.first_name}`} onChange={e => setFirstName(e.target.value)}></input>\n                        <input defaultValue={`${element.last_name}`} onChange={e => setLastName(e.target.value)}></input>\n                        <input defaultValue={element.prop_id} onChange={e => setPropId(e.target.value)}></input>\n                        <input defaultValue={element.email} onChange={e => setEmail(e.target.value)}></input>\n                        <input defaultValue={element.phone} onChange={e => setPhone(e.target.value)}></input>\n                        <input type='radio' defaultValue={element.pet} onClick={petBool === true ? () => setPetBool(false) : () => setPetBool(true)}></input>\n                        {/* <input defaultValue={element.approved} onchange={e => setApproved(e.targetValue)}></input> */}\n                        <button className='submit' onClick={() => submit(element)}>Save</button>\n                     </div>\n                    ) : (\n                        <div>\n                            <div>{element.user_id}</div>\n                            <div>{`${element.first_name} ${element.last_name}`}</div>\n                            <div>{currentAddress}</div>\n                            <div>{element.email}</div>\n                            <div>{element.phone}</div>\n                            {element.pets === true ? <div>Yes</div> : <div>No</div>}\n                            <div>{element.due_date}\n                        </div>\n                </div> \n                    )\n                )\n              }\n            </div>\n          )\n        })\n      }\n\n    return (\n        <div className='maint-req'>\n            {mapIt(currentTenants)}\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    console.log('state:', state)\n    return {\n      email: state.email,\n      user_id: state.user_id,\n      admin: state.admin,\n      approved: state.approved\n    }\n}\n\nexport default connect(mapStateToProps)(TenantList)","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Tenants/TenantRequestList.js",["120","121","122"],"import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nconst TenantRequestList = props => {\n\n    const [tenantRequests, setTenantRequests] = useState([])\n    const [addresses, setAddresses] = useState([])\n    const [admin, setAdmin] = useState(props.admin)\n  \n    useEffect(() => {\n      if (admin === false) {\n        return ('You do not have access to this data.')\n      } else if (admin === true) {\n        axios.get('/api/manager/tenants/false')\n          .then(res => {\n            setTenantRequests(res.data)\n          })\n          .catch(err => console.log(err))\n      }\n    }, [])\n\n    function mapIt(array) {\n        let currentAddress\n        return array.map((element) => {\n            for (let i = 0; i < addresses.length; i++) {\n               if (element.prop_id === addresses[i].prop_id) {\n                currentAddress = addresses[i].address\n            }  \n        }\n           \n          return (\n            <div key={element.user_id}>\n              <div>{element.user_id}</div>\n              <div>{`${element.first_name} ${element.last_name}`}</div>\n              <div>{currentAddress}</div>\n              <div>{element.email}</div>\n              <div>{element.phone}</div>\n              {element.pets === true ? <div>Yes</div> : <div>No</div>}\n              <div>{element.due_date}</div>\n              {admin === true && element.approved === false ? <button>Approve</button> : null}\n            </div>\n          )\n        })\n      }\n\n    return (\n        <div>\n            {mapIt(tenantRequests)}\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    console.log('state:', state)\n    return {\n      email: state.email,\n      user_id: state.user_id,\n      admin: state.admin,\n      approved: state.approved\n    }\n}\n\nexport default connect(mapStateToProps)(TenantRequestList)","/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Popup.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Payments/Payments.js",[],"/Users/smithscomp/DDevMountain/group-projects/lemon-prop/src/Components/Payments/MakePayment.js",["123"],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":27,"column":8,"nodeType":"130","endLine":27,"endColumn":10,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":7,"column":12,"nodeType":"134","messageId":"135","endLine":7,"endColumn":24},{"ruleId":"132","severity":1,"message":"136","line":5,"column":10,"nodeType":"134","messageId":"135","endLine":5,"endColumn":14},{"ruleId":"132","severity":1,"message":"137","line":10,"column":17,"nodeType":"134","messageId":"135","endLine":10,"endColumn":25},{"ruleId":"132","severity":1,"message":"138","line":11,"column":19,"nodeType":"134","messageId":"135","endLine":11,"endColumn":28},{"ruleId":"128","severity":1,"message":"129","line":33,"column":6,"nodeType":"130","endLine":33,"endColumn":8,"suggestions":"139"},{"ruleId":"132","severity":1,"message":"140","line":2,"column":28,"nodeType":"134","messageId":"135","endLine":2,"endColumn":38},{"ruleId":"128","severity":1,"message":"141","line":20,"column":8,"nodeType":"130","endLine":20,"endColumn":10,"suggestions":"142"},{"ruleId":"128","severity":1,"message":"143","line":40,"column":8,"nodeType":"130","endLine":40,"endColumn":10,"suggestions":"144"},{"ruleId":"132","severity":1,"message":"145","line":8,"column":23,"nodeType":"134","messageId":"135","endLine":8,"endColumn":35},{"ruleId":"132","severity":1,"message":"137","line":9,"column":19,"nodeType":"134","messageId":"135","endLine":9,"endColumn":27},{"ruleId":"128","severity":1,"message":"143","line":21,"column":8,"nodeType":"130","endLine":21,"endColumn":10,"suggestions":"146"},{"ruleId":"132","severity":1,"message":"147","line":6,"column":8,"nodeType":"134","messageId":"135","endLine":6,"endColumn":19},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'admin' and 'user_id'. Either include them or remove the dependency array.","ArrayExpression",["150"],"no-unused-vars","'submitTenant' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","'setAdmin' is assigned a value but never used.","'setUserId' is assigned a value but never used.",["151"],"'useReducer' is defined but never used.","React Hook useEffect has a missing dependency: 'props.admin'. Either include it or remove the dependency array. If 'setAdmin' needs the current value of 'props.admin', you can also switch to useReducer instead of useState and read 'props.admin' in the reducer.",["152"],"React Hook useEffect has a missing dependency: 'admin'. Either include it or remove the dependency array.",["153"],"'setAddresses' is assigned a value but never used.",["154"],"'PaymentList' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},{"desc":"155","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"160","fix":"162"},"Update the dependencies array to be: [admin, user_id]",{"range":"163","text":"164"},{"range":"165","text":"164"},"Update the dependencies array to be: [props.admin]",{"range":"166","text":"167"},"Update the dependencies array to be: [admin]",{"range":"168","text":"169"},{"range":"170","text":"169"},[859,861],"[admin, user_id]",[932,934],[746,748],"[props.admin]",[1308,1310],"[admin]",[646,648]]