[{"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/index.js":"1","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/reportWebVitals.js":"2","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/App.js":"3","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Routes.js":"4","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/redux/store.js":"5","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/AccountNavigation.js":"6","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/PasswordReset/RequestReset.js":"7","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/MaintReq/SingleMaintReq.js":"8","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/AccountDash/TheDashboard.js":"9","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Landing/RequestSubmitted.js":"10","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/PasswordReset/UpdatePassword.js":"11","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Payments/PaymentList.js":"12","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Properties/Properties.js":"13","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Tenants/Tenants.js":"14","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Landing/LandingPage.js":"15","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/redux/reducer.js":"16","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Landing/RequestAccess.js":"17","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/MaintReq/MaintReq.js":"18","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Landing/Login.js":"19","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/MaintReq/MaintReqList.js":"20","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Popup.js":"21"},{"size":846,"mtime":1612021554962,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1611607895094,"results":"24","hashOfConfig":"23"},{"size":557,"mtime":1612021554958,"results":"25","hashOfConfig":"23"},{"size":1884,"mtime":1612021554962,"results":"26","hashOfConfig":"23"},{"size":104,"mtime":1611941029263,"results":"27","hashOfConfig":"23"},{"size":1738,"mtime":1612021554958,"results":"28","hashOfConfig":"23"},{"size":141,"mtime":1611941047683,"results":"29","hashOfConfig":"23"},{"size":147,"mtime":1611941047682,"results":"30","hashOfConfig":"23"},{"size":141,"mtime":1611941047679,"results":"31","hashOfConfig":"23"},{"size":437,"mtime":1611941047681,"results":"32","hashOfConfig":"23"},{"size":147,"mtime":1611941047683,"results":"33","hashOfConfig":"23"},{"size":138,"mtime":1611941047684,"results":"34","hashOfConfig":"23"},{"size":135,"mtime":1611941047684,"results":"35","hashOfConfig":"23"},{"size":0,"mtime":1611941029260,"results":"36","hashOfConfig":"23"},{"size":412,"mtime":1612021554959,"results":"37","hashOfConfig":"23"},{"size":835,"mtime":1612021554962,"results":"38","hashOfConfig":"23"},{"size":1072,"mtime":1612021554960,"results":"39","hashOfConfig":"23"},{"size":321,"mtime":1612021554961,"results":"40","hashOfConfig":"23"},{"size":2072,"mtime":1612213673707,"results":"41","hashOfConfig":"23"},{"size":2512,"mtime":1612021554961,"results":"42","hashOfConfig":"23"},{"size":274,"mtime":1612206162079,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1fyetth",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/index.js",[],["89","90"],"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/reportWebVitals.js",[],"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/App.js",[],"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Routes.js",[],"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/redux/store.js",[],"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/AccountNavigation.js",[],"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/PasswordReset/RequestReset.js",[],"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/MaintReq/SingleMaintReq.js",[],"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/AccountDash/TheDashboard.js",[],"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Landing/RequestSubmitted.js",[],"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/PasswordReset/UpdatePassword.js",[],"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Payments/PaymentList.js",[],"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Properties/Properties.js",[],"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Tenants/Tenants.js",[],"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Landing/LandingPage.js",[],"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/redux/reducer.js",[],"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Landing/RequestAccess.js",[],"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/MaintReq/MaintReq.js",[],"/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Landing/Login.js",["91"],"import React, { useState } from 'react'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport { loginUser } from '../../redux/reducer'\nimport { Link } from 'react-router-dom'\nimport Popup from '../Popup'\n\nconst Login = props => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [isOpen, setIsOpen] = useState(false)\n\n  const togglePopup = () => {\n    setIsOpen(!isOpen)\n  }\n\n  function submit() {\n    // setEmail(email)\n    // setPassword(password)\n    axios.post('/auth/login', { email, password })\n      .then((res) => {\n        console.log('login successful - 1')\n        props.loginUser(res.data.email, res.data.user_id, res.data.admin, res.data.approved)\n        console.log('login successful - 2')\n        props.history.push('/dashboard')\n      })\n      .catch(err => console.log(err))\n  }\n\n  return (\n    <div>\n      <input\n        placeholder='Email'\n        type=\"text\"\n        value={email}\n        onChange={e => setEmail(e.target.value)}>\n      </input>\n      <input\n        placeholder='Password'\n        type=\"text\"\n        value={password}\n        onChange={e => setPassword(e.target.value)}>\n      </input>\n      {/* <Link to='/dashboard'> */}\n      <button onClick={e => submit()}>Login</button>\n      {/* </Link> */}\n      <button>I need access</button>\n      <input type=\"button\"\n        value=\"Login (popup)\"\n        onClick={togglePopup} />\n      <p>Just a placeholder for any extra text we may need here</p>\n      {isOpen && <Popup content={<>\n        <b>Lemon Prop Mgmt</b>\n        <input\n          placeholder='Email'\n          type=\"text\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}>\n        </input>\n        <input\n          placeholder='Password'\n          type=\"text\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}>\n        </input>\n        <button onClick={e => submit()}>Log in</button>\n      </>}\n        handleClose={togglePopup} />\n      }\n    </div>\n  )\n}\n\n\nexport default connect(null, { loginUser })(Login)","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/MaintReq/MaintReqList.js",["92","93","94","95"],"import axios from 'axios'\nimport React, { useRef, useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n//import { useSelector } from 'react-redux'\n\n// import {loginUser} from '../../redux/reducer'\n\n\nconst MaintReqList = props => {\n  //const reducer = useSelector((state) => state.reducer\n\n//   const didMount = useDidMount()\n  const [myList, setMyList] = useState([])\n  const [openList, setOpenList] = useState([])\n  const [closedList, setClosedList] = useState([])\n  //   const [email, setEmail] = useState(props.email.email)\n  const [admin, setAdmin] = useState(props.admin)\n  const [user_id, setUserId] = useState(props.user_id)\n\n\n//   function useDidMount() {\n//     console.log('i am trying to mount here')\n//     const didMountRef = useRef(true)\n//     didMountRef.current = false\n//     return didMountRef.current\n//   }\n\n  useEffect(() => {\n    if (admin === false) {\n      console.log('I am a lowly tenant')\n      axios.get(`/api/tenant/${user_id}/mr`)\n        .then(res => {\n          setMyList(res.data)\n        })\n        .catch(err => console.log(err))\n    } else if (admin === true) {\n      console.log('I am a manager, yo')\n      axios.get('/api/manager/mr/false')\n        .then(res => {\n          setOpenList(res.data)\n        })\n        .catch(err => console.log(err))\n      axios.get('/api/manager/mr/true')\n        .then(res => {\n          setClosedList(res.data)\n        })\n        .catch(err => console.log(err))\n    }\n  }, [])\n\n  function mapIt(array) {\n    console.log('i am inside the mapIt function')\n    return array.map((element) => {\n      console.log('i am inside the maptrix')\n      return (\n        <div key={element.maint_req_id}>\n          <div>{element.date_sub}</div>\n          <div>{element.subject}</div>\n          {admin === false ? null : <div>{element.prop_id}</div>}\n          <div>{element.status}</div>\n          {admin === true && element.status === 'open' ? <button>Complete</button> : null}\n        </div>\n      )\n    })\n  }\n\n  return (\n    <div className='maint-req'>\n      {/* {useDidMount()} */}\n      <h1>Maintenance Request History</h1>\n      {admin === false ? mapIt(myList) : null}\n      {admin === true ? mapIt(openList) : null}\n      {admin === true ? mapIt(closedList) : null}\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  console.log('state:', state)\n  return {\n    email: state.email,\n    user_id: state.user_id,\n    admin: state.admin,\n    approved: state.approved\n  }\n}\n\nexport default connect(mapStateToProps)(MaintReqList)","/Users/jakebryant/DevMtn/group-project/lemon-prop/src/Components/Popup.js",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":5,"column":10,"nodeType":"102","messageId":"103","endLine":5,"endColumn":14},{"ruleId":"100","severity":1,"message":"104","line":2,"column":17,"nodeType":"102","messageId":"103","endLine":2,"endColumn":23},{"ruleId":"100","severity":1,"message":"105","line":17,"column":17,"nodeType":"102","messageId":"103","endLine":17,"endColumn":25},{"ruleId":"100","severity":1,"message":"106","line":18,"column":19,"nodeType":"102","messageId":"103","endLine":18,"endColumn":28},{"ruleId":"107","severity":1,"message":"108","line":49,"column":6,"nodeType":"109","endLine":49,"endColumn":8,"suggestions":"110"},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'setAdmin' is assigned a value but never used.","'setUserId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'admin' and 'user_id'. Either include them or remove the dependency array.","ArrayExpression",["113"],"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},"Update the dependencies array to be: [admin, user_id]",{"range":"116","text":"117"},[1465,1467],"[admin, user_id]"]